<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sage_SA.SDK</name>
    </assembly>
    <members>
        <member name="T:SimplySDK.SDKInstanceManager">
            <summary>
            Singleton class that manages global instances of ledgers and journals. 
            Provides methods for opening and closing the database.
            </summary>
        </member>
        <member name="T:SimplySDK.SDKInstanceManager.RemoteDataAccessMode">
            <summary>
            Supported modes for opening a company file shared via Remote Data Access.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.RemoteDataAccessMode.SINGLE_USER">
            <summary>
            Open in single-user (exclusive access) mode.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.RemoteDataAccessMode.MULTI_USER">
            <summary>
            Open in multi-user (non-exclusive access) mode.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.RemoteDataAccessMode.READ_ONLY">
            <summary>
            Open in read-only mode.
            </summary>
        </member>
        <member name="T:SimplySDK.SDKInstanceManager.SDKResult">
            <summary>
            The result that is returned from a SDK action.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS">
            <summary>
            The action was successful.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS_RETURN_TRUE">
            <summary>
            The action was successful and the result is a true value.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS_RETURN_FALSE">
            <summary>
            The action was successful and the result is a false value.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL">
            <summary>
            The action failed.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_PATH_NOT_EXIST">
            <summary>
            File and/or file path does not exist.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_FILENOTFOUND_LOSTSHARE">
            <summary>
            The network share is not found.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_CONNECTIONMGR_NONE">
            <summary>
            No Conection Manager exists.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_CONNECTIONMGR_INIT">
            <summary>
            Error communicating with connection manager.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_CONNECTIONMGR_AUTH">
            <summary>
            Invalid connection manager authentication.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_CONNECTIONMGR_TOOMANY">
            <summary>
            The number of simultaneous connections is over limit.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_CONNECTIONMGR_NOPORTS">
            <summary>
            All the ports have been used.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_MYSQL_INIT">
            <summary>
            Error initializing MySQL server.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_MYSQL_MEM">
            <summary>
            Not enough memory to initialize MySQL server.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_MYSQL_NOTRUNNING">
            <summary>
            MySQL server has closed after initialization.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_MYSQL_TIMEOUT">
            <summary>
            Timeout on establishing a connection to MySQL server.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_MYSQL_CLOSE">
            <summary>
            Error closing MySQL server.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_CONNECTIONMGR_VER">
            <summary>
            Connection manager version is incorrect.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_FILEREADONLY">
            <summary>
            One or more files or folders are read-only or do not sufficient access rights.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_ANOTHER_DATABASE_IS_OPEN">
            <summary>
            Another database is already open.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_DATABASE_CONNECTION_FAILED">
            <summary>
            There is an error connecting to the database.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_INVALID_SECURITY_DETAILS">
            <summary>
            There is an error opening the database with the supplied security settings.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_NOT_REMOTE_DATA_ACCESS_DATABASE">
            <summary>
            The action could not be completed because the provided database is not a Remote Data Access database.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_USER_LOGON_FAILED">
            <summary>
            User failed to log on.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_RDA_DATABASE_READONLY_MODE">
            <summary>
            The requested action could not be completed because the Remote Data Access database is opened in read only-mode.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_INIT_REMOTE_DATA_ACCESS">
            <summary>
            A Remote Data Access connection could not be established while connecting to the database.
            </summary>
        </member>
        <member name="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_NO_SAGEID_SIGNIN">
            <summary>
            There is no valid Sage ID sign-in. Sign-in can be invoked through a SDK method call or the Sage 50 application.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.IsRDADatabaseOpen">
            <summary>
            Gets if there is currently a Remote Data Access database open.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.SageIdBrowser">
            <summary>
            Get or set the custom browser implementation that performs Sage ID sign-in. 
            Set to null uses the default Windows Form embedded browser implementation to display the Sage ID sign-in.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.UseSage50SageId">
            <summary>
            Get or set if both the SDK and Sage 50 share the same Sage ID sign-in session.
            </summary>
        </member>
        <member name="E:SimplySDK.SDKInstanceManager.DatabaseClosing">
            <summary>
            Occurs when the database is closing.
            </summary>
        </member>
        <member name="E:SimplySDK.SDKInstanceManager.DatabaseClosed">
            <summary>
            Occurs when a database has been closed.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.Instance">
            <summary>
            Singleton instance of the SDK Manager.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.#ctor">
            <summary>
            private constructor
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.HandleSDKException(System.Exception)">
            <summary>
            Checks what kind of exception has occurred. 
            For ValidationException with strings too long, throw InvalidEntryException.
            For other ValidationException, do nothing - no data binding in SDK.
            For SDK exceptions, rethrow them.  
            For other exceptions, close the database, and then rethrow them.
            </summary>
            <param name="e">Exception that has occurred.</param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenDatabase(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Int16)">
            <summary>
            Opens a non-Remote Data Access Sage 50 database.
            </summary>
            <param name="filename">File name of the Sage 50 Accounting database (.SAI).</param>
            <param name="username">Username to log on to database.</param>      
            <param name="password">Password for the username.</param>      
            <param name="openMultiUserMode">Set to true to open database in multi-user mode, for First Step databases, this parameter is ignored and always opened in single-user mode.</param>      
            <param name="TPAppName">Name of the third party application opening the database.</param>      
            <param name="TPAppCode">Shortened name of the third party application opening the database - maximum 6 characters.</param>      
            <param name="TPAppVer">Version of the third party application opening the database.</param>      
            <returns>True if database if opened successfully.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenDatabase(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Int16,SimplySDK.SDKInstanceManager.SDKResult@)">
            <summary>
            Opens a non-Remote Data Access Sage 50 database.
            </summary>
            <param name="filename">File name of the Sage 50 Accounting database (.SAI).</param>
            <param name="username">Username to log on to database.</param>      
            <param name="password">Password for the username.</param>      
            <param name="openMultiUserMode">Set to true to open database in multi-user mode, for First Step databases, this parameter is ignored and always opened in single-user mode.</param>      
            <param name="TPAppName">Name of the third party application opening the database.</param>      
            <param name="TPAppCode">Shortened name of the third party application opening the database - maximum 6 characters.</param>      
            <param name="TPAppVer">Version of the third party application opening the database.</param>
            <param name="sdkResult">Returns <see cref="T:SimplySDK.SDKInstanceManager.SDKResult"/> that specifies success or reason of failure.</param>
            <returns>True if database if opened successfully.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.GetDatabaseVersion(System.String,System.String@,System.String@)">
            <summary>
            Get Sage 50 database version.
            </summary>
            <param name="filename">File name of the Sage 50 Accounting database
            (.SAI).</param>
            <param name="dbVersion">Sage 50 Accounting database version.</param>   
            <param name="dbRelease">Sage 50 Accounting database release.</param>   
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseDatabase">
            <summary>
            Closes a Sage 50 database.
            </summary>
            <returns>true when there is an opened database and it was closed successfully or there is no opened database; false when the opened database could not close and remains open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SetAlertImplementation(SimplySDK.Support.SDKAlert)">
            <summary>
            Sets a user-defined implementaion of how alerts should be displayed.
            </summary>
            <param name="alert">An object that is subclassed from the SDKAlert class.</param>      
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenGeneralJournal">
            <summary>
            Opens the general journal.
            </summary>
            <returns>An instance of a GeneralJournal object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenPurchasesJournal">
            <summary>
            Opens the pruchases journal
            </summary>
            <returns>An instance of a PurchasesJournal object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenSalesJournal">
            <summary>
            Opens the sales journal.
            </summary>
            <returns>An instance of a SalesJournal object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenAccountLedger">
            <summary>
            Opens the account ledger.
            </summary>
            <returns>An instance of an AccountLedger object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenVendorLedger">
            <summary>
            Opens the vendor ledger.
            </summary>
            <returns>An instance of a VendorLedger object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenCustomerLedger">
            <summary>
            Opens the customer ledger.
            </summary>
            <returns>An instance of a CustomerLedger object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenEmployeeLedger">
            <summary>
            Opens the employee ledger.
            </summary>
            <returns>An instance of an EmployeeLedger object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenInventoryLedger">
            <summary>
            Opens the inventory ledger.
            </summary>
            <returns>An instance of an InventoryLedger object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenProjectLedger">
            <summary>
            Opens the project ledger.
            </summary>
            <returns>An instance of a ProjectLedger object.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseGeneralJournal">
            <summary>
            Closes the general journal.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.ClosePurchasesJournal">
            <summary>
            Closes the purchases journal.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseSalesJournal">
            <summary>
            Closes the sales journal.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseAccountLedger">
            <summary>
            Closes the account ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseVendorLedger">
            <summary>
            Closes the vendor ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseCustomerLedger">
            <summary>
            Closes the customer ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseEmployeeLedger">
            <summary>
            Closes the employee ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseInventoryLedger">
            <summary>
            Closes the inventory ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.CloseProjectLedger">
            <summary>
            Closes the project ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsAccountLedgerOpen">
            <summary>
            Checks if the account ledger is open.
            </summary>
            <returns>True if account ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsVendorLedgerOpen">
            <summary>
            Checks if the vendor ledger is open.
            </summary>
            <returns>True if vendor ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsCustomerLedgerOpen">
            <summary>
            Checks if the customer ledger is open.
            </summary>
            <returns>True if customer ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsEmployeeLedgerOpen">
            <summary>
            Checks if the employee ledger is open.
            </summary>
            <returns>True if employee ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsInventoryLedgerOpen">
            <summary>
            Checks if the project ledger is open.
            </summary>
            <returns>True if project ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsProjectLedgerOpen">
            <summary>
            Checks if the project ledger is open.
            </summary>
            <returns>True if project ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsGeneralJournalOpen">
            <summary>
            Checks if the general journal ledger is open.
            </summary>
            <returns>True if general ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsBankRecJournalOpen">
            <summary>
            Checks if the bank rec journal ledger is open.
            </summary>
            <returns>True if bank rec ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsPurchasesJournalOpen">
            <summary>
            Checks if the purchases journal ledger is open
            </summary>
            <returns>True if purchases ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsPaymentsJournalOpen">
            <summary>
            Checks if the payments journal ledger is open.
            </summary>
            <returns>True if payments ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsSalesJournalOpen">
            <summary>
            Checks if the sales journal ledger is open.
            </summary>
            <returns>True if sales ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsReceiptsJournalOpen">
            <summary>
            Checks if the receipts journal ledger is open.
            </summary>
            <returns>True if receipts ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsPayrollJournalOpen">
            <summary>
            Checks if the payroll journal ledger is open.
            </summary>
            <returns>True if payroll ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsAutoPayrollJournalOpen">
            <summary>
            Checks if the autopayroll journal ledger is open.
            </summary>
            <returns>True if autopayroll ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsAdjustmentsJournalOpen">
            <summary>
            Checks if the adjustments journal ledger is open.
            </summary>
            <returns>True if adjustments ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsItemAssemblyJournalOpen">
            <summary>
            Checks if the item assembly journal ledger is open
            </summary>
            <returns>True if item assembly ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsTimeBillingJournalOpen">
            <summary>
            Checks if the time and billing journal ledger is open.
            </summary>
            <returns>True if time and billing ledger is open.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsRemoteDataAccessDatabase(System.String)">
            <summary>
            Checks if the database is a Remote Data Access database or not.
            </summary>
            <param name="filename">path to database</param>
            <returns>
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS_RETURN_TRUE"/> if the database is a Remote Data Access database.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS_RETURN_FALSE"/> if the database is not a Remote Data Access database.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_ANOTHER_DATABASE_IS_OPEN"/> if another database is already open.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_PATH_NOT_EXIST"/> if the file and/or file path does not exist.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_DATABASE_CONNECTION_FAILED"/> if there is an error connecting to the database.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_INVALID_SECURITY_DETAILS"/> if there is an error opening the database with default security settings.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL"/> if an unspecified error occurred.
            </returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SageIDLogin(System.String@)">
            <summary>
            Attempts to login with a Sage Id if the user is not already logged in.
            </summary>
            <param name="loggedInEmail">Returns the email address of the Sage ID currently logged in.</param>
            <returns>true if the user is logged in, false if user is not logged in.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.IsSageIDUserLoggedIn(System.String@)">
            <summary>
            Checks if the user is logged in or not.
            </summary>
            <param name="loggedInEmail">Returns the email address of the Sage ID currently logged in.</param>
            <returns>true if the user is logged in, false if user is not logged in.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SageIDLogout">
            <summary>
            Attempts to log out if the user is logged in.
            </summary>
            <returns>true if the user is logged out, false if user is not logged out.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.GetRemoteDataAccessCompanies">
            <summary>
            Get a list of Remote Data Access Companies that can be downloaded.
            </summary>
            <returns>a list of <see cref="T:SimplySDK.Support.RDACompanyInfo"/> detailing all companies that can be downloaded.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenRemoteDataAccessDatabase(System.String,System.String,System.String,System.Nullable{SimplySDK.SDKInstanceManager.RemoteDataAccessMode},System.String,System.String,System.Int16)">
            <summary>
            Opens a Remote Data Access Sage 50 database.
            </summary>
            <param name="filename">File name of the Sage 50 Accounting database (.SAI).</param>
            <param name="username">Username to log on to database.</param>      
            <param name="password">Password for the username.</param>      
            <param name="mode">Specify an optional Remote Data Access mode to open the database. If this value is null, the mode will be prompted for (through a <see cref="T:SimplySDK.Support.SDKAlert"/>) during the opening process.</param>      
            <param name="TPAppName">Name of the third party application opening the database.</param>      
            <param name="TPAppCode">Shortened name of the third party application opening the database - maximum 6 characters.</param>      
            <param name="TPAppVer">Version of the third party application opening the database.</param>
            <returns>
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS"/> if database opened.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_NOT_REMOTE_DATA_ACCESS_DATABASE"/> if the database is not connected to Remote Data Access.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_ANOTHER_DATABASE_IS_OPEN"/> if another database is already open.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_PATH_NOT_EXIST"/> if the file and/or file path does not exist.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_DATABASE_CONNECTION_FAILED"/> if there is an error connecting to the database.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_INVALID_SECURITY_DETAILS"/> if there is an error opening the database with default security settings.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_NO_SAGEID_SIGNIN"/> if Sage ID sign-in is required.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL"/> if an unspecified error occurred.
            </returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.GetRemoteDataAccessOnlineUsers(System.Collections.Generic.List{SimplySDK.Support.RDAUser}@)">
            <summary>
            After successfully opening a Remote Data Access database, get all the online users.
            </summary>
            <param name="users">Returns a list of <see cref="T:SimplySDK.Support.RDAUser"/> detailing the user's email and the time that they last logged in.</param>
            <returns>
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.SUCCESS"/> if successful getting online users.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_NOT_REMOTE_DATA_ACCESS_DATABASE"/> if not connected to database or if database is not a Remote Data Access database.
            <see cref="F:SimplySDK.SDKInstanceManager.SDKResult.FAIL_RDA_DATABASE_READONLY_MODE"/> if database is in read-only mode.
            </returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.DownloadCompany(System.String,System.String)">
            <summary>
            Download the company files from the cloud to the specified location and with a chosen file name.
            </summary>
            <param name="companyId">The identifier of the Remote Data Access company to download. This value can be obtained from calling <see cref="M:SimplySDK.SDKInstanceManager.GetRemoteDataAccessCompanies"/>.</param>
            <param name="fileName">The local file system path to save the Remote Data Access company.</param>
            <returns>true if the company downloaded successfully, or false if the download could not be completed.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.ClearCollaborationMode">
            <summary>
            Clear Sage Drive related flags.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.ConvertCMErrorToSDKResult(Simply.ConnectionManagerService.ConnectionManagerError)">
            <summary>
            Convert a given <see cref="T:Simply.ConnectionManagerService.ConnectionManagerError"/> to a <see cref="T:SimplySDK.SDKInstanceManager.SDKResult"/> for returning to client code.
            </summary>
            <param name="cmError">The Connection Manager error</param>
            <returns>the <see cref="T:SimplySDK.SDKInstanceManager.SDKResult"/> equivalent</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.DoSageIDLogin(System.Boolean,System.String@)">
            <summary>
            Performs either a Sage Id login or a check if already logged in.
            </summary>
            <param name="promptUser">true to display the sage id login window; otherwise false to just perform a logged in check</param>
            <param name="loggedInEmail">Returns the email address of the Sage ID currently logged in</param>
            <returns>true if the user is logged in, false if user is not logged in.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.GetCompanySageDriveSharedActive">
            <summary>
            Get if the current connected company file is in active Sage Drive shared mode.
            </summary>
            <returns>true if company is active Sage Drive shared; otherwise false</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.InitializeSageDriveCollaboration">
            <summary>
            Initialize the Sage Drive instances for the singleton CollaborationUtil
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.OpenDatabase(System.Boolean,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Int16,SimplySDK.SDKInstanceManager.SDKResult@)">
            <summary>
            Opens a Sage 50 database.
            </summary>
            <param name="openAsShared">Set to true to open company as Sage Drive-shared; otherwise false as a non-Sage Drive company.</param>
            <param name="filename">File name of the Sage 50 Accounting database (.SAI).</param>
            <param name="username">Username to log on to database.</param>      
            <param name="password">Password for the username.</param>      
            <param name="openMultiUserMode">Set to true to open database in multi-user mode; for First Step databases, this parameter is ignored and always opened in single-user mode; for RDA databases, this parameter is ignored and prompted for during opening</param>      
            <param name="TPAppName">Name of the third party application opening the database.</param>      
            <param name="TPAppCode">Shortened name of the third party application opening the database - maximum 6 characters.</param>      
            <param name="TPAppVer">Version of the third party application opening the database.</param>      
            <param name="sdkResult">Returns SDKResult that specifies success or reason of failure</param>
            <returns>True if database if opened successfully.</returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SetupSageDriveData(System.String,System.Int32@,System.Boolean,System.Boolean@)">
            <summary>
            Setup the Sage Drive data at startup 
            </summary>
            <param name="filename"></param>
            <param name="goOn"></param>
            <param name="openAsShared"></param>
            <param name="createSDRestorePoint"></param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SetupSageDriveFlushUsers(System.Object,System.EventArgs)">
            <summary>
            Flush users when setting up sage drive at startup
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.InitSageDriveState(System.String)">
            <summary>
            Initialize Sage Drive State and set the collaboration flags
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKInstanceManager_CompanyClosed">
            <summary>
            Event handler for company closing.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.FlushAllUserLogs(System.String)">
            <summary>
            Open a company file and flush all user logs
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SetUseSage50SageId(System.Boolean)">
            <summary>
            Enable or disable the use of sharing the same Sage ID login session as Sage 50.
            </summary>
            <param name="enable">true to share with Sage 50; false for SDK to use own session</param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.ValidateSageIdLogin">
            <summary>
            Peforms validation on Sage Id login.
            </summary>
        </member>
        <member name="T:SimplySDK.SDKInstanceManager.SDKDataFile">
            <summary>
            Overrides CheckDatabaseVersion function in the class DataFile to check for database version at the appropriate time
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKDataFile.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            constructor. 
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.SDKDataFile.SkipCheckVersion">
            <summary>
            Gets the flag to determine if we should skip to check the version 
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.SDKDataFile.HideDatabaseIncompatibleAlert">
            <summary>
            Gets the flag for whether we should display an alert when CheckDatabaseVersion is false
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKDataFile.OpenAndCheckData(System.String,System.String)">
            <summary>
            This method is used only when company is opened in .NET only.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKDataFile.CheckDatabaseVersion">
            <summary>
            Checks the database version
            </summary>
        </member>
        <member name="T:SimplySDK.SDKInstanceManager.SDKUserLogOn">
            <summary>
            Class used for logging on to the database from the SDK. 
            Serial number, key code, and user cap checks are omitted since SDk does not require them.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.SDKUserLogOn.OmitIdCheck">
            <summary>
            Gets the flag to determine if we should omit serial/key code checking
            </summary>
        </member>
        <member name="P:SimplySDK.SDKInstanceManager.SDKUserLogOn.OmitUserCapCheck">
            <summary>
            Gets the flag to determine if we should omit user cap checking.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKUserLogOn.FillInUserLogInfo(Sage.Simply.Domain.Entities.UserLog,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Fills in user log information.
            </summary>
            <param name="userlog">Userlog object to fill.</param>
            <param name="userId">The user Id.</param>
            <param name="productId">The key code.</param>
            <param name="serial">The serial number.</param>
            <param name="exclusive">True if in single-user mode.</param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKUserLogOn.SDKLogOnUser(System.String,System.Boolean,System.String,System.String,System.String,System.Int16,System.Int32@)">
            <summary>
            This function logs a user onto the database for the SDK.
            </summary>
            <param name="databaseName">path to the database.</param>
            <param name="exclusive">true if in exclusive mode.</param>
            <param name="username">Username to log on to database.</param>      
            <param name="password">Password for the username.</param>  
            <param name="TPAppName">Name of the third party application opening the database.</param>      
            <param name="TPAppVer">Version of the third party application opening the database.</param>      
            <param name="userId">return value - user Id for the username.</param>
        </member>
        <member name="M:SimplySDK.SDKInstanceManager.SDKUserLogOn.FlushAllUserLog">
            <summary>
            Remove all users from the user log table regardless of process id
            </summary>
        </member>
        <member name="T:SimplySDK.GeneralModule.AccountLedger">
            <summary>
            Represents an instance of an account ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.#ctor">
            <summary>
            Initializes a new instance of the AccountLedger class.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.Model">
            <summary>
            Gets the ledger model.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.Observer">
            <summary>
            Gets the account ledger observer.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.IsLedgerMutexed">
            <summary>
            Gets the mutex.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.CanModifyLedger">
            <summary>
            Gets the modify rights.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.Number">
            <summary>
            Gets or sets the Account Number.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.Name">
            <summary>
            Gets or sets the Account Name.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.NameAlt">
            <summary>
            Gets or sets the Alternate Account Name.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.Type">
            <summary>
            Gets or sets the Account Type.
            </summary>
            <remarks>
            Accepted values: <br></br>
            H - Group Heading. <br></br>
            G - Group Account. <br></br>
            A - Subgroup Account. <br></br>
            S - Subgroup Total. <br></br>
            T - Group Total. <br></br>
            X - Current Earnings Account (Get only).<br></br>
            </remarks>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.Class">
            <summary>
            Gets or sets the Account class. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.CurrencyCode">
            <summary>
            Gets or sets the Account Currency Code. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.AccountLedger.GifiCode">
            <summary>
            Gets or sets the Account GIFI Code. 
            </summary>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.InitializeNew">
            <summary>
            Creates a new blank account record.    
            </summary>
            <returns>True if account record is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.Save">
            <summary>
            Save the account record. 
            </summary>
            <returns>True if account record is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.LoadByAccountNumber(System.Int32)">
            <summary>
            Load an account record by Account Number. 
            </summary>
            <param name="acctNum">Account number to load.</param>
            <returns>True if account record is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.LoadByAccountName(System.String)">
            <summary>
            Load an account record by Account Name. 
            </summary>
            <param name="name">Name of account to load.</param>
            <returns>True if account record is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.LoadByAccountDisplayString(System.String)">
            <summary>
            Load an account record by display string.  Display string depends whether or not account numbers are shown or not.
            </summary>
            <param name="name">Display string of account to load.</param>
            <returns>True if account record is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.ValidateAccountNumLength(System.Int32)">
            <summary>
            Validates account number by checking that it is the proper length. 
            If it is valid, return the value in 8 digits. 
            </summary>
            <param name="acctNum">Account number to validate.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.AccountLedger.FormatAccountNumber(System.Int32)">
            <summary>
            Gets the account number in the correct number of digits. 
            </summary>
            <param name="acctNum">Account number to validate.</param>
        </member>
        <member name="T:SimplySDK.GeneralModule.GeneralJournal">
            <summary>
            Represents an instance of a general journal.
            </summary>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.#ctor">
            <summary>
            Initializes a new instance of the GeneralJournal class.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.GJModel">
            <summary>
            Get general journal model
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.Source">
            <summary>
            Gets or sets the source string. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.Comment">
            <summary>
            Gets or sets the comment string. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.IsPostButtonEnabled">
            <summary>
            Check if the journal can be posted.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.IsInAdjustMode">
            <summary>
            Gets if the journal is in adjust mode.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.IsInLookup">
            <summary>
            Gets if the journal is in lookup mode.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.NumberOfJournalLines">
            <summary>
            Gets the number of lines in the journal.
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.CanModifyJournal">
            <summary>
            Check if the journal can be modified. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.HasEditRights">
            <summary>
            Gets the journal edit rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.HasViewRights">
            <summary>
            Gets the journal lookup rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.GeneralModule.GeneralJournal.Model">
            <summary>
            Gets the model object of this journal. 
            </summary>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.DoRcStore">
            <summary>
            Mimic clicking store recurring entry button. 
            </summary>
            <returns>An instance of a RcStore object if entry can be stored, null otherwise.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.DoRcRecall">
            <summary>
            Mimic clicking recall recurring entry button. 
            </summary>
            <returns>An instance of a RcRecall object.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.DoSalesTax">
            <summary>
            Mimic clicking Sales tax button when sales tax is enabled.
            </summary>
            <returns>An instance of a GJTax object if there is sales tax lines, null otherwise.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.AdjustJournalEntry(System.Int32)">
            <summary>
            Adjust a journal entry. 
            </summary>
            <param name="jourNum">Journal number of the entry to load.</param>
            <returns>True if loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.LookupJournalEntry(System.Int32,System.Boolean)">
            <summary>
            Lookup a journal entry.
            </summary>
            <param name="jourNum">Journal number of the entry to load.</param>
            <param name="lastYear">Which year's journal entry.</param>
            <returns>True if loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.SetAccount(System.String,System.Int32)">
            <summary>
            Sets the account number of a line in the journal. 
            </summary>
            <param name="account">Account number to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.VerifyAccount(System.String,System.Int32)">
            <summary>
            Verify the account of given line is the same as the given account. 
            </summary>
            <param name="account">Account to verify.</param>
            <param name="lineNum">Which line.</param>
            <returns>True if verified.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.SetCredit(System.Double,System.Int32)">
            <summary>
            Sets the credit amount of a line in the journal. 
            </summary>
            <param name="credit">Amount to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.SetDebit(System.Double,System.Int32)">
            <summary>
            Sets the debit amount of a line in the journal. 
            </summary>
            <param name="debit">Amount to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.SetComment(System.String,System.Int32)">
            <summary>
            Sets the line comment. 
            </summary>
            <param name="comment">Comment to set.</param>
            <param name="lineNum">Line to set.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.GetAccount(System.Int32)">
            <summary>
            Gets the account string of a line in the journal. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>The account string.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.GetCredit(System.Int32)">
            <summary>
            Gets the credit amount of a line in the journal. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>The credit amount.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.GetDebit(System.Int32)">
            <summary>
            Gets the debit amount of a line in the journal. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>The debit amount.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.GetComment(System.Int32)">
            <summary>
            Gets the line comment. 
            </summary>
            <param name="lineNum">Line to set.</param>
            <returns>The comment.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.RemoveJournalLine(System.Int32)">
            <summary>
            Remove a grid line in journal.
            </summary>
            <param name="lineNumber">The line number of the line to be removed.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.GetAmount(System.Int32,System.String)">
            <summary>
            Gets the amount. 
            </summary>
            <param name="lineNum">Which line.</param>
            <param name="field">Which field.</param>
            <returns>Amount.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.SetAmount(System.Double,System.Int32,System.String)">
            <summary>
            Sets the amount to given line to given field. 
            </summary>
            <param name="amount">Amount to set.</param>
            <param name="lineNum">Line to set.</param>
            <param name="field">Field to set.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.IsLineNotInRange(System.Int32)">
            <summary>
            Check if given line number is in range. 
            </summary>
            <param name="lineNum">Line number to check.</param>
            <returns>True if line is not in range.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.GetLineByLineNumber(System.Int32)">
            <summary>
            Gets the line object of given line number. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>An instance of a line object.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GeneralJournal.SetLineInfo(System.String,System.Int32,System.Object)">
            <summary>
            Sets the given property of the given row with the given value. 
            </summary>
            <param name="columnName">The column name to set.</param>
            <param name="lineNum">The line number.</param>
            <param name="value">The value to set the column and row to.</param>
        </member>
        <member name="T:SimplySDK.GeneralModule.GJTax">
            <summary>
            GJSales mimics the behaviour of Sales tax dialog in general journal. 
            </summary>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.#ctor(SimplySDK.GeneralModule.GeneralJournal)">
            <summary>
            Initializes a new instance of the GJTax class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the GJTax.</param>
        </member>
        <member name="P:SimplySDK.GeneralModule.GJTax.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.SetTaxType(System.Boolean)">
            <summary>
            Sets the tax type to sales if passed value is true, purchase if false. 
            </summary>
            <param name="sales">Sales tax if true.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.GetTaxTypeIsSales">
            <summary>
            Gets the sales tax type. 
            </summary>
            <returns>True if sales, false if purchases.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.SetTaxAuth(System.String,System.Int32)">
            <summary>
            Sets the tax authority.
            </summary>
            <param name="auth">Tax auth to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.GetTaxAuth(System.Int32)">
            <summary>
            Gets the tax auth in string for given line. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>Tax auth in string.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.SetTaxCode(System.String,System.Int32)">
            <summary>
            Sets the tax code.
            </summary>
            <param name="code">Tax code to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.GetTaxCode(System.Int32)">
            <summary>
            Gets the tax code in string for given line. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>Tax code in string.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.SetTaxableAmount(System.Double,System.Int32)">
            <summary>
            Sets the taxable amount at given line. 
            </summary>
            <param name="amount">Amount to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.GetTaxableAmount(System.Int32)">
            <summary>
            Gets the taxable amount at given line. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>Taxable amount.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.SetOtherTaxAmount(System.Double,System.Int32)">
            <summary>
            Sets the other tax amount at given line. 
            </summary>
            <param name="amount">Amount to set.</param>
            <param name="lineNum">Which line.</param>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.GetOtherTaxAmount(System.Int32)">
            <summary>
            Gets the other tax amount at given line. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>Other tax amount.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.BuildTaxAuthList(Simply.Domain.Journals.GeneralJournal.GJSalesTaxLine)">
            <summary>
            Build tax auth list for given line. 
            </summary>
            <param name="line">Line instance.</param>
            <returns>tax auth list.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.BuildTaxCodeList(Simply.Domain.Journals.GeneralJournal.GJSalesTaxLine)">
            <summary>
            Build tax code list for given line. 
            </summary>
            <param name="line">Line instance.</param>
            <returns>tax code list.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.GetTaxLine(System.Int32)">
            <summary>
            Gets the tax line by line number. 
            </summary>
            <param name="lineNum">Which line.</param>
            <returns>Line instance.</returns>
        </member>
        <member name="M:SimplySDK.GeneralModule.GJTax.LineNumIsNotInRange(System.Int32)">
            <summary>
            Check if given line number is not in range. 
            </summary>
            <param name="lineNum">Line number to check.</param>
            <returns>True if not in range.</returns>
        </member>
        <member name="T:SimplySDK.InventoryModule.InventoryLedger">
            <summary>
            Represents an instance of an inventory ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.InventoryModule.InventoryLedger.#ctor">
            <summary>
            Initializes a new instance of the InventoryLedger class.
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.Model">
            <summary>
            Get ledger model
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.Observer">
            <summary>
            Gets the inventory ledger observer. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.CanModifyLedger">
            <summary>
            Gets the modify rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.Number">
            <summary>
            Gets or sets the Inventory Number. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.Name">
            <summary>
            Gets or sets the Inventory Name. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.NameAlt">
            <summary>
            Gets or sets the Alternate Inventory Name. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.IsServiceType">
            <summary>
            Gets or sets the Service Type. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.IsActivityType">
            <summary>
            Gets or sets the Service Activity Type. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.StockingUnit">
            <summary>
            Gets or sets the Stocking Unit Name. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.StockingUnitAlt">
            <summary>
            Gets or sets the Alternate Stocking Unit Name. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.RegularPrice">
            <summary>
            Gets or sets the Regular Price. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.PreferredPrice">
            <summary>
            Gets or sets the Preferred Price. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.AssetAccount">
            <summary>
            Gets or sets the Asset Account. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.RevenueAccount">
            <summary>
            Gets or sets the Revenue Account. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.ExpenseAccount">
            <summary>
            Gets or sets the Expense Account. 
            </summary>
        </member>
        <member name="P:SimplySDK.InventoryModule.InventoryLedger.VarianceAccount">
            <summary>
            Gets or sets the Variance Account. 
            </summary>
        </member>
        <member name="M:SimplySDK.InventoryModule.InventoryLedger.GetAPrice(System.Int32)">
            <summary>
            Gets a specific home currency price from the inventory price list. 
            </summary>
            <param name="PriceListId">The ID or the price list.</param>
            <returns>The price.</returns>
        </member>
        <member name="M:SimplySDK.InventoryModule.InventoryLedger.SetAPrice(System.Int32,System.Double)">
            <summary>
            Sets a specific home currency price to the inventory price list. 
            </summary>
            <param name="PriceListId">The ID or the price list.</param>
            <param name="price">Price to set.</param>
        </member>
        <member name="M:SimplySDK.InventoryModule.InventoryLedger.LoadByPartCode(System.String)">
            <summary>
            Load an inventory record by part code. 
            </summary>
            <param name="partCode">Part code of item to load.</param>
            <returns>True if inventory record is loaded successfully.</returns>
        </member>
        <member name="T:SimplySDK.PayableModule.VendorLedger">
            <summary>
            Represents an instance of a vendor ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.PayableModule.VendorLedger.#ctor">
            <summary>
            Initializes a new instance of the VendorLedger class.
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.VendorLedger.Model">
            <summary>
            Gets the ledger model. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.VendorLedger.Observer">
            <summary>
            Gets the vendor ledger observer. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.VendorLedger.CanModifyLedger">
            <summary>
            Gets the modify rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.VendorLedger.TaxId">
            <summary>
            Gets or sets the Vendor Tax Id. 
            </summary>
        </member>
        <member name="M:SimplySDK.PayableModule.VendorLedger.LoadByName(System.String)">
            <summary>
            Load a vendor record by name. 
            </summary>
            <param name="name">Vendor to load.</param>
            <returns>True if vendor record is loaded successfully.</returns>
        </member>
        <member name="T:SimplySDK.PayableModule.PurchasesJournal">
            <summary>
            Represents an instance of a purchase journal.
            </summary>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.#ctor">
            <summary>
            Initializes a new instance of the PurchasesJournal class.
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.HasEditRights">
            <summary>
            Gets the journal edit rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.HasViewRights">
            <summary>
            Gets the journal lookup rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.Model">
            <summary>
            Gets the journal model. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.IsShiptoVisible">
            <summary>
            Gets if the ship to addresses is visible. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.DutyTotalAmount">
            <summary>
            Gets the duty total amount. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.IsDutyColumnShown">
            <summary>
            Gets if the is duty fields are visible. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.IsInvoiceReceived">
            <summary>
            Gets or sets if the invoice is received.
            </summary>
        </member>
        <member name="P:SimplySDK.PayableModule.PurchasesJournal.UseVendorItemNumDesc">
            <summary>
            Gets or sets if want to use Vendor item number and description or the default.
            </summary>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.SetShipToAddressLine(System.String,System.Int32)">
            <summary>
            Sets the ship address line. 
            </summary>
            <param name="address">Address to set.</param>
            <param name="lineNumber">Address line number, start at 1.</param>
            <returns>Ship Address line at given line number after set.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.SetLineAccount(System.String,System.Int32)">
            <summary>
            Sets the account number for given line number.
            </summary>
            <param name="account">Account number in string.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Account number for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.GetTaxAmount1(System.Int32)">
            <summary>
            Gets the TaxAmount1 for a given line number. 
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>TaxAmount1 for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.GetTaxAmount2(System.Int32)">
            <summary>
            Gets the TaxAmount2 for a given line number. 
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>TaxAmount2 for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.GetCurrentTransType">
            <summary>
            Gets the current transaction type. 
            </summary>
            <returns>The transaction type string.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.SetDutyRate(System.Double,System.Int32)">
            <summary>
            Sets the duty rate for given line number. 
            </summary>
            <param name="rate">Duty rate to set.</param>
            <param name="lineNumber">Line number, start with 1.</param>
            <returns>Duty rate after set.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.GetDutyRate(System.Int32)">
            <summary>
            Gets the duty rate for given line number. 
            </summary>
            <param name="lineNumber">Line number, start with 1.</param>
            <returns>Duty rate.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.SetDutyAmount(System.Double,System.Int32)">
            <summary>
            Sets the duty Amount for given line number. 
            </summary>
            <param name="amount">Duty Amount to set.</param>
            <param name="lineNumber">Line number, start with 1.</param>
            <returns>Duty Amount after set.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.GetDutyAmount(System.Int32)">
            <summary>
            Gets the duty Amount for given line number. 
            </summary>
            <param name="lineNumber">Line number, start with 1.</param>
            <returns>Duty Amount.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.CreateTimeSlipActivityInfo">
            <summary>
            Creates an TimeSlipActivityInfo object.
            </summary>
            <returns>an TimeSlipActivityInfo object.</returns>
        </member>
        <member name="M:SimplySDK.PayableModule.PurchasesJournal.CanAddTimeSlip">
            <summary>
            Checks if can add time slip to journal.
            </summary>
            <returns>true if can add time slip to journal, false otherwise.</returns>
        </member>
        <member name="T:SimplySDK.PayrollModule.EmployeeLedger">
            <summary>
            Represents an instance of an Canadian employee ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.PayrollModule.EmployeeLedger.#ctor">
            <summary>
            Initializes a new instance of the EmployeeLedger class.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedger.Retain">
            <summary>
            Gets or sets retaining employee vacation incomes
            </summary>
        </member>
        <member name="M:SimplySDK.PayrollModule.EmployeeLedger.IsValidPayPeriod(System.Int16)">
            <summary>
            Check for valid pay period.
            </summary>
            <remarks>
            Accepted values: 1, 2, 10, 12, 13, 22, 24, 26, 27, 52, 53
            </remarks>
            <param name="payPeriod">The pay period to validate</param>
            <returns>true if it is a valid pay period, false otherwise.</returns>
        </member>
        <member name="M:SimplySDK.PayrollModule.EmployeeLedger.GetProvByNum(System.Int16,Simply.Domain.Utility.SimplyLanguage.LANGUAGE)">
            <summary>
            Gets the province string by number. 
            </summary>
            <param name="provNum">The province code.</param>
            <param name="lang">language to Gets the province string.</param>
            <returns>a province string represented by the number.</returns>
        </member>
        <member name="T:SimplySDK.PayrollModule.EmployeeLedgerBase">
            <summary>
            Represents an instance of an employee ledger.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Model">
            <summary>
            Gets the ledger model. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.EmployeeModel">
            <summary>
            Sets the employee ledger model.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Observer">
            <summary>
            Gets the employee ledger observer.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.CanModifyLedger">
            <summary>
            Gets the modify rights.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Name">
            <summary>
            Gets or sets the Employee Name.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Street1">
            <summary>
            Gets or sets the Employee Street 1.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Street2">
            <summary>
            Gets or sets the Employee Street 2.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.City">
            <summary>
            Gets or sets the Employee City.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Province">
            <summary>
            Gets or sets the Employee Province or State.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.PostalCode">
            <summary>
            Gets or sets the Employee Postal Code or Zip Code.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Phone1">
            <summary>
            Gets or sets the Employee Phone 1. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.Phone2">
            <summary>
            Gets or sets the Employee Phone 2. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.BirthDate">
            <summary>
            Gets or sets the Employee Birth Date. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.HireDate">
            <summary>
            Gets or sets the Employee Hire Date. 
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.SINSSN">
            <summary>
            Gets or sets the Employee Social Insurance Number or Social Security Number.
            </summary>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.TaxTable">
            <summary>
            Gets or sets the Employee Tax Table. 
            </summary>
            <remarks>
            Accepted values:<br></br>
            <br></br>
            For Canada<br></br>
            Alberta / Alberta, British Columbia / Colombie-Britannique,<br></br> 
            Manitoba / Manitoba, New Brunswick / Nouveau-Brunswick,<br></br> 
            Newfoundland / Terre-Neuve, N.W.T / Terr. du Nord-ouest,<br></br> 
            Nova Scotia / Nouvelle-Écosse, Ontario / Ontario,<br></br> 
            Prince Edward Island / Ile-Prince-Édouard, Quebec / Québec,<br></br> 
            Saskatchewan / Saskatchewan, Yukon / Yukon, Nunavut / Nunavut<br></br>
            <br></br>
            For US<br></br>
            Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware,<br></br>
            Dist. of Columbia, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas,<br></br> 
            Kentucky, Louisiana, Maine, Maryland, Massachusetts, Michigan, Minnesota, Mississippi,<br></br> 
            Missouri, Montana, Nebraska, Nevada, New Hampshire, New Jersey, New Mexico, New York,<br></br> 
            North Carolina, North Dakota, Ohio, Oklahoma, Oregon, Pennsylvania, Rhode Island,<br></br> 
            South Carolina, South Dakota, Tennessee, Texas, Utah, Vermont, Virginia, Washington,<br></br> 
            West Virginia, Wisconsin, Wyoming, Puerto Rico<br></br>
            </remarks>
        </member>
        <member name="P:SimplySDK.PayrollModule.EmployeeLedgerBase.PayPeriods">
            <summary>
            Gets or sets the Employee Pay Periods. 
            </summary>
            <remarks>
            Accepted values:<br></br>
            For Canada: 1, 2, 10, 12, 13, 22, 24, 26, 27, 52, 53<br></br>
            For US: 1, 2, 12, 24, 26, 52<br></br>
            </remarks>
        </member>
        <member name="M:SimplySDK.PayrollModule.EmployeeLedgerBase.LoadByName(System.String)">
            <summary>
            Load an employee record by name. 
            </summary>
            <param name="name">Employee to load.</param>
            <returns>true if employee record is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.PayrollModule.EmployeeLedgerBase.IsValidPayPeriod(System.Int16)">
            <summary>
            Check for valid pay period.
            </summary>
            <param name="payPeriod">The pay period to validate</param>
            <returns>true if it is a valid pay period, false otherwise.</returns>
        </member>
        <member name="M:SimplySDK.PayrollModule.EmployeeLedgerBase.GetProvByNum(System.Int16,Simply.Domain.Utility.SimplyLanguage.LANGUAGE)">
            <summary>
            Gets the province string by number. 
            </summary>
            <param name="provNum">The province code.</param>
            <param name="lang">language to Gets the province string.</param>
            <returns>a province string represented by the number.</returns>
        </member>
        <member name="T:SimplySDK.ProjectModule.ProjectLedger">
            <summary>
            Represents an instance of a project ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.ProjectModule.ProjectLedger.#ctor">
            <summary>
            Initializes a new instance of the ProjectLedger class.
            </summary>
        </member>
        <member name="P:SimplySDK.ProjectModule.ProjectLedger.Model">
            <summary>
            Gets the ledger model. 
            </summary>
        </member>
        <member name="P:SimplySDK.ProjectModule.ProjectLedger.Observer">
            <summary>
            Gets the project ledger observer. 
            </summary>
        </member>
        <member name="P:SimplySDK.ProjectModule.ProjectLedger.CanModifyLedger">
            <summary>
            Gets the modify rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.ProjectModule.ProjectLedger.Name">
            <summary>
            Gets or sets the Project Name. 
            </summary>
        </member>
        <member name="P:SimplySDK.ProjectModule.ProjectLedger.NameAlt">
            <summary>
            Gets or sets the Alternate Project Name. 
            </summary>
        </member>
        <member name="P:SimplySDK.ProjectModule.ProjectLedger.StartDate">
            <summary>
            Gets or sets the Project Start Date. 
            </summary>
        </member>
        <member name="M:SimplySDK.ProjectModule.ProjectLedger.LoadByName(System.String)">
            <summary>
            Load a project record by name. 
            </summary>
            <param name="name">Project to load.</param>
            <returns>True if project record is loaded successfully.</returns>
        </member>
        <member name="T:SimplySDK.ReceivableModule.CustomerLedger">
            <summary>
            Represents an instance of a customer ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.ReceivableModule.CustomerLedger.#ctor">
            <summary>
            Initializes a new instance of the CustomerLedger class.
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.CustomerLedger.Model">
            <summary>
            Gets the ledger model. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.CustomerLedger.Observer">
            <summary>
            Gets the customer ledger observer. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.CustomerLedger.CanModifyLedger">
            <summary>
            Gets the modify rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.CustomerLedger.PriceList">
            <summary>
            Gets or sets the Customer Price List. 
            </summary>
        </member>
        <member name="M:SimplySDK.ReceivableModule.CustomerLedger.LoadByName(System.String)">
            <summary>
            Load a customer record by name. 
            </summary>
            <param name="name">Customer to load.</param>
            <returns>True if customer record is loaded successfully.</returns>
        </member>
        <member name="T:SimplySDK.ReceivableModule.SalesJournal">
            <summary>
            Represents an instance of a sales journal.
            </summary>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.#ctor">
            <summary>
            Initializes a new instance of the SalesJournal class.
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.HasEditRights">
            <summary>
            Gets the journal edit rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.HasViewRights">
            <summary>
            Gets the journal lookup rights. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.Model">
            <summary>
            Gets the journal model. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.ShowSalesmenList">
            <summary>
            Gets if the salesperson list is visible. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.ShowShipToList">
            <summary>
            Gets if the ship to addresses list is visible. 
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.ShowInvoiceStyleList">
            <summary>
            Gets the invoice style list.
            </summary>
        </member>
        <member name="P:SimplySDK.ReceivableModule.SalesJournal.SalesmanPinned">
            <summary>
            Gets or sets if salesperson is pinned. 
            </summary>
            <remarks>
            If pinned (true), after posting, salesperson will not be cleared. 
            </remarks>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SetInvoiceStyle(System.String)">
            <summary>
            Sets the invoice style. 
            </summary>
            <param name="style">Style to set.</param>
            <returns>Style set.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetInvoiceStyle">
            <summary>
            Gets the invoice style. 
            </summary>
            <returns>Style.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetCurrentTransType">
            <summary>
            Gets the current transaction type. 
            </summary>
            <returns>The transaction type string.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SelectShiptoAddressName(System.String)">
            <summary>
            Select a ship to address name. 
            </summary>
            <param name="addressname">Address name to select.</param>
            <returns>address name selected.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetShiptoAddressName">
            <summary>
            Gets the current selected ship to address name. 
            </summary>
            <returns>Ship to address name.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SelectSalesman(System.String)">
            <summary>
            Select salesperson to user for the sales. 
            </summary>
            <param name="salesman">Salesman name.</param>
            <returns>Name of salesperson selected.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetCurrentSalesman">
            <summary>
            Gets the current salesperson. 
            </summary>
            <returns>Name of current selected salesperson.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SetBasePrice(System.Double,System.Int32)">
            <summary>
            Sets the base price for given line number. 
            </summary>
            <param name="basePrice">base price to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Base price for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SetBasePriceByPriceList(System.String,System.Int32)">
            <summary>
            Sets the base price for given line number through price list name. 
            </summary>
            <param name="priceListName">Name to price list, etc. "Regular".</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Price for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetBasePrice(System.Int32)">
            <summary>
            Gets the base price for a given line number. 
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Base price for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SetLineDiscountPercentage(System.Double,System.Int32)">
            <summary>
            Sets the discount percentage for given line number
            </summary>
            <param name="discPercent">discount percentage to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Discount percentage for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetDiscountPercentage(System.Int32)">
            <summary>
            Gets the discount percentage for a given line number. 
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Discount percentage for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SetPriceByPriceList(System.String,System.Int32)">
            <summary>
            Sets the price for given line number through price list name. 
            </summary>
            <param name="priceListName">Name to price list, etc. "Regular".</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Price for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.SetComment(System.String)">
            <summary>
            Sets the sales journal comment. 
            </summary>
            <param name="comment">The comment string.</param>
            <returns>The comment string of the sales journal.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetComment">
            <summary>
            Gets the sales journal comment.
            </summary>
            <returns>The comment string of the sales journal.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetCreditCardInfo">
            <summary>
            Gets the credit card transaction information for sales journal.
            </summary>
            <returns>A instance of a CreditCardInfo object.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.CreateTimeSlipActivityInfo">
            <summary>
            Creates an TimeSlipActivityInfo object.
            </summary>
            <returns>an TimeSlipActivityInfo object.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.CanAddTimeSlip">
            <summary>
            Checks if can add time slip to journal.
            </summary>
            <returns>true if can add time slip to journal, false otherwise.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetSalesPriceDataByPriceListName(Simply.Domain.Journals.APARJournals.ARJournals.SalesRow,System.String)">
            <summary>
            Gets the sales price data by given price list name for the given sales row
            </summary>
            <param name="row">Sales line.</param>
            <param name="priceListName">Name to price list, etc. "Regular".</param>
            <returns>sales price if found, null otherwise.</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetInvoiceTemplateTypeByString(System.String)">
            <summary>
            Get the invoice template type based on the input string.
            </summary>
            <param name="template">input template string</param>
            <returns>The invoice template type</returns>
        </member>
        <member name="M:SimplySDK.ReceivableModule.SalesJournal.GetInvoiceTemplateTypeString">
            <summary>
            Get the string value for the current invoice template style   
            </summary>
            <returns>The template type string value</returns>
        </member>
        <member name="T:SimplySDK.Support.APARJournalSearch">
            <summary>
            APARJournalSearch mimics behaviours of Search/lookup APAR journal dialog.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.APARJournalSearch.#ctor(Simply.Domain.MiscFeatures.SearchModel)">
            <summary>
            Initializes a new instance of the APARJournalSearch class.
            </summary>
            <param name="model">SearchModel object.</param>
        </member>
        <member name="M:SimplySDK.Support.APARJournalSearch.SelectVendorCustomerToSearch(System.String)">
            <summary>
            Select the vendor or customer name.
            </summary>
            <param name="name">vendor/customer name.</param>
            <returns>vendor/customer name that set.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournalSearch.GetCurrentVendorCustomer">
            <summary>
            Gets the current selected vendor or customer name.
            </summary>
            <returns>name of current selected vendor/custome.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournalSearch.HasMoreThanOneMatch">
            <summary>
            Check if the search/lookup options has more than one match.
            </summary>
            <returns>True if has more than one match.</returns>
        </member>
        <member name="T:SimplySDK.Support.APARLedgerBase">
            <summary>
            Handles the common behaviour for vendor and customer ledgers.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.APARModel">
            <summary>
            Gets the ledger model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Name">
            <summary>
            Gets or sets the Name.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Contact">
            <summary>
            Gets or sets the Contact.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Street1">
            <summary>
            Gets or sets the Street 1.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Street2">
            <summary>
            Gets or sets the Street 2.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.City">
            <summary>
            Gets or sets the City.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Province">
            <summary>
            Gets or sets the Province.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Country">
            <summary>
            Gets or sets the Country.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.PostalCode">
            <summary>
            Gets or sets the Postal Code.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Phone1">
            <summary>
            Gets or sets the Phone 1.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Phone2">
            <summary>
            Gets or sets the Phone 2.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Fax">
            <summary>
            Gets or sets the Fax.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.Email">
            <summary>
            Gets or sets the Email.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.WebSite">
            <summary>
            Gets or sets the Web Site.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARLedgerBase.CurrencyCode">
            <summary>
            Gets or sets the Currency Code.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.FileVerification">
            <summary>
            Verification for Sage 50 files
            </summary>
        </member>
        <member name="M:SimplySDK.Support.FileVerification.VerifyDatabaseFile(System.String,System.String)">
            <summary>
            Verify that all the database files exist.
            </summary>
            <param name="folder"></param>
            <param name="databaseVersion"></param>
            <returns>True if all the database files exist.</returns>
        </member>
        <member name="M:SimplySDK.Support.FileVerification.VerifyFilesExist(System.String,System.String,System.String[])">
            <summary>
            Verify that all the files exist
            </summary>
            <param name="baseFolder"></param>
            <param name="subFolder"></param>
            <param name="files"></param>
            <returns>True if all the files exist.</returns>
        </member>
        <member name="T:SimplySDK.Support.RDACompanyInfo">
            <summary>
            Remote Data Access Company Information
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.CompanyID">
            <summary>
            Unique company identifier.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.Owner">
            <summary>
            Email address of the owner of the company
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.SKUName">
            <summary>
            Name of the SKU (e.g. Premium, Pro, Quantum).
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.Version">
            <summary>
            Company's Sage 50 version.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.CompanyName">
            <summary>
            Name of the company.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.IsPaused">
            <summary>
            Is the shared company paused?
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.HasSDKIncompatibleDatabase">
            <summary>
            Does the company have a database version that does not match the current SDK version. The company may be a newer or older version.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.FiscalYearEndDate">
            <summary>
            The company's fiscal year end date.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDACompanyInfo.InitialUpload">
            <summary>
            When the company was uploaded.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.RDAUser">
            <summary>
            A Remote Data Access user record.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDAUser.SageId">
            <summary>
            Get or set the Sage ID of the user.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RDAUser.LastUpdateTimestamp">
            <summary>
            Get or set the date and time of the last update made by the user.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.RDACompanyInfoHelper">
            <summary>
            Help process collaboration dataset information to properties in RDACompanyInfo
            </summary>
        </member>
        <member name="M:SimplySDK.Support.RDACompanyInfoHelper.GetValidCompanies(Sage.Collaboration.Common.WebContracts.DatasetCollection)">
            <summary>
            Get the valid companies, currently follows the same rules as LoadListToGrid in ConnectCloudCompListModel  
            </summary>
            <param name="companies"></param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.RDACompanyInfoHelper.ConvertToCompanyInfo(Sage.Collaboration.Common.WebContracts.Dataset)">
            <summary>
            Convert Dataset company to RDACompanyInfo
            </summary>
            <param name="company"></param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.RDACompanyInfoHelper.GetSKUName(Sage.Collaboration.Common.WebContracts.Dataset)">
            <summary>
            Get the SKU's name.
            </summary>
            <param name="company"></param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.RDACompanyInfoHelper.IsCompanyPaused(Sage.Collaboration.Common.WebContracts.Dataset)">
            <summary>
            Check if the company is paused
            </summary>
            <param name="company"></param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.RDACompanyInfoHelper.GetFiscalYearEndDate(Sage.Collaboration.Common.WebContracts.Dataset)">
            <summary>
            Get the fiscal year end date of the company
            </summary>
            <param name="company"></param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.RDACompanyInfoHelper.GetInitialUpload(Sage.Collaboration.Common.WebContracts.Dataset)">
            <summary>
            Get the initial upload time of the company
            </summary>
            <param name="company"></param>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Support.SageId.ISageIdSignInBrowser">
            <summary>
            Present a user-interface that allows an end-user to enter their Sage ID credentials for validation.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SageId.ISageIdSignInBrowser.ShowBrowserAsync(SimplySDK.Support.SageId.SageIdBrowserOptions,System.Threading.CancellationToken)">
            <summary>
            Dispatches the Sage ID sign-in process. This may include launching or directing a browser to present the sign-in page and then capturing the completion page.
            </summary>
            <param name="options">The parameters for the Sage ID sign-in</param>
            <param name="cancellationToken">Token specifying if the current operation should be cancelled</param>
            <returns>The outcome of the sign-in process</returns>
        </member>
        <member name="T:SimplySDK.Support.SageId.SageIdBrowserResult">
            <summary>
            Outcome of the Sage ID sign-in process.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SageId.SageIdBrowserResult.ResultType">
            <summary>
            Get or set the final status of the Sage ID sign-in.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SageId.SageIdBrowserResult.Response">
            <summary>
            Get or set the entire response of the Sage ID sign-in. This should be the complete URL that is contained by <see cref="P:SimplySDK.Support.SageId.SageIdBrowserOptions.EndUrl"/>.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.SageId.SageIdBrowserResultType">
            <summary>
            The final status of the Sage ID sign-in.
            </summary>
        </member>
        <member name="F:SimplySDK.Support.SageId.SageIdBrowserResultType.Success">
            <summary>
            The Sage ID sign-in is complete.
            </summary>
        </member>
        <member name="F:SimplySDK.Support.SageId.SageIdBrowserResultType.HttpError">
            <summary>
            An HTTP error was encountered during the Sage ID sign-in process.
            </summary>
        </member>
        <member name="F:SimplySDK.Support.SageId.SageIdBrowserResultType.UserCancel">
            <summary>
            The user cancelled the Sage ID sign-in process before completion.
            </summary>
        </member>
        <member name="F:SimplySDK.Support.SageId.SageIdBrowserResultType.Timeout">
            <summary>
            A timeout occurred while waiting for the Sage ID sign-in process to complete.
            </summary>
        </member>
        <member name="F:SimplySDK.Support.SageId.SageIdBrowserResultType.UnknownError">
            <summary>
            An unknown error occurred during the Sage ID sign-in process.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.SageId.SageIdBrowserOptions">
            <summary>
            The parameters for the Sage ID sign-in.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SageId.SageIdBrowserOptions.StartUrl">
            <summary>
            The authorization URL that starts off the Sage ID sign-in process.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SageId.SageIdBrowserOptions.EndUrl">
            <summary>
            The authorization code URL indicating the Sage ID sign-in process is complete. Compare the current navigation URL contains the EndUrl, if so, then process is complete. 
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SageId.SageIdBrowserOptions.#ctor(System.String,System.String)">
            <summary>
            Create a new <see cref="T:SimplySDK.Support.SageId.SageIdBrowserOptions"/> instance.
            </summary>
            <param name="startUrl">The starting URL for Sage ID sign-in</param>
            <param name="endUrl">The completiong URL for Sage ID sign-in</param>
        </member>
        <member name="P:SimplySDK.Support.SDKCollaborationBackOffice.SuperUserConnectionCount">
            <summary>
            Gets the number of active MySQL connections using the superuser account for the current process.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationBackOffice.#ctor(Simply.Domain.Collaboration.ICollaborationUI)">
            <summary>
            Create a new <see cref="T:SimplySDK.Support.SDKCollaborationBackOffice"/> instance.
            </summary>
            <param name="ui"></param>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationBackOffice.IsUserReachSerialAllowance(System.Collections.Generic.List{Sage.Simply.Domain.Entities.SageDriveUserLog})">
            <summary>
            Check the current user list to see if the user count has reached the max allawnce on the user's licence
            </summary>
            <param name="userList">the current user list</param>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationBackOffice.ValidateSku(Sage.Collaboration.Common.WebContracts.Dataset)">
            <summary>
            Validates the sku of a Sage Drive database (saved in a local drive) to check if it can be opened
            </summary>
            <param name="dataset">dataset</param>
        </member>
        <member name="T:SimplySDK.Support.SDKCollaborationUI">
            <summary>
            SDK implementation for all UI-specifics required for the Sage Drive feature.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKCollaborationUI.DesiredOpenMode">
            <summary>
            Get or set the desired mode to open the Sage Drive company.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUI.#ctor">
            <summary>
            Create a new <see cref="T:SimplySDK.Support.SDKCollaborationUI"/> instance.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUI.ShowUserModeSelectionDialog(Sage.Collaboration.Common.ConnectionMode)">
            <summary>
            Show the Sage Drive User Mode Selection Dialog
            </summary>
        </member>
        <member name="T:SimplySDK.Support.CreditCardInfo">
            <summary>
            Handles entry of credit card information for journals.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.#ctor(SimplySDK.Support.Journal)">
            <summary>
            Initializes a new instance of the AdditionalInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the AdditionalInfo.</param>
        </member>
        <member name="P:SimplySDK.Support.CreditCardInfo.EnterAuthManually">
            <summary>
            Get if it is manually enter authorization code.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.CreditCardInfo.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetCardHolderName(System.String)">
            <summary>
            Set credit card holder's name.
            </summary>
            <param name="name">The credit card holder's name to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetCardHolderName">
            <summary>
            Get the credit card holder's name.
            </summary>
            <returns>The credit card holder's name.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetBillingAddress(System.String)">
            <summary>
            Set credit card's billing address.
            </summary>
            <param name="address">The credit card billing address to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetBillingAddress">
            <summary>
            Get the credit card's billing address.
            </summary>
            <returns>The credit card's billing address.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetBillingCity(System.String)">
            <summary>
            Set the city of credit card billing address.
            </summary>
            <param name="city">The city of credit card billing address to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetBillingCity">
            <summary>
            Get the city of credit card billing address.
            </summary>
            <returns>The city of credit card billing address.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetBillingProvince(System.String)">
            <summary>
            Set the province or state of credit card billing address.
            </summary>
            <param name="province">The province or state to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetBillingProvince">
            <summary>
            Get the province or state of credit card billing address.
            </summary>
            <returns>The province or state of credit card billing address.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetBillingPostCode(System.String)">
            <summary>
            Set the postal or zip code of credit card billing address.
            </summary>
            <param name="postalCode">The postal or zip code to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetBillingPostCode">
            <summary>
            Get the postal or zip code of credit card billing address.
            </summary>
            <returns>The postal or zip code of credit card billing address.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetBillingCountry(System.String)">
            <summary>
            Set the country of credit card billing address.
            </summary>
            <param name="country">The country to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetBillingCountry">
            <summary>
            Get the country of credit card billing address.
            </summary>
            <returns>The country of credit card billing address.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetCardHolderEmail(System.String)">
            <summary>
            Set credit card holder's e-mail.
            </summary>
            <param name="email">The credit card holder's e-mail to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetCardHolderEmail">
            <summary>
            Get the credit card holder's e-mail.
            </summary>
            <returns>The credit card holder's e-mail.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetComment(System.String)">
            <summary>
            Set comment for credit card transaction information.
            </summary>
            <param name="comment">The comment to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetComment">
            <summary>
            Get the comment for credit card transaction information.
            </summary>
            <returns>The comment for credit card transaction information.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetLast4Number(System.String)">
            <summary>
            Set last 4 credit card number.
            </summary>
            <param name="last4Number">The last 4 credit card number to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetLast4Number">
            <summary>
            Get the last 4 credit card number.
            </summary>
            <returns>The last 4 credit card number.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetAuthCode(System.String)">
            <summary>
            Set the authorization code for credit card transaction.
            </summary>
            <param name="authCode">The authorization code to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetAuthCode">
            <summary>
            Get the authorization code for credit card transaction.
            </summary>
            <returns>The authorization code for credit card transaction.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetAmount">
            <summary>
            Get the amount for credit card transaction.
            </summary>
            <returns>The amount for credit card transaction.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetSourceAmount">
            <summary>
            Get the amount in source currency for credit card transaction.
            </summary>
            <returns>The amount in source currency for credit card transaction.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SetExchangeRate(System.Double)">
            <summary>
            Set the exchange rate for credit card transaction.
            </summary>
            <param name="rate">The exchange rate to set.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetExchangeRate">
            <summary>
            Get the exchange rate for credit card transaction.
            </summary>
            <returns>The exchange rate for credit card transaction.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SelectMerchantAccountType(System.String)">
            <summary>
            Select merchant account type by string.
            </summary>
            <param name="merchantAccountString">The merchant account string to select.</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetMerchantAccountType">
            <summary>
            Get the merchant account type.
            </summary>
            <returns>The merchant account type.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.GetSourceNumber">
            <summary>
            Get the source number for credit card transaction.
            </summary>
            <returns>The source number for credit card transaction.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.TransactionDate">
            <summary>
            Get the date for credit card transaction.
            </summary>
            <returns>The date for credit card transaction.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.Save">
            <summary>
            Saves the additional information for a journal.
            </summary>
            <returns>True if additonal information is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.Cancel">
            <summary>
            Cancels the journal support utility.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.CreditCardInfo.SPSProcessingSDK">
            <summary>
            Support class
            </summary>
        </member>
        <member name="P:SimplySDK.Support.CreditCardInfo.SPSProcessingSDK.StatusText">
            <summary>
            Get the status text
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SPSProcessingSDK.Initialize(System.String,System.ComponentModel.DoWorkEventHandler,System.ComponentModel.RunWorkerCompletedEventHandler)">
            <summary>
            Initialize before showing the processing dialog
            </summary>
            <param name="text">Status Text</param>
            <param name="work">Actual work</param>
            <param name="workCompleted">Method to handle work completed</param>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SPSProcessingSDK.StartProcessing">
            <summary>
            Show the processing dialog
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CreditCardInfo.SPSProcessingSDK.EndProcessing">
            <summary>
            Close the processing dialog
            </summary>
        </member>
        <member name="T:SimplySDK.Support.JournalSupportBase">
            <summary>
            Base class of support classes for journals.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.JournalSupportBase.#ctor(SimplySDK.Support.Journal)">
            <summary>
            Initializes a new instance of the JournalSupportBase class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the JournalSupportBase.</param>
        </member>
        <member name="P:SimplySDK.Support.JournalSupportBase.Journal">
            <summary>
            Gets the journal instance
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalSupportBase.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="M:SimplySDK.Support.JournalSupportBase.Save">
            <summary>
            Saves the journal support utility.
            </summary>
            <returns>True if saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalSupportBase.Cancel">
            <summary>
            Cancels the journal support utility.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.LedgerBase">
            <summary>
            Handles the common behaviour among all ledgers.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LedgerBase.Closed">
            <summary>
            Gets if the ledger object is deleted. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LedgerBase.Observer">
            <summary>
            Gets the mutex
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LedgerBase.IsLedgerMutexed">
            <summary>
            Gets the mutex.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LedgerBase.CanModifyLedger">
            <summary>
            Gets the modify rights.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LedgerBase.Model">
            <summary>
            Gets the model object of this ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.LedgerBase.Close">
            <summary>
            Closes the ledger.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.LedgerBase.InitializeNew">
            <summary>
            Creates a new blank ledger record.
            </summary>
            <returns>True if ledger record is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.LedgerBase.Save">
            <summary>
            Save the ledger record.
            </summary>
            <returns>True if ledger record is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.LedgerBase.Undo">
            <summary>
            Undo the ledger record to reset it.
            </summary>
            <returns>True if changes to the ledger are undone successfully.</returns>
        </member>
        <member name="T:SimplySDK.Support.OrderQuoteLookup">
            <summary>
            OrderQuoteLookup mimics behaviours of order/quote look up dialog.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.#ctor(SimplySDK.Support.InvoiceJournal)">
            <summary>
            Initializes a new instance of the OrderQuoteLookup class.
            </summary>
            <param name="invoiceJournal">invoice journal model object.</param>
        </member>
        <member name="P:SimplySDK.Support.OrderQuoteLookup.LookupOption">
            <summary>
            Gets the order look up domain object.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.ShowOrders(System.Boolean)">
            <summary>
            This method mimics the behavior that user checks/unchecks the show order check box.
            </summary>
            <param name="toShow">If true, orders are visible in transaction grid of the order look up form;
            if false, orders are not visible in the transaction grid.</param>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.ShowInvoicedOrders(System.Boolean)">
            <summary>
            This method mimics the behavior that user checks/unchecks the show invoiced order check box.
            </summary>
            <param name="toShow">If true, invoiced orders are visible in transaction grid of the order look up form;
            if false, invoiced orders are not visible in the transaction grid.</param>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.ShowQuotes(System.Boolean)">
            <summary>
            This method mimics the behavior that user checks/unchecks the show quote check box.
            </summary>
            <param name="toShow">If true, quotes are visible in transaction grid of the order look up form;
            if false, quotes are not visible in the transaction grid.</param>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.SelectViewByType(System.Int32)">
            <summary>
            This method mimics the behavior that a view by type is selected.
            </summary>
            <param name="type">The type to set.</param>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.SetDescendingSort(System.Boolean)">
            <summary>
            This method mimics the behavior that a descending or ascending sorting is selected.
            </summary>
            <param name="descend">Is it a descending or ascending sorting?.</param>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.GetLookupLineByIndex(System.Int32)">
            <summary>
            Get an order look up line at the specified position.
            </summary>
            <param name="idx">The index indicates a position in the order look up grid.</param>
            <returns>order look line object.</returns>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.GetIndexByOrderNumber(System.String)">
            <summary>
            Gets the index of one order/quote record with the specified order number.
            </summary>
            <param name="num">Order number to search.</param>
            <returns>The index value. If the record is not found, return -1;.</returns>
        </member>
        <member name="M:SimplySDK.Support.OrderQuoteLookup.LoadOrderQuoteByIndex(System.Int32,SimplySDK.Support.InvoiceJournal)">
            <summary>
            Load an order/quote record with the specified position index through the order look up dialog.
            </summary>
            <param name="idx">The position index.</param>
            <param name="journal">The invoice journal that order or quote will be loaded to.</param>
        </member>
        <member name="T:SimplySDK.Support.SDKAlert">
            <summary>
            Default alert implementation for the SDK. 
            Any error/alert message that occurs will be thrown as an exception.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.#ctor">
            <summary>
            Initializes a new instance of the SDKAlert class.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKAlert.Silent">
            <summary>
            Gets or sets the silent flag. 
            Sometimes we just want it to be silent. 
            When silent is set to true, StopAlert will not pop up. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKAlert.CacheMessage">
            <summary>
            Gets or sets if the cache message to be played back later. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKAlert.MesssageCache">
            <summary>
            Get Message Cache. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKAlert.NotShowCache">
            <summary>
            A message might pop up with a Not show check box. If this is the case and check box is checked, cache 
            the not show flag ID in this list.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKAlert.LastResult">
            <summary>
            Gets or sets if the cache message to be played back later.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display an error message - usually an error occurred during an unsuccessful processing of an action.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlert(Simply.Domain.Utility.SimplyMessage,System.IntPtr)">
            <summary>
            Display an error message - usually an error occurred during an unsuccessful processing of an action.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.InfoAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display an informational message - usually a result of successful processing of an action and more information needs to be displayed.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlertWithLink(Simply.Domain.Utility.SimplyMessage,Simply.Domain.Utility.SimplyMessage,System.Boolean)">
            <summary>
            Display a message in a dialog with an "Ok" button and a hyper link.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="hyperLink">A SimplyMessage object that contains a message to be displayed an a hyperlink.</param>
            <param name="isBusinessService">Whether the hyper link goes to Business service help.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlertWithLinkURL(Simply.Domain.Utility.SimplyMessage,System.String,System.String)">
            <summary>
            Display a message in a dialog with an "Ok" button and a hyper link.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="hyperLinkText">Text for the hyper link</param>
            <param name="hyperLinkURL">URL for the hyper link</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskAlertWithLink(Simply.Domain.Utility.SimplyMessage,Simply.Domain.Utility.SimplyMessage,System.Boolean)">
            <summary>
            Display a message in a dialog with an "Yes", "No" button and a hyper link.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="hyperLink">A SimplyMessage object that contains a message to be displayed an a hyperlink.</param>
            <param name="isBusinessService">Whether the hyper link goes to Business service help.</param>
            <returns>
            AlertResult.YES if user clicked "Yes". <br></br>
            AlertResult.NO if user clicked "No".<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskAlertWithLinkURL(Simply.Domain.Utility.SimplyMessage,System.String,System.String)">
            <summary>
            Display a message in a dialog with an "Yes", "No" button and a hyper link
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user</param>
            <param name="hyperLinkText">Text for the hyper link</param>
            <param name="hyperLinkURL">URL for the hyper link</param>
            /// <returns>
            AlertResult.YES if user clicked "Yes". <br></br>
            AlertResult.NO if user clicked "No".<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskInfoAlertNotShow(Simply.Domain.Utility.SimplyMessage,System.Boolean@)">
            <summary>
            Display a confirmation message in a dialog with "Yes" and "No" buttons and a Do not show any mroe checkbox
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user</param>
            <param name="notShow">Whether use check Not show box.</param>
            <returns>
            AlertResult.YES if user clicked "Yes", 
            AlertResult.NO if user clicked "No"
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlertNotShow(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display an error message - usually an error occurred during an unsuccessful processing of an action. 
            An option is given whether or not to show this message again.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>True if the user does not want to show this message again.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlertNotShowWithLink(Simply.Domain.Utility.SimplyMessage,Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display an error message - usually an error occurred during an unsuccessful processing of an action. 
            An option is given whether or not to show this message again.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="helpLink">A SimplyMessage object that contains a message to be displayed an a hyperlink.</param>
            <returns>True if the user does not want to show this message again.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.StopAlertConfirm(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display an error message - usually an error occurred during an unsuccessful processing of an action. 
            An option is given whether or not to show this message again.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.CONTINUE if user clicked "Continue", 
            AlertResult.CANCEL if user clicked "Cancel"
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AdviceAlert(Simply.Domain.Utility.SimplyMessage,System.IntPtr)">
            <summary>
            Display an advice message - usually a result of successful processing and the program gives advice on the last action.
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AddToAdviceAlert(Simply.Domain.Utility.SimplyMessage,System.IntPtr)">
            <summary>
            Add a message to the current advice message
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be added to the current advice alert dialog.</param>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.DestroyAdviceAlert(System.String)">
            <summary>
            Destroy the current advice dialog if the message matches
            [Replace]traRemoveModelessIfString
            </summary>
            <param name="message">A message used to check if we need to destroy the current advice alert dialog.</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.WarnAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a warning message where the possible responses to that message should be "OK" or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.OK if user responds "OK" to the message. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Yes" or "No".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.YES if user responds "Yes" to the message. <br></br>
            AlertResult.NO if user responds "No" to the message.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskAlert(Simply.Domain.Utility.SimplyMessage,System.IntPtr)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Yes" or "No".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
            <returns>
            AlertResult.YES if user responds "Yes" to the message. <br></br>
            AlertResult.NO if user responds "No" to the message.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskAlertAdvice(Simply.Domain.Utility.SimplyMessage,System.IntPtr)">
            <summary>
            Display a confirmation message with additional advice where the possible responses to that message should be "Yes" or "No".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
            <returns>
            AlertResult.YES if user responds "Yes" to the message. <br></br>
            AlertResult.NO if user responds "No" to the message.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.YNCAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Yes", "No", or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.YES if user responds "Yes" to the message. <br></br>
            AlertResult.NO if user responds "No" to the message.<br></br>
            AlertResult.CANCEL if user wants to cancel the current action.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AskSaveAlert">
            <summary>
            Display a confirmation message to save a ledger where the possible responses to that message should be "Yes", "No", or "Cancel".
            Developer is responsible for the message that will be displayed and saving of the ledger if "Yes" is selected.
            </summary>
            <returns>
            AlertResult.YES if user responds "Yes" to the message. <br></br>
            AlertResult.NO if user responds "No" to the message. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.CustomAlert(Simply.Domain.Utility.SimplyCustomMessage)">
            <summary>
            Display a custom message in a dialog with 3 customizable buttons and 1 customizable icon.
            </summary>
            <param name="message">A SimplyCustomMessage object that contains a customized message to be displayed.</param>
            <returns>
            1 if the right button is clicked (SimplyCustomMessage.Button1Text). <br></br>
            2 if the center button is clicked (SimplyCustomMessage.Button2Text). <br></br>
            3 if the left button is clicked (SimplyCustomMessage.Button3Text). <br></br>
            0 if there's only 1 button and we don't care about the result (there is only text in one of Button1Text, Button2Text, or Button3Text).<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.CustomAlert(Simply.Domain.Utility.SimplyCustomMessage,System.IntPtr)">
            <summary>
            Display a custom message in a dialog with 3 customizable buttons and 1 customizable icon.
            </summary>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
            <param name="message">A SimplyCustomMessage object that contains a customized message to be displayed.</param>
            <returns>
            1 if the right button is clicked (SimplyCustomMessage.Button1Text). <br></br>
            2 if the center button is clicked (SimplyCustomMessage.Button2Text). <br></br>
            3 if the left button is clicked (SimplyCustomMessage.Button3Text). <br></br>
            0 if there's only 1 button and we don't care about the result (there is only text in one of Button1Text, Button2Text, or Button3Text).<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.YesAllNoAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Yes", "Yes to All", or "No".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.YES if user responds "Yes" to the message - this message may be repeated for the current action. <br></br>
            AlertResult.YESALL if user responds "Yes to All" to the message - this message will not be repeated for the current action. <br></br>
            AlertResult.NO if user responds "No" to the message.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.IgnoreRetryAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a message where the possible responses to that message should be "Ignore" or "Retry".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.IGNORE if user responds "Ignore" to the message. <br></br>
            AlertResult.RETRY if user responds "Retry" to the message. <br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.RetryCancelAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a message where the possible responses to that message should be "Retry" or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.RETRY if user responds "Retry" to the message. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action. <br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.RetryCancelAlert(Simply.Domain.Utility.SimplyMessage,System.IntPtr)">
            <summary>
            Display a message where the possible responses to that message should be "Retry" or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <param name="owner">A System.IntPtr object that represents the top-level window that will own the modal dialog.</param>
            <returns>
            AlertResult.RETRY if user responds "Retry" to the message. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action. <br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.ContinueAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a message where the possible responses to that message should be "Continue" or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.CONTINUE if user responds "Continue" to the message. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action. <br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.BackupAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Yes", "No", or "Backup".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.YES if user responds "Yes" to the message. <br></br>
            AlertResult.NO if user responds "No" to the message. <br></br>
            AlertResult.BACKUP if user responds "Backup" to the message - back up functions will be performed before the current action continues.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.SetReadyAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Proceed", "Backup", or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.PROCEED if user responds "Proceed" to the message. <br></br>
            AlertResult.BACKUP if user responds "Backup" to the message - back up functions will be performed before the current action continues. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action.<br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.TestPrintAlert(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a confirmation message where the possible responses to that message should be "Print Test", "Print All", or "Cancel".
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user.</param>
            <returns>
            AlertResult.PRINTTEST if user responds "Print Test" to the message. <br></br>
            AlertResult.PRINTALL if user responds "Print All" to the message. <br></br>
            AlertResult.CANCEL if user wants to cancel the current action. <br></br>
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.PrintEmailAlert(Simply.Domain.Utility.SimplyMessage,System.Boolean)">
            <summary>
            Display a confirmation message in a dialog with "Email", "Print" and "Cancel" buttons
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user</param>
            <param name="defaultEmail">Whether email button is the default button.</param>
            <returns>
            AlertResult.EMAIL if user clicked "Email", 
            AlertResult.PRINT if user clicked "Print", 
            AlertResult.CANCEL if user clicked "Cancel"
            </returns>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AlertWithIcon(Simply.Domain.Utility.SimplyMessage,System.Drawing.Icon)">
            <summary>
            Display a message in a dialog with an "Ok" button
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user</param>
            <param name="icon">A icon object that is displayed inside the alert dialog</param>
        </member>
        <member name="M:SimplySDK.Support.SDKAlert.AlertWithLogger(Simply.Domain.Utility.SimplyMessage)">
            <summary>
            Display a  message with an error logger detailing warnings and errors with "OK" and "Print" buttons
            </summary>
            <param name="message">A SimplyMessage object that contains a message to be displayed to the user</param>
        </member>
        <member name="T:SimplySDK.Support.SDKCollaborationInterop">
            <summary>
            Replaces all interop flags and functions accessed by the Sage Drive feature with the implementation for SDK.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.SDKCollaborationInterop.IsInInteropCall">
            <summary>
            Get if currently executing a call that would be an interop call for Sage 50.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.GetCollaborationSetting(Sage.Simply.Common.Interop.DotNetCollaborationSetting@)">
            <summary>
            Get the current Sage Drive global settings from database record.
            </summary>
            <param name="setting">Returns the setting values in this object</param>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.VerifyDatabaseFile(System.String,System.String)">
            <summary>
            Check and verify all database files exist in the specified folder.
            </summary>
            <param name="folder"></param>
            <param name="databaseName"></param>
            <returns>Returns true if all the files are found and verified.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.IsCollaborationActiveMode">
            <summary>
            Get if currently in Sage Drive shared mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.IsSageDriveCompany">
            <summary>
            Get if current company has ever connected to Sage Drive.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.IsSageDriveReadOnly">
            <summary>
            Get if currently in Sage Drive read-only mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.SetCollaborationActiveMode(System.Boolean)">
            <summary>
            Set the Sage Drive shared mode.
            </summary>
            <param name="isCollaborationActive">true for in shared mode; otherwise false for not shared</param>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.SetSageDriveCompany(System.Boolean)">
            <summary>
            Set current company as having Sage Drive.
            </summary>
            <param name="isSageDriveCompany"></param>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.SetSageDriveReadOnly(System.Boolean)">
            <summary>
            Set the Sage Drive read-only mode.
            </summary>
            <param name="isReadOnly">true for read only mode; otherwise false for not read only</param>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.TransBegin">
            <summary>
            Start a database transaction.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.ExecOtherSQL(System.String)">
            <summary>
            Execute a given sql statement.
            </summary>
            <param name="sql">The sql to execute</param>
            <returns>true if executed successfully; otherwise false</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.TransCommit">
            <summary>
            Commit a database transaction.
            </summary>
            <returns>true if successful; otherwise false</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.TransRollback">
            <summary>
            Rollback a database transaction.
            </summary>
            <returns>true if successful; otherwise false</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.CloseSimply">
            <summary>
            Close the Sage 50 application.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.OpenCompany(System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Re-open the company file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationInterop.NumPendingPayloadToUpload">
            <summary>
            Retrieve the number of pendind payloads for upload.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUtil.#ctor">
            <summary>
            Create a new <see cref="T:SimplySDK.Support.SDKCollaborationUtil"/> instance.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUtil.GetLoginEmail">
            <summary>
            Gets the SageId email that was used to log in
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUtil.IsUserLoggedIn(System.Boolean)">
            <summary>
            Check if there is currently a Sage Id signed-in. There is no prompt if there is no sign-in.
            </summary>
            <param name="promptUser"></param>
            <returns>True if user logged in successfully</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUtil.IsUserLoggedInPrompt(System.Boolean)">
            <summary>
            Return true if user is logged in.  If not, it will prompt user for login
            </summary>
            <param name="promptUser"></param>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUtil.LoadSageIDPrefixHash">
            <summary>
            Get a unique prefix that can be prepended to a Sage ID email address to make it unique.
            This allows SDK to support multiple active logins using the same Sage ID email.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKCollaborationUtil.SyncUserLogAndDataset">
            <summary>
            This function updates the sdrvUsr table to include all "new" users and remove all "exit" users on the dataset
            </summary>
            <returns> if succeeded</returns>
        </member>
        <member name="T:SimplySDK.Support.SDKDatabaseUtility">
            <summary>
            This class is a simple utility to query, update, insert and remove information for Sage 50 Accounting databases via SQL.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetDataFromLastSelectQuery(System.Int32,System.Int32)">
            <summary>
            Gets a string value from the last query executed.
            </summary>
            <param name="rowIndex">Zero based row index of the query results.</param>      
            <param name="columnIndex">Zero based column index of the query results.</param>      
            <returns>A string value.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.BeginTransaction">
            <summary>
            Start a new transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If already in a transaction.</exception>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.Commit">
            <summary>
            Commit the current transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If not in a transaction.</exception>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.ExecuteReader(System.String)">
            <summary>
            Run an SQL SELECT Query.
            </summary>
            <param name="query">The SQL query string.</param>  
            <returns>IDataReader object.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.Rollback">
            <summary>
            Rollback the current transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If not in a transaction.</exception>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.RunSelectQuery(System.String)">
            <summary>
            Run an SQL SELECT Query.
            </summary>
            <param name="query">The SQL query string.</param>  
            <returns>Number of rows the query returned.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.RunScalerQuery(System.String)">
            <summary>
            Run a scaler SQL SELECT Query.  
            </summary>
            <param name="query">The SQL scaler query string.</param>  
            <returns>An object that contains the query result.</returns>
            <remarks>
            The query string should return only one row and one column - ie. "SELECT COUNT(*) FROM table".<br></br>
            The return value depends on the query and should be cast to the correct type.<br></br>
            </remarks>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.RunNonQuery(System.String)">
            <summary>
            Run an SQL INSERT, UPDATE or DELETE query.
            </summary>
            <param name="query">The SQL insert, update, or delete string.</param>  
            <returns>Number of rows affected by the query.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetStringFromLastSelectQuery(System.Int32,System.Int32)">
            <summary>
            Gets a string value from the last query executed.
            </summary>
            <param name="rowIndex">Zero based row index of the query results.</param>      
            <param name="columnIndex">Zero based column index of the query results.</param>      
            <returns>A string value.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetShortFromLastSelectQuery(System.Int32,System.Int32)">
            <summary>
            Gets a short value from the last query executed.
            </summary>
            <param name="rowIndex">Zero based row index of the query results.</param>      
            <param name="columnIndex">Zero based column index of the query results.</param>      
            <returns>A short value.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetIntFromLastSelectQuery(System.Int32,System.Int32)">
            <summary>
            Gets a int value from the last query executed.
            </summary>
            <param name="rowIndex">Zero based row index of the query results.</param>      
            <param name="columnIndex">Zero based column index of the query results.</param>      
            <returns>An int value.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetDoubleFromLastSelectQuery(System.Int32,System.Int32)">
            <summary>
            Gets a double value from the last query executed.
            </summary>
            <param name="rowIndex">Zero based row index of the query results.</param>      
            <param name="columnIndex">Zero based column index of the query results.</param>      
            <returns>A double value.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetDateTimeFromLastSelectQuery(System.Int32,System.Int32)">
            <summary>
            Gets a DateTime value from the last query executed.
            </summary>
            <param name="rowIndex">Zero based row index of the query results.</param>      
            <param name="columnIndex">Zero based column index of the query results.</param>      
            <returns>A DateTime value.</returns>
        </member>
        <member name="M:SimplySDK.Support.SDKDatabaseUtility.GetDataSetFromLastSelectQuery">
            <summary>
            Gets the DataSet object value from the last query executed.
            </summary>
            <returns>A DataSet object.</returns>
        </member>
        <member name="P:SimplySDK.Support.SDKSageIdAuthManager.Instance">
            <summary>
            Get the singleton instance of this class.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKSageIdAuthManager.#ctor">
            <summary>
            Create a new <see cref="T:SimplySDK.Support.SDKSageIdAuthManager"/> instance.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKSageIdAuthManager.CreateSignInBrowser">
            <summary>
            Create a new Sage ID signin browser instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Support.SDKSageIdSignInBrowser">
            <summary>
            A Sage ID sign-in browser for Auth0 that allows for overriding the default sign-in browser.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SDKSageIdSignInBrowser.#ctor(SimplySDK.Support.SageId.ISageIdSignInBrowser)">
            <summary>
            Create a new <see cref="T:SimplySDK.Support.SDKSageIdSignInBrowser"/> instance.
            </summary>
            <param name="browser">The custom browser implementation that will override the default sign-in browser</param>
        </member>
        <member name="M:SimplySDK.Support.SDKSageIdSignInBrowser.InvokeAsync(IdentityModel.OidcClient.Browser.BrowserOptions,System.Threading.CancellationToken)">
            <summary>
            Run the main process that performs the Sage ID sign-in.
            </summary>
            <param name="options"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Support.Search">
            <summary>
            Search mimics behaviours of Search dialog.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.Search.#ctor(Simply.Domain.MiscFeatures.SearchModel)">
            <summary>
            Initializes a new instance of the Search class.
            </summary>
            <param name="model">SearchModel object.</param>
        </member>
        <member name="P:SimplySDK.Support.Search.SearchTypeName">
            <summary>
            Gets or sets the search type name.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Search.IsBasicSearch">
            <summary>
            Check whether only show basic search tab.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Search.SearchTypeEnabled">
            <summary>
            Check whether search type is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Search.SearchModel">
            <summary>
            Gets the SearchModel.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.Search.SetBasicSearchTypeByName(System.String)">
            <summary>
            Sets the search type to.
            </summary>
            <param name="searchTypeName">The search type string to set.</param>
        </member>
        <member name="M:SimplySDK.Support.Search.GetBasicSearchTypeName">
            <summary>
            Find the currently selected search type name.
            </summary>
            <returns>The currently selected search type name, or empty string if not found.</returns>
        </member>
        <member name="T:SimplySDK.Support.JournalSearch">
            <summary>
            Search mimics behaviours of Search dialog.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.JournalSearch.#ctor(Simply.Domain.MiscFeatures.SearchModel)">
            <summary>
            Initializes a new instance of the JournalSearch class.
            </summary>
            <param name="model">SearchModel object.</param>
        </member>
        <member name="P:SimplySDK.Support.JournalSearch.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalSearch.EndDate">
            <summary>
            Gets or sets the start date.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalSearch.JournalSource">
            <summary>
            Gets or sets the source string for the journal.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalSearch.TransactionNumber">
            <summary>
            Gets or sets the transaction number for the journal.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalSearch.Amount">
            <summary>
            Gets the search amount.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalSearch.UseAmount">
            <summary>
            Check whether the search amount is blank.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.JournalSearch.SetAmountToSearch(System.Double,System.Boolean)">
            <summary>
            Sets the amount to search.
            </summary>
            <param name="amount">The amount to search.</param>
            <param name="useAmount">Whether to use the amount to search or leave it as blank.</param>
        </member>
        <member name="M:SimplySDK.Support.JournalSearch.GetLookupList">
            <summary>
            Gets the lookup list according to the currently set parameters of the search
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Support.LookupLine">
            <summary>
            Represents a line in the from a JournalSearch.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.LookupLine.#ctor(Simply.Domain.Journals.JournalSupport.JournalEntryLookupOption.JournalLookupLine)">
            <summary>
            Initializes a new instance of the APARLookupLine class.
            </summary>
            <param name="line">The JournalLookupLine to wrap.</param>
        </member>
        <member name="P:SimplySDK.Support.LookupLine.Date">
            <summary>
            Gets the Date.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LookupLine.Name">
            <summary>
            Gets the Name or Description.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LookupLine.Source">
            <summary>
            Gets the Source or Invoice Number.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LookupLine.JournalNumber">
            <summary>
            Gets the Journal Number.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.LookupLine.Amount">
            <summary>
            Gets the Amount.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.InventSelectCategoryInfo">
            <summary>
            Handles selection of inventory by inventory categories.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.InventSelectCategoryInfo.#ctor(SimplySDK.Support.InvoiceJournal)">
            <summary>
            Initializes a new instance of the InventSelectCategoryInfo class.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InventSelectCategoryInfo.Model">
            <summary>
            Gets the wrapped InventSelectCategoryModel.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.SerialNumberInfo">
            <summary>
            Handles entry of serial numbers on invoice lines.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.#ctor(SimplySDK.Support.InvoiceJournal,Simply.Domain.Journals.APARJournals.APARInvoiceRow)">
            <summary>
            Initializes a new instance of the SerialNumberInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the serial number information.</param>
            <param name="row">The invoice row for this serial number information.</param>
        </member>
        <member name="P:SimplySDK.Support.SerialNumberInfo.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetRequiredSerialNumbers">
            <summary>
            Gets the number of serial numbers required.
            </summary>
            <returns>The number of serial numbers required.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetEnteredSerialNumbers">
            <summary>
            Gets the number of serial numbers entered.
            </summary>
            <returns>The number of serial numbers entered.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetRemainingSerialNumbers">
            <summary>
            Gets the number of serial numbers remaining to be entered.
            </summary>
            <returns>The number of serial numbers remaining to be entered.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetTotalLines">
            <summary>
            Gets the total number of lines, including blank lines.
            </summary>
            <returns>The total number of lines, including blank lines.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetSerialNumberStatus(System.Int32)">
            <summary>
            Gets the serial number status for a specific line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The serial number status.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetSerialNumber(System.Int32)">
            <summary>
            Gets the serial number for a specific line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The serial number.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.SetSerialNumber(System.String,System.Int32)">
            <summary>
            Sets the serial number for a specific line.
            </summary>
            <param name="serialNum">The serial number.</param>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The serial number.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.Save">
            <summary>
            Save the serial number information.
            </summary>
            <returns>True if serial number information is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.SerialNumberInfo.GetLineByIndex(System.Int32)">
            <summary>
            Gets the line by index.
            </summary>
            <param name="lineNum">Line number.</param>
            <returns>SerialNumberLineGridData for the line.</returns>
        </member>
        <member name="T:SimplySDK.Support.ShipmentTrackingInfo">
            <summary>
            Handles entry of shipment tracking information for invoices.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.ShipmentTrackingInfo.#ctor(SimplySDK.Support.InvoiceJournal)">
            <summary>
            Initializes a new instance of the ShipmentTrackingInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the ShipmentTrackingInfo.</param>
        </member>
        <member name="P:SimplySDK.Support.ShipmentTrackingInfo.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ShipmentTrackingInfo.ShipperBoxEnabled">
            <summary>
            Gets if the shipper field is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ShipmentTrackingInfo.TrackingNumberFieldEnabled">
            <summary>
            Gets if the tracking number is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ShipmentTrackingInfo.TrackingNumber">
            <summary>
            Gets or sets the tracking number.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.ShipmentTrackingInfo.Save">
            <summary>
            Saves shipment tracking information.
            </summary>
            <returns>True if shipment tracking information is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.ShipmentTrackingInfo.SelectShipper(System.String)">
            <summary>
            Select a shipper from shipper list.
            </summary>
            <param name="shipperName">Shipper name user picked.</param>
        </member>
        <member name="T:SimplySDK.Support.InvoiceJournal">
            <summary>
             Handles the common behaviour for journals that create invoices.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.APARInvoiceModel">
            <summary>
            Gets the journal model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsFreightLinked">
            <summary>
            Gets the journal model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowProjectList">
            <summary>
            Gets if the project list is visible. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsInvoice">
            <summary>
            Gets if the invoice journal is in the invoice mode.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsOrder">
            <summary>
            Gets if the invoice journal is in the order mode.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsQuote">
            <summary>
            Gets if the invoice journal is in the quote mode.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.HideOrder">
            <summary>
            Gets if the order feature is hidden.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.HideQuote">
            <summary>
            Gets if the quote feature is hidden.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowLocationInfo">
            <summary>
            Gets if the location information is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.LocationPinned">
            <summary>
            Gets or sets if the location field is pinned.
            </summary>
            <remarks>
            If pinned (true), after posting, location will not be cleared.
            </remarks>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowShipDate">
            <summary>
            Gets if the ship date is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.EnablePaidType">
            <summary>
            Gets if the paid by type (pay later, or by cash etc.) field is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowPaidByType">
            <summary>
            Gets if the Paid by type field is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.OrderQuoteNoLabel">
            <summary>
            Gets the label string for order/quote number label string.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowDiscountGroup">
            <summary>
            Gets if the discount fields are visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.AmountOwing">
            <summary>
            Gets the amount owing.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.PrePayAmount">
            <summary>
            Gets the prepayment or deposit paid amount.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsAddressEnabled">
            <summary>
            Gets if the address is enabled to modify.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowTerms">
            <summary>
            Gets if the terms are visible (discount percentage before how many days and net days).
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.GetOrderNoTerms">
            <summary>
            Gets the terms for the order number label.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsQuantityColumnEnabled">
            <summary>
            Gets if the quantity column is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsOrderColumnEnabled">
            <summary>
            Gets if the order field is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsBackOrderColumnEnabled">
            <summary>
            Gets if the back order field is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowInvoiceNumberField">
            <summary>
            Gets if the invoice number field is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShowOrderQuoteNumberField">
            <summary>
            Gets if the order/quote number fields are shown.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.InvoiceNumber">
            <summary>
            Gets or sets the invoice number.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.OrderQuoteNum">
            <summary>
            Gets or set the order quote number.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.SubTotalAmount">
            <summary>
            Gets the current subtotal amount.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsInLookup">
            <summary>
            Gets if the journal is in lookup mode.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsInAdjustMode">
            <summary>
            Gets if the journal is in adjust mode.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.NumberOfJournalLines">
            <summary>
            Gets the number of lines in the journal.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShipperName">
            <summary>
            Gets the shipper's name.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.ShipTrackingNumber">
            <summary>
            Gets the ship tracking number.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.AttachmentPath">
            <summary>
            Gets the attachment path or URL. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.InvoiceJournal.IsAttachmentURL">
            <summary>
            Gets if the attachment is URL.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTimeSlipActivityInfo">
            <summary>
            Gets the time slip activity information for the invoice.
            </summary>
            <returns>A instance of a TimeSlipActivityInfo object.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SelectProject(System.String)">
            <summary>
            Select a project to allocate 100% of the amount on the invoice or order to it.
            </summary>
            <param name="project">project name</param>
            <returns>project name set</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.AdjustInvoiceFromLookup">
            <summary>
            Adjust the currently loaded invoice from lookup.
            </summary>
            <returns>True if the current journal can be adjusted, false otherwise.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.ReverseInvoice">
            <summary>
            Reverse the currently loaded invoice from lookup.
            </summary>
            <returns>True if the invoice is reversed, false otherwise.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.RemoveJournalLine(System.Int32)">
            <summary>
            Remove a grid line in journal.
            </summary>
            <param name="lineNumber">The line number of the line to be removed.</param>
            <returns>True if the line is removed.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetShipDate(System.String)">
            <summary>
            Sets the ship date using the given date string. 
            </summary>
            <param name="dateString">Date string that represents a date (could be invalid).</param>
            <returns>The string that should be visible in User interface after the given string is set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetAddressLine(System.Int32)">
            <summary>
            Gets the address line.
            </summary>
            <param name="lineNumber">Address line number, start at 1.</param>
            <returns>Address line at given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetAddressLine(System.String,System.Int32)">
            <summary>
            Sets the address line.
            </summary>
            <param name="address">Address to set.</param>
            <param name="lineNumber">Address line number, start at 1.</param>
            <returns>Address line at given line number after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetShipToAddressLine(System.Int32)">
            <summary>
            Gets the ship address line.
            </summary>
            <param name="lineNumber">Address line number, start at 1.</param>
            <returns>Ship address line at given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetShipToAddressLine(System.String,System.Int32)">
            <summary>
            Sets ship address line.
            </summary>
            <param name="address">Address to set.</param>
            <param name="lineNumber">Address line number, start at 1.</param>
            <returns>Ship address line at given line number after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTermDiscPercent">
            <summary>
            Gets the discount percentage term.
            </summary>
            <returns>Discount percentage term.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetTermDiscPercent(System.Double)">
            <summary>
            Sets the discount percentage term.
            </summary>
            <param name="percent">percentage to set.</param>
            <returns>Percentage after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTermDiscDay">
            <summary>
            Gets the discount day term.
            </summary>
            <returns>Discount day term.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetTermDiscDay(System.Int32)">
            <summary>
            Sets the discount day term
            </summary>
            <param name="day">Number of days to set for term.</param>
            <returns>Discount day term after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTermDiscNetDay">
            <summary>
            Gets the discount net day term.
            </summary>
            <returns>Discount net day term.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetTermDiscNetDay(System.Int32)">
            <summary>
            Sets the discount net day term.
            </summary>
            <param name="day">Number of days to set for Net days.</param>
            <returns>Discount net day term after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SelectPaidByType(System.String)">
            <summary>
            Select paid by type by string.
            </summary>
            <param name="paidByTypeString">Paid By type string.</param>
            <returns>Paid by type ID.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetPaidByType">
            <summary>
            Gets the payment type.
            </summary>
            <returns>The payment type.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SelectAPARLedger(System.String)">
             <summary>
             Select the vendor or customer.
             </summary>
             <param name="ledgerName">Name of the vendor or customer to select.</param>
             <returns>ID of the vendor or customer selected.</returns>
             <remarks>
             The one time vendor name is "&lt;One-time vendor&gt;" and one time customer name is "&lt;One-time customer&gt;". <br></br>
             Selecting a ledger will automatically choose the default paid type.  Use SelectPaidByType() to change the payment type afterwards.
            </remarks>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetShipDate(System.Nullable{System.DateTime})">
            <summary>
            Sets the ship date.
            </summary>
            <param name="date">Date to set.</param>
            <returns>Date string.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetShipDateString">
            <summary>
            Gets the ship date string.
            </summary>
            <remarks>
            The reason we are getting ship date string, instead of ship date, 
            is because the ship date string could be an invalid date string.
            </remarks>
            <returns>Ship date string.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SelectLocation(System.String)">
            <summary>
            Select location given the location string.
            </summary>
            <param name="location">location name.</param>
            <returns>Location name set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetCurrentLocation">
            <summary>
            Gets the current location.
            </summary>
            <returns>Name of current selected Location.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetCurrentLocationID">
            <summary>
            Gets the ID of current location.
            </summary>
            <returns>ID of current location.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetItemNumber(System.String,System.Int32)">
            <summary>
            Sets the item number for given line number.
            </summary>
            <param name="itemNumber">Item number to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>The final result in item number field.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetItemNumber(System.Int32)">
            <summary>
            Gets the item number for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Item number for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.IsJournalLineReadOnly(System.Int32)">
            <summary>
            Checks if a journal line is read only.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>if it is read only, return true; otherwise, false.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetQuantity(System.Double,System.Int32)">
            <summary>
            Sets the quantity for given line number.
            </summary>
            <param name="quantity">Quantity to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>The final result in quantity field.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetQuantity(System.Int32)">
            <summary>
            Gets the quantity for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Quantity for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetOrdered(System.Double,System.Int32)">
            <summary>
            Sets the ordered quantity for given line number.
            </summary>
            <param name="ordered">Ordered to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>The final result in ordered field.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetOrdered(System.Int32)">
            <summary>
            Gets the ordered quantity for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Ordered for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetBackOrdered(System.Double,System.Int32)">
            <summary>
            Sets the back ordered quantity for given line number.
            </summary>
            <param name="backOrdered">Back ordered quantity to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>The final result in back ordered field.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetBackOrdered(System.Int32)">
            <summary>
            Gets the back ordered quantity for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Back ordered for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetUnit(System.String,System.Int32)">
            <summary>
            Sets the unit for given line number.
            </summary>
            <param name="unit">Unit to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>The final result in Unit field.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetUnit(System.Int32)">
            <summary>
            Gets the Unit for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Unit for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetUnitType(System.Int32)">
            <summary>
            Gets the unit type for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Unit Type for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetDescription(System.Int32)">
            <summary>
            Gets the description for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Description for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetDescription(System.String,System.Int32)">
            <summary>
            Sets the description for a given line number.
            </summary>
            <param name="description">description for the line.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Description for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetPrice(System.Int32)">
            <summary>
            Gets the Price for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Price for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetPrice(System.Double,System.Int32)">
            <summary>
            Sets the price for given line number.
            </summary>
            <param name="price">Price to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Price for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetTaxCodeString(System.String,System.Int32)">
            <summary>
            Sets the tax code string for a given line number.
            </summary>
            <param name="taxCode">tax code to set.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Tax code string for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTaxCodeString(System.Int32)">
            <summary>
            Gets the tax code string for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Tax code string for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTaxAmount(System.Int32)">
            <summary>
            Gets the tax amount for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Tax amount for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetLineAmount(System.Double,System.Int32)">
            <summary>
            Sets the line amount for given line number.
            </summary>
            <param name="newAmount">New line amount.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Line amount for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetLineAmount(System.Int32)">
            <summary>
            Gets the LineAmount for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Line amount for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetLineAccount(System.String,System.Int32)">
            <summary>
            Sets the account number for given line number.
            </summary>
            <param name="account">Account number in string.</param>
            <param name="line">Line number, start from 1.</param>
            <returns>Account number for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetAccount(System.Int32)">
            <summary>
            Gets the account string for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Account number string for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetAccountNumber(System.Int32)">
            <summary>
            Gets the account number string for a given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Account number string for a given line number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.IsLineAllocated(System.Int32)">
            <summary>
            Gets if the line is allocated.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>True if allocated.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.AllocateLine(System.Int32)">
            <summary>
            Gets the project allocation information for a line.
            </summary>
            <param name="lineNum">Which line to allocate, start from 1.</param>
            <returns>An instance of a ProjectAllocation object, if the line is allocatable.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetSerialNumbers(System.Int32)">
            <summary>
            Gets the serial number information to enter or select serial numbers.
            </summary>
            <param name="line">Which line to to set serial numbers, start from 1.</param>
            <returns>An instance of a SerialNumberInfo object, if the line can have serial numbers, return </returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetDiscountRate(System.Double)">
            <summary>
            Sets the discount rate.
            </summary>
            <param name="rate">Rate to set.</param>
            <returns>Rate after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetDiscountRate">
            <summary>
            Gets the discount rate
            </summary>
            <returns>Discount rate.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetDiscountAmount">
            <summary>
            Gets the discount amount.
            </summary>
            <returns>Discount amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetDiscountAmount(System.Double)">
            <summary>
            Sets the discount amount.
            </summary>
            <param name="amount">Amount to set.</param>
            <returns>Amount after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTotalAmount">
            <summary>
            Gets the total amount of the invoice.
            </summary>
            <returns>Total amount of the invoice.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetAmountOwing">
            <summary>
            Gets the amount owing of the invoice.
            </summary>
            <returns>amount owing of the invoice.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetNetTotalAfterDiscount">
            <summary>
            Gets the net total amount of the invoice after discount.
            </summary>
            <returns>Net total amount of the invoice after discount.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTaxTotalAmount">
            <summary>
            Gets the tax total mount of the invoice.
            </summary>
            <returns>Tax total amount of the invoice.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetFreightAmount(System.Double)">
            <summary>
            Sets the freight amount.
            </summary>
            <param name="amount">Amount to set.</param>
            <returns>Freight amount after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetFreightAmount">
            <summary>
            Gets the freight amount.
            </summary>
            <returns>Freight amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetFreightTaxCode(System.String)">
            <summary>
            Sets the freight tax code string.
            </summary>
            <param name="taxCode">tax code to set.</param>
            <returns>Tax code after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetFreightTaxCode">
            <summary>
            Gets the freight tax code string.
            </summary>
            <returns>Tax code.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetFreightTaxTotal">
            <summary>
            Gets the Freight tax total amount.
            </summary>
            <returns>Freight tax total amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetFreightTax1Amount(System.Double)">
            <summary>
            Sets the tax amount for freight tax 1.
            </summary>
            <param name="amount">Amount to set.</param>
            <returns>Tax 1 amount after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetFreightTax1Amount">
            <summary>
            Gets the freight amount.
            </summary>
            <returns>Freight amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetFreightTax2Amount(System.Double)">
            <summary>
            Sets the tax amount for freight tax 2.
            </summary>
            <param name="amount">Amount to set.</param>
            <returns>Tax 2 amount after set.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetFreightTax2Amount">
            <summary>
            Gets the freight amount.
            </summary>
            <returns>Freight amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.AllocateFreightAmount">
            <summary>
            Gets the project allocation information for freight.
            </summary>
            <returns>An instance of a ProjectAllocation object if freight amount is allocatable.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetLineTaxAmountInfo(System.Int32)">
            <summary>
            Gets the tax summary information for an invoice line.
            </summary>
            <param name="row">The row of the journal line, start from 1.</param>
            <returns>An instance of a TaxSummaryInfo object.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetFreightTaxAmountInfo">
            <summary>
            Gets the tax summary information for a freight line.
            </summary>
            <returns>An instance of a TaxSummaryInfo object.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetTotalTaxAmountInfo">
            <summary>
            Gets the tax summary information.
            </summary>
            <returns>An instance of a TaxSummaryInfo object.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetOrderQuoteNum(System.String)">
            <summary>
            Set the current order/quote number.
            </summary>
            <param name="num">The order/quote number to set.</param>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadInvoicedOrder(System.Int32,System.String)">
            <summary>
            Loads a fully invoiced order
            </summary>
            <param name="orderID">The order Id of the invoiced order</param>
            <param name="num">The number of the order/quote record to load.</param>
            <returns>Returns true if loading is successful; false if the loading is stopped or unsuccessful.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadOrderQuoteRecord(System.String)">
            <summary>
            Loads an order/quote record.
            </summary>
            <param name="num">The number of the order/quote record to load.</param>
            <returns>Returns true if loading is successful; false if the loading is stopped or unsuccessful.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.CopyOrderRecord">
            <summary>
            Copies the current loaded order to a new order
            </summary>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.AdjustOrderQuoteRecord">
            <summary>
            Adjusts the current loaded order/quote record.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SelectTransType(System.String)">
            <summary>
            Sets the current transaction type.
            </summary>
            <param name="transType">The transaction type string.</param>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SelectTransType(System.Int16)">
            <summary>
            Sets the current transaction type.
            </summary>
            <param name="transType">The transaction type.  
            The transaction type can be: 0 (Invoice), 1 (Order), 2 (Quote).
            </param>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetShipmentTrackingInfo">
            <summary>
            Gets shipment tracking information to enter tracking information.
            </summary>
            <returns>An instance of a ShipmentTracking object.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadInvoiceForLookup(System.String,System.String)">
            <summary>
            Load up the invoice to lookup.
            </summary>
            <param name="custVendName">The customer/vendor name.</param>
            <param name="invoiceNumber">The invoice number.</param>
            <returns>True if invoice is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadInvoiceForLookup(System.String,System.Int32,System.Boolean)">
            <summary>
            Load up the invoice to lookup.
            </summary>
            <param name="custVendName">The customer/vendor name.</param>
            <param name="transactionNumber">The transaction number.</param>
            <param name="lastYear">Whether the transaction is in last year.</param>
            <returns>True if invoice is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadInvoiceForAdjust(System.String,System.String)">
            <summary>
            Load up the invoice to adjust.
            </summary>
            <param name="custVendName">The customer/vendor name.</param>
            <param name="invoiceNumber">The invoice number.</param>
            <returns>True if invoice is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadInvoiceForAdjust(System.String,System.Int32,System.Boolean)">
            <summary>
            Load up the invoice to adjust.
            </summary>
            <param name="custVendName">The customer/vendor name.</param>
            <param name="transactionNumber">The transaction number.</param>
            <param name="lastYear">Whether the transaction is in last year.</param>
            <returns>True if invoice is loaded successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetLookupList(System.String,System.DateTime,System.DateTime,System.String,System.Int32,System.Double,System.Boolean)">
            <summary>
            Gets a list of invoices according to search parameters.
            </summary>
            <param name="custVendName">Customer name to search for - if null or empty, this search parameter is ignored.</param>
            <param name="startDate">Start eate.</param>
            <param name="endDate">End date.</param>
            <param name="invoiceNum">Invoice number to search for - if null or empty, this search parameter is ignored.</param>
            <param name="transactionNumber">Transaction number to search for - if less than or equal to zero, this search parameter is ignored.</param>
            <param name="amount">Amount to search for.</param>
            <param name="searchByAmount">True to search by amount - if false, the amount parameter is ignored.</param>
            <returns>A list of invoices for lookup.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.DoRcStore">
            <summary>
            Store a recurring entry. 
            </summary>
            <returns>An instance of a RcStore object, if the entry can be stored.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.DoRcRecall">
            <summary>
            Recalls a recurring entry. 
            </summary>
            <returns>An instance of a RcRecall object, if the recurring entries can be recalled.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetCurrentTransType">
            <summary>
            Gets the current transaction type.
            </summary>
            <returns>The transaction type string.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.InitCurrOrderQuoteNum">
            <summary>
            Init the current order/quote number.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.RemoveOrderQuote(System.String)">
            <summary>
            Remove an order/quote record.
            </summary>
            <param name="num">The number of order/quore record to be removed.</param>
            <returns>True if order/quote is removed successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.SetReferenceNumber(System.String)">
            <summary>
            Set the reference number for the prepayment or deposit.
            </summary>
            <param name="reference">The reference number value.</param>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetReferenceNumber">
            <summary>
            Get the reference number for the prepayment or deposit.
            </summary>
            <returns>The reference number.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.ConvertOrderToInvoice">
            <summary>
            Converts an order to an invoice.  
            </summary>
            <remarks>An order must be currently loaded before converting.  Calling this function has the same effect as loading an order, then switching the transaction type to invoice.</remarks>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.ConvertQuoteToInvoice">
            <summary>
            Converts an quote to an invoice.  
            </summary>
            <remarks>An quote must be currently loaded before converting.  Calling this function has the same effect as loading an quote, then switching the transaction type to invoice.</remarks>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.ConvertQuoteToOrder">
            <summary>
            Converts an quote to an order.  
            </summary>
            <remarks>An quote must be currently loaded before converting.  Calling this function has the same effect as loading an quote, then switching the transaction type to order.</remarks>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.CreateTimeSlipActivityInfo">
            <summary>
            Creates an TimeSlipActivityInfo object.
            </summary>
            <returns>an TimeSlipActivityInfo object.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.CanAddTimeSlip">
            <summary>
            Checks if can add time slip to journal.
            </summary>
            <returns>true if can add time slip to journal, false otherwise.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetJournalLine(System.Int32)">
            <summary>
            Gets the journal line of given line number.
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Journal line.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.GetJournalLineToSet(System.Int32)">
            <summary>
            Gets the journal line of given line number in order to set a field. In this case,
            we will insert a new line if the line to get is the last one
            </summary>
            <param name="line">Line number, start from 1.</param>
            <returns>Journal line.</returns>
        </member>
        <member name="M:SimplySDK.Support.InvoiceJournal.LoadInvoiceForLookupAdjust(SimplySDK.Support.APARJournalSearch,System.Boolean,System.Boolean)">
            <summary>
            Load up the invoice to lookup or adjust
            </summary>
            <param name="aparSearch">The search object.</param>
            <param name="lastYear">Whether the transaction is in last year.</param>
            <param name="isAdjust">Adjust invoice or lookup.</param>
            <returns>True if invoice is loaded successfully.</returns>
        </member>
        <member name="T:SimplySDK.Support.AdditionalInfo">
            <summary>
            Handles entry of additonal information for journals.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.#ctor(SimplySDK.Support.Journal)">
            <summary>
            Initializes a new instance of the AdditionalInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the AdditionalInfo.</param>
        </member>
        <member name="P:SimplySDK.Support.AdditionalInfo.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.SetAdditionalComment(System.String)">
            <summary>
            Sets the comment in additional information.
            </summary>
            <param name="comment">Comment to set.</param>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.GetAdditionalComment">
            <summary>
            Gets the comment in additional information.
            </summary>
            <returns>Additional information comment.</returns>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.SetAdditionalDate(System.String)">
            <summary>
            Sets the date string for additional information.
            </summary>
            <param name="date">Date to set.</param>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.GetAdditionalDate">
            <summary>
            Gets the date string for additional information.
            </summary>
            <returns>Date string for additional information.</returns>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.GetAddtionalDateYear">
            <summary>
            Gets the year number for additional date.
            </summary>
            <returns>Year number.</returns>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.GetAddtionalDateMonth">
            <summary>
            Gets the month number for additional date.
            </summary>
            <returns>Month number.</returns>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.GetAddtionalDateDay">
            <summary>
            Gets the day number for additional date.
            </summary>
            <returns>Day number.</returns>
        </member>
        <member name="M:SimplySDK.Support.AdditionalInfo.Save">
            <summary>
            Saves the additional information for a journal.
            </summary>
            <returns>True if additonal information is saved successfully.</returns>
        </member>
        <member name="T:SimplySDK.Support.APARJournal">
            <summary>
            Handles the common behaviour for vendor and customer journals.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.IsForeignEntry">
            <summary>
            Gets if the current transaction is a foreign entry.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.ShowPaidDepositAcct">
            <summary>
            Gets if the paid/deposit account is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.ShowChequeNumber">
            <summary>
            Gets if the cheque number is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.ChequeNumber">
            <summary>
            Gets or sets the cheque number string.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.ShowDirectPaymentNumber">
            <summary>
            Get if the Direct payment number is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.DirectPaymentNumber">
            <summary>
            Gets or sets the direct payment number.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.APARLedgerPinned">
            <summary>
            Gets or sets if the vendor or customer is pinned.
            </summary>
            <remarks>
            If pinned (true), after posting, the vendor or customer will not be cleared.
            </remarks>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.APARPaidByTypePinned">
            <summary>
            Gets or sets if the paid by type is pinned.
            </summary>
            <remarks>
            If pinned (true), after posting, the paid by type will not be cleared.
            </remarks>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.APARModel">
            <summary>
            Gets the journal model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.CanModifyJournal">
            <summary>
            Gets the modify rights.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.TransactionType">
            <summary>
            Gets or sets the journal transaction type.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.APARJournal.IsPostButtonEnabled">
            <summary>
            Check if the journal can be posted.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.SelectPaidByType(System.String)">
            <summary>
            Select paid by type by string.
            </summary>
            <param name="paidByTypeString">Paid By type string.</param>
            <returns>The ID of paid by type.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.GetPaidByType">
            <summary>
            Gets the payment type.
            </summary>
            <returns>The payment type.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.SelectAPARLedger(System.String)">
             <summary>
             Select the vendor or customer.
             </summary>
             <param name="ledgerName">Name of the vendor or customer to select.</param>
             <returns>ID of the vendor or customer selected.</returns>
             <remarks>
             The one time vendor name is "&lt;One-time vendor&gt;" and one time customer name is "&lt;One-time customer&gt;". <br></br>
             Selecting a ledger will automatically choose the default paid type.  Use SelectPaidByType() to change the payment type afterwards.
            </remarks>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.GetAPARLedgerName">
            <summary>
            Gets the name of currently selected vendor or customer.
            </summary>
            <returns>The vendor or customer name.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.SelectPaidDepositAccount(System.String)">
            <summary>
            Select paid from or deposit to account.
            </summary>
            <param name="accountString">Paid from or deposit to account.</param>
            <returns>An account object representing the paid from or deposit to account.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.GetPaidDepositAccount">
            <summary>
            Gets the account string of the paid from or deposit to account.
            </summary>
            <returns>The account string.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.GetPaidDepositAccountNumber">
            <summary>
            Gets the account number of the paid from or deposit to account.
            </summary>
            <returns>The account number.</returns>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.SelectTransType(System.String)">
            <summary>
            Sets the journal transaction type.
            </summary>
            <param name="transType">The transaction type string.</param>
        </member>
        <member name="M:SimplySDK.Support.APARJournal.GetCurrentTransType">
            <summary>
            Gets the current journal transaction type.
            </summary>
            <returns>The current transaction type string.</returns>
        </member>
        <member name="T:SimplySDK.Support.CurrencyUtil">
            <summary>
            CurrencyUtil provides services related to currencies.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CurrencyUtil.GetCurrencyByCurrencySymbol(System.String)">
            <summary>
            Given a currency code, find the currency this Code presents.
            </summary>
            <param name="currencyCode">Currency Code.</param>
            <returns>Currency found, or null if not found.</returns>
        </member>
        <member name="M:SimplySDK.Support.CurrencyUtil.GetCurrencyByCurrencyDescription(System.String)">
            <summary>
            Given a currency description, find the currency the description presents.
            </summary>
            <param name="currencyDesc">Currency Description.</param>
            <returns>Currency found, or null if not found.</returns>
        </member>
        <member name="T:SimplySDK.Support.Journal">
            <summary>
            Handles the common behaviour among all journals.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.Closed">
            <summary>
            Gets if the ledger object is deleted. 
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.SupportUtilityList">
            <summary>
            Gets a list of support utilities that created for the journal.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.TransactionDetail">
            <summary>
            Gets the transaction detail instance.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.CurrencySelected">
            <summary>
            Gets or sets the currency selected for this journal.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.ExchangeRate">
            <summary>
            Gets or sets the exchange rate.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.IsPostButtonVisible">
            <summary>
            Check if the post button is visible.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.IsPostButtonEnabled">
            <summary>
            Check if the journal can be posted.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.CanModifyJournal">
            <summary>
            Check if the journal can be modified.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.HasEditRights">
            <summary>
            Gets the journal edit rights.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.HasViewRights">
            <summary>
            Gets the journal lookup rights.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.Journal.Model">
            <summary>
            Gets the model object of this journal.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.Journal.SetJournalDate(System.String)">
            <summary>
            Sets the journal date using the given date string. 
            </summary>
            <param name="dateString">Date string that represents a date (could be invalid).</param>
            <returns>The date after it has been set.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.GetJournalDate">
            <summary>
            Gets the journal date in the format of a string.
            </summary>
            <returns>Journal date in the format of a string.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.DoAdditionalInfo">
            <summary>
            Create an additional information object to enter additonal information.
            </summary>
            <returns>An instance of an AdditionalInfo object.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.Post">
            <summary>
            Posts the journal.
            </summary>
            <returns>True if transaction is posted successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.GetLastJournalNumber">
            <summary>
            Gets the journal number of last posted one to help testing for this year.
            </summary>
            <returns>journal number of last posted one.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.GetLastJournalNumber(System.Boolean)">
            <summary>
            Gets the journal number of last posted one to help testing.
            </summary>
            <returns>journal number of last posted one.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.Undo">
            <summary>
            Undo the journal to reset it.
            </summary>
            <returns>True if changes to the journal are undone successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.Journal.Close">
            <summary>
            Closes the journal.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.Journal.ValidateAttachmentPath(System.String)">
            <summary>
            Validate the attachment path or URL
            </summary>
            <param name="path">The attachment path or URL</param>
            <returns>>True if the attachment path is valid or there is no attachment path to validate; false otherwise.</returns>
        </member>
        <member name="T:SimplySDK.Support.JournalEntryInfo">
            <summary>
            JournalEntryInfo reports information of the journal entry of currenty journal.
            This is basically to help people to verify results when doing unit testing.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.#ctor(Sage.Simply.Domain.Entities.JourEdit)">
            <summary>
            Initializes a new instance of the JournalEntryInfo class.  
            </summary>
            <param name="edit">JourEdit that contains journal entry information.</param>
        </member>
        <member name="P:SimplySDK.Support.JournalEntryInfo.DebitTotal">
            <summary>
            Get Debit Total
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalEntryInfo.CreditTotal">
            <summary>
            Get Credit Total
            </summary>
        </member>
        <member name="P:SimplySDK.Support.JournalEntryInfo.JournEditRec">
            <summary>
            Get the JourEdit
            </summary>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.NumberOfAccountLines">
            <summary>
            Gets the number of account entry lines.
            </summary>
            <returns>number of account entry lines.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.NumberOfProjectLines(System.Int32)">
            <summary>
            Gets the Number of project lines for account line at given line number.
            </summary>
            <param name="acctLineNum">.</param>
            <returns>.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetProjectName(System.Int32,System.Int32)">
            <summary>
            Gets the project name for given account line and given project line.
            </summary>
            <param name="acctLineNum">Account line number, start from 1.</param>
            <param name="projectLineNum">project line number, start from 1.</param>
            <returns>Project name.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetTotalHours(System.Int32,System.Int32)">
            <summary>
            Gets the total hours for given account line and given project line.
            </summary>
            <param name="acctLineNum">Account line number, start from 1.</param>
            <param name="projectLineNum">project line number, start from 1.</param>
            <returns>total hours</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetProjectAllocAmountHome(System.Int32,System.Int32)">
            <summary>
            Gets the project allocation amount for given account line and given project line.
            </summary>
            <param name="acctLineNum">Account line number, start from 1.</param>
            <param name="projectLineNum">project line number, start from 1.</param>
            <returns>Project allocation amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetProjectAllocAmountForeign(System.Int32,System.Int32)">
            <summary>
            Gets the project allocation amount for given account line and given project line.
            </summary>
            <param name="acctLineNum">Account line number, start from 1.</param>
            <param name="projectLineNum">project line number, start from 1.</param>
            <returns>Project allocation amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetAccountNumber(System.Int32)">
            <summary>
            Gets the account number for given line.
            </summary>
            <param name="lineNum">Account line number, start from 1.</param>
            <returns>Account number.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetAccountDescription(System.Int32)">
            <summary>
            Gets the account description for given line
            </summary>
            <param name="lineNum">Account line description, start from 1.</param>
            <returns>Account description.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetDebitAmount(System.Int32)">
            <summary>
            Gets the debit amount for given line.
            </summary>
            <param name="lineNum">Account line number, start from 1.</param>
            <returns>Debit amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetForeignAmount(System.Int32)">
            <summary>
            Gets the foreign amount for given line.
            </summary>
            <param name="lineNum">Account line number, start from 1.</param>
            <returns>Foreign amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetCreditAmount(System.Int32)">
            <summary>
            Gets the Credit amount for given line.
            </summary>
            <param name="lineNum">Account line number, start from 1.</param>
            <returns>Credit amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetAdditionalInfoComment">
            <summary>
            Gets the Additional Info Comment for given line.
            </summary>
            <returns>AdditionalInfo comment field.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetAdditionalInfoCommentDate">
            <summary>
            Gets the Additional Info comment date for given line.
            </summary>
            <returns>AdditionalInfo comment date field.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.GetAccountLine(System.Int32)">
            <summary>
            Gets the account line at given line number.
            </summary>
            <param name="lineNum">Line number, start from 1.</param>
            <returns>Account line instance.</returns>
        </member>
        <member name="M:SimplySDK.Support.JournalEntryInfo.AccountLineNumNotInRange(System.Int32)">
            <summary>
            Check if account line number is not in range.
            </summary>
            <param name="lineNum">Line number to check.</param>
            <returns>True if not in range.</returns>
        </member>
        <member name="T:SimplySDK.Support.MiscStuff">
            <summary>
            Summary description for MiscS tuff.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.MiscStuff.LineNotInRange(Sage.SBD.ACS.Framework.Common.Collections.IBasicList,System.Int32)">
            <summary>
            Check if given line number is in range of given collection.
            </summary>
            <param name="col">Collection to check.</param>
            <param name="lineNum">Line number to check.</param>
            <returns>True if not in range.</returns>
        </member>
        <member name="M:SimplySDK.Support.MiscStuff.VerifyIntegerValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            Check whether the integer input from SDK is valid for a field in Simply.
            </summary>
            <param name="value">The input double amount.</param>
            <param name="minValue">The minimum allowed value in Simply for the integer.</param>
            <param name="maxValue">The maximum allowed value in Simply for the integer.</param>
        </member>
        <member name="M:SimplySDK.Support.MiscStuff.VerifyDoubleValue(System.Double,System.Int32,System.Int32)">
            <summary>
            Check whether the double input from SDK is valid for a field in Simply.
            </summary>
            <param name="value">The input double amount.</param>
            <param name="maxInteger">The maximum allowed length in Simply for the integer part of double.</param>
            <param name="maxDecimals">The maximum allowed length in Simply for the decimal part of double.</param>
        </member>
        <member name="M:SimplySDK.Support.MiscStuff.VerifyStringLength(System.String,System.Int32)">
            <summary>
            Check whether the string input from SDK is valid for a field in Simply.
            This is used for fields of an object that are not directly inherited from an an Entity object.
            The maximum length should be consistent with the field length in the Simply UI.
            </summary>
            <param name="value">The input string.</param>
            <param name="maxLength">The maximum allowed length for the string.</param>
        </member>
        <member name="T:SimplySDK.Support.NewExchangeRate">
            <summary>
            Realize the interface for testing purpose.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.NewExchangeRate.Result">
            <summary>
            Gets or sets the result value.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.NewExchangeRate.Rate">
            <summary>
            Gets or sets the rate.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.NewExchangeRate.Save">
            <summary>
            Gets or sets if save the rate.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.NewExchangeRate.SetReturnTrue(System.Boolean,System.Double)">
            <summary>
            If want to return true, need to set these two things.
            </summary>
            <param name="save">.</param>
            <param name="rate">.</param>
        </member>
        <member name="M:SimplySDK.Support.NewExchangeRate.GetNewExchRate(Simply.Domain.CurrencyUtils.NewExchRateModel)">
            <summary>
            Using the model to get new exchange rate.
            [Replace]bGetNewExchRate
            </summary>
            <param name="model">Model part of new exchange rate dialog.</param>
            <returns>True if new exchange rate get.</returns>
        </member>
        <member name="T:SimplySDK.Support.ProjAllocJournal">
            <summary>
            AllocatableJournal mimics a journal that can be allocated to projects.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ProjAllocJournal.AllocJournal">
            <summary>
            Gets the journal model that can allocate.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.ProjAllocJournal.IsLineAllocatable(System.Int32)">
            <summary>
            Check if the given line is allocatable.
            </summary>
            <param name="lineNum">Line number.</param>
            <returns>True if can allocate.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjAllocJournal.AllocateLines(System.Int32)">
            <summary>
            Gets the ProjectAllocation to add project allocation data to journal.
            </summary>
            <param name="lineNum">Which line to allocate.</param>
            <returns>If the line is allocatable, return instance of ProjectAllocation, otherwise
            return null object.</returns>
        </member>
        <member name="T:SimplySDK.Support.ProjectAllocation">
            <summary>
            Handles entry of project information for journals.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.#ctor(SimplySDK.Support.Journal,Simply.Domain.Journals.ProjectAlloc.ProjectAllocModel)">
            <summary>
            Initializes a new instance of the ProjectAllocation class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the ProjectAllocation.</param>
            <param name="model">Project allocation model.</param>
        </member>
        <member name="P:SimplySDK.Support.ProjectAllocation.JournalSupportModel">
            <summary>
            Gets the journal support model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ProjectAllocation.AllocateToAll">
            <summary>
            Gets or sets to apply allocation to entire journal.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ProjectAllocation.IsOKEnabled">
            <summary>
            Gets if the ok button is enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ProjectAllocation.AvailableAmount">
            <summary>
            Gets the available amount to allocate.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.ProjectAllocation.RemainingPercent">
            <summary>
            Gets the remaining percentage to allocate.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.AllocateLine(System.Int32,SimplySDK.Support.Journal,Simply.Domain.Journals.ProjectAlloc.ProjectAllocModel)">
            <summary>
            Gets the ProjectAllocation to add project allocation data to journal.
            </summary>
            <param name="lineNum">Line number.</param>
            <param name="journal">The journal object that is creating the instance of the ProjectAllocation.</param>
            <param name="model">Project allocation model.</param>
            <returns>An instance of a ProjectAllocation object, if the line is allocatable.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.IsAllocLineValid(System.Int32)">
            <summary>
            Check if the given line is a valid allocate line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>True if the allocation is valid for the line.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.SetProject(System.String,System.Int32)">
            <summary>
            Sets the project at given line.
            </summary>
            <param name="projectName">Project name.</param>
            <param name="lineNum">Line number, start with 1.</param>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.GetProjectName(System.Int32)">
            <summary>
            Gets the project name at given line number.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>Project name.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.SetAmount(System.Double,System.Int32)">
            <summary>
            Sets the amount at given line number.
            </summary>
            <param name="amount">Amount to set.</param>
            <param name="lineNum">Line number, start with 1.</param>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.GetAmount(System.Int32)">
            <summary>
            Gets the amount at given line number.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.SetPercent(System.Double,System.Int32)">
            <summary>
            Sets the percent at given line number.
            </summary>
            <param name="percent">Percent to set.</param>
            <param name="lineNum">Line number, start with 1.</param>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.GetPercent(System.Int32)">
            <summary>
            Gets the percent at given line number.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The percent.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.RemoveProjectAllocLine(System.Int32)">
            <summary>
            Removes the line at given line number.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>True if line has been removed successfully</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.Save">
            <summary>
            Save the project allocation data.
            </summary>
            <returns>True if project allocation data is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.IsLineNotInRange(System.Int32)">
            <summary>
            Check if given line number is in range.
            </summary>
            <param name="lineNum">Line number to check.</param>
            <returns>True if line is not in range.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.GetLineAtLineNum(System.Int32)">
            <summary>
            Gets the line at given line number.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>Line object.</returns>
        </member>
        <member name="M:SimplySDK.Support.ProjectAllocation.GetLineAtLineNumForSet(System.Int32)">
            <summary>
            Gets the line at given line number.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>Line object.</returns>
        </member>
        <member name="T:SimplySDK.Support.RcRecall">
            <summary>
            Handles recalling of recurring entries.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.#ctor(SimplySDK.Support.Journal,Simply.Domain.Journals.RcEntries.RcEntryModelBase)">
            <summary>
            Initializes a new instance of the RcRecall class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the RcRecall.</param>
            <param name="model">Recurring entry model.</param>
        </member>
        <member name="P:SimplySDK.Support.RcRecall.JournalSupportModel">
            <summary>
            Gets the journal support model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RcRecall.NumberOfRecurringEntries">
            <summary>
            Gets the number of recurring entries.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.GetRecurringEntryName(System.Int32)">
            <summary>
            Gets the name of the recurring entry.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>Name of the recurring entry.</returns>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.GetRecurringEntryFrequency(System.Int32)">
            <summary>
            Gets the frequency of the recurring entry.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The frequency of the recurring entry.</returns>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.GetRecurringEntryLastProcessedDate(System.Int32)">
            <summary>
            Gets the last processed date of the recurring entry.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The last processed date of the recurring entry.</returns>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.GetRecurringEntryNextDueDate(System.Int32)">
            <summary>
            Gets the next due date of the recurring entry.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The next due date of the recurring entry.</returns>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.RecallJournalEntry(System.String)">
            <summary>
            Recall an entry with recurring entry name.
            </summary>
            <param name="rcEntryName">Name of the recurring entry.</param>
            <returns>True if recalled successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.Save">
            <summary>
            Overwrites save() method from base class, do not use.
            </summary>
            <returns>SimplyNoAccessException is thrown.</returns>
        </member>
        <member name="M:SimplySDK.Support.RcRecall.IsLineNotInRange(System.Int32)">
            <summary>
            Check if given line number is in range.
            </summary>
            <param name="lineNum">Line number to check out.</param>
        </member>
        <member name="T:SimplySDK.Support.RcStore">
            <summary>
            Handles storing of recurring entries.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.RcStore.#ctor(SimplySDK.Support.Journal,Simply.Domain.Journals.RcEntries.RcEntryModelBase)">
            <summary>
            Initializes a new instance of the RcStore class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the RcStore.</param>
            <param name="model">Recurring entry model.</param>
        </member>
        <member name="P:SimplySDK.Support.RcStore.JournalSupportModel">
            <summary>
            Gets the journal support model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RcStore.StoreName">
            <summary>
            Gets or sets the recurring entry name to store.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.RcStore.Frequency">
            <summary>
            Gets or sets the frequency.
            </summary>
        </member>
        <member name="T:SimplySDK.Support.TaxSummaryInfo">
            <summary>
            Handles entry of tax summary information for journals.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.#ctor(SimplySDK.Support.InvoiceJournal)">
            <summary>
            Initializes a new instance of the TaxSummaryInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the TaxSummaryInfo.</param>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.#ctor(SimplySDK.Support.InvoiceJournal,Simply.Domain.Journals.APARJournals.InvoiceRow)">
            <summary>
            Constructor that creates a model from purchases row or freight line.
            </summary>
            <param name="journal">The journal object that is creating the instance of the TaxSummaryInfo.</param>
            <param name="invRow">The invoice row.</param>
        </member>
        <member name="P:SimplySDK.Support.TaxSummaryInfo.JournalSupportModel">
            <summary>
            Gets the journal support model
            </summary>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetCount">
            <summary>
            Gets the number of lines from the tax summary.
            </summary>
            <returns>The number of tax lines.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetTaxAmountByRow(System.Int32)">
            <summary>
            Gets the tax amount of specific line from tax summary.
            </summary>
            <param name="row">The row number, starting at 1.</param>
            <returns>The line tax amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetTaxNameByRow(System.Int32)">
            <summary>
            Gets the tax name of specific line from tax summary.
            </summary>
            <param name="row">The row number, starting at 1.</param>
            <returns>The tax name.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.SetTaxAmountByRow(System.Int32,System.Double)">
            <summary>
            Sets the tax amount of specific line from tax summary.
            </summary>
            <param name="row">The row to be set, starting at 1.</param>
            <param name="amount">The amount to be set.</param>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetTaxAmountByName(System.String)">
            <summary>
            Gets the tax amount of a tax by name.
            </summary>
            <param name="taxName">The tax name.</param>
            <returns>The tax amount of the named tax.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.SetTaxAmountByName(System.String,System.Double)">
            <summary>
            Sets the tax amount by tax name.
            </summary>
            <param name="taxName">The tax name.</param>
            <param name="amount">The amount to be set.</param>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.Save">
            <summary>
            Saves the tax summary information.
            </summary>
            <returns>True if tax summary information is saved successfully.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetTotalTaxAmount">
            <summary>
            Gets the total tax of the tax summary.
            </summary>
            <returns>The total tax amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetSubtotalAmount">
            <summary>
            Gets the subtotal amount.
            </summary>
            <returns>The subtotal amount.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetRowByIndex(System.Int32)">
            <summary>
            Gets the row by index.
            </summary>
            <param name="row">Index.</param>
            <returns>Row.</returns>
        </member>
        <member name="M:SimplySDK.Support.TaxSummaryInfo.GetRowByName(System.String)">
            <summary>
            Gets the row by tax name.
            </summary>
            <param name="taxName">Tax name.</param>
            <returns>Row of the tax name.</returns>
        </member>
        <member name="T:SimplySDK.Support.TimeSlipActivityInfo">
            <summary>
            Handles entry of time slip activity information from the sales journal.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.#ctor(SimplySDK.Support.InvoiceJournal)">
            <summary>
            Initializes a new instance of the TimeSlipActivityInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the TimeSlipActivityInfo.</param>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.JournalSupportModel">
            <summary>
            Gets the journal support model.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.NumberOfTimeSlipActivities">
            <summary>
            Gets the number of time slip activity lines.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.StartDate">
            <summary>
            Gets or sets the start date for the list of time slip activites. 
            Setting the date clears all changes to time slip activities lines.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.EndDate">
            <summary>
            Gets or sets the end date for the list of time slip activites.
            Setting the date clears all changes to time slip activities lines.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.ShowNonBillable">
            <summary>
            Gets or sets to list non-billiable activities. 
            Setting clears all changes to time slip activities lines.
            </summary>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.SortByMethod">
            <summary>
            Gets or sets the sort method. 
            Sort method can be: 1 (Date and Activity), 2 (Employee and Activity), 3 (Activity).
            </summary>
        </member>
        <member name="P:SimplySDK.Support.TimeSlipActivityInfo.ConsolidateBySortByMethod">
            <summary>
            Gets or sets to consolidate time slip activities by sort method when adding then to an invoice.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipDate(System.Int32)">
            <summary>
            Gets the date of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The time slip date of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipItemCode(System.Int32)">
            <summary>
            Gets the item part code of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The item part code of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipQuantity(System.Int32)">
            <summary>
            Gets the quantity of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The quantity of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.SetTimeSlipQuantity(System.Int32,System.Double)">
            <summary>
            Sets the quantity of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <param name="quantity">The quantity to be set.</param>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipUnit(System.Int32)">
            <summary>
            Gets the unit of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The unit of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipDescription(System.Int32)">
            <summary>
            Gets the description of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The description of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipPrice(System.Int32)">
            <summary>
            Gets the price of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The price of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipAmount(System.Int32)">
            <summary>
            Gets the amount of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The amount of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.SetTimeSlipAmount(System.Int32,System.Double)">
            <summary>
            Sets the amount of time slip activity.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <param name="amount">The amount to be set.</param>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipSelectedStatus(System.Int32)">
            <summary>
            Gets if the time slip activity line is selected to be added to invoice.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The selected status of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.SetTimeSlipSelectedStatus(System.Int32,System.Boolean)">
            <summary>
            Sets the selected status of the time slip activity line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <param name="status">The selected status to be set.</param>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipBillingStatus(System.Int32)">
            <summary>
            Gets the billing status of the time slip activity line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The billing status of the time slip activity line. 
            The billing status can be: 0 (Billable), 1 (Non Billable), 2 (No Charge), 3 (Invoiced).
            </returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.SetTimeSlipBillingStatus(System.Int32,System.Int32)">
            <summary>
            Sets the billing status of the time slip activity line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <param name="status">The billing status can be set to: 0 (Billable), 1 (Non Billable), 2 (No Charge).</param>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipName(System.Int32)">
            <summary>
            Gets the name of the time slip activity line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The name of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.GetTimeSlipNumberString(System.Int32)">
            <summary>
            Gets the time slip number of the time slip activity line.
            </summary>
            <param name="lineNum">Line number, start with 1.</param>
            <returns>The time slip number of the time slip activity line.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.AddSelectedTimeSlipActivitesToInvoice">
            <summary>
            Adds selected time slip activities to the invoice.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.UpdateSelectedTimeSlipActivitesToInvoice">
            <summary>
            Updates selected time slip activities for the invoice.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.Save">
            <summary>
            Overwrites save() method from base class, do not use.
            </summary>
            <returns>SimplyNoAccessException is thrown.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.CreateTimeSlipActivitySelectionModel">
            <summary>
            Creates an TimeSlipActivitySelectionModel object.
            </summary>
            <returns>an TimeSlipActivitySelectionModel object.</returns>
        </member>
        <member name="M:SimplySDK.Support.TimeSlipActivityInfo.IsLineNotInRange(System.Int32)">
            <summary>
            Check if given line number is in range.
            </summary>
            <param name="lineNum">Line number to check.</param>
        </member>
        <member name="T:SimplySDK.Support.ARTimeSlipActivityInfo">
            <summary>
            Handles entry of time slip activity information from the sales journal.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.ARTimeSlipActivityInfo.#ctor(SimplySDK.ReceivableModule.SalesJournal)">
            <summary>
            Initializes a new instance of the TimeSlipActivityInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the TimeSlipActivityInfo.</param>
        </member>
        <member name="M:SimplySDK.Support.ARTimeSlipActivityInfo.CreateTimeSlipActivitySelectionModel">
            <summary>
            Creates an TimeSlipActivitySelectionModel object.
            </summary>
            <returns>an TimeSlipActivitySelectionModel object.</returns>
        </member>
        <member name="T:SimplySDK.Support.APTimeSlipActivityInfo">
            <summary>
            Handles entry of time slip activity information from the sales journal.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.APTimeSlipActivityInfo.#ctor(SimplySDK.PayableModule.PurchasesJournal)">
            <summary>
            Initializes a new instance of the TimeSlipActivityInfo class.
            </summary>
            <param name="journal">The journal object that is creating the instance of the TimeSlipActivityInfo.</param>
        </member>
        <member name="M:SimplySDK.Support.APTimeSlipActivityInfo.CreateTimeSlipActivitySelectionModel">
            <summary>
            Creates an TimeSlipActivitySelectionModel object.
            </summary>
            <returns>an TimeSlipActivitySelectionModel object.</returns>
        </member>
        <member name="T:SimplySDK.Support.VersionSupport">
            <summary>
            Support class to create different versions
            </summary>
        </member>
        <member name="M:SimplySDK.Support.VersionSupport.FakeAccountantcopy">
            <summary>
            Fake accountant copy. 
            </summary>
        </member>
        <member name="M:SimplySDK.Support.VersionSupport.FakeAccountEdition">
            <summary>
            Make unit testings system to testing account edition
            </summary>
        </member>
        <member name="M:SimplySDK.Support.VersionSupport.CreateFakeAccountantCopy">
            <summary>
            Create the fake accountantcopy record
            </summary>
            <returns>always true</returns>
        </member>
        <member name="T:SimplySDK.Support.CountryFactory">
            <summary>
            Facotry class to create country different objects
            </summary>
        </member>
        <member name="P:SimplySDK.Support.CountryFactory.Instance">
            <summary>
            Get singleton instance
            </summary>
            <returns>Singleton Instance</returns>
        </member>
        <member name="P:SimplySDK.Support.CountryFactory.HasGifiCode">
            <summary>
            Checks whether account ledger has GIFI code.
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CountryFactory.CreateEmployeeLedger">
            <summary>
            Creates the Employee Ledger
            </summary>
            <returns></returns>
        </member>
        <member name="M:SimplySDK.Support.CountryFactory.PurgeSingletonOnCompanyClosed">
            <summary>
            Purges singleton instance
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CountryFactory.CreateCountryFactory">
            <summary>
            Factory method to create correct CountryFactory object
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Support.CountryFactory.CountryFactoryCdn">
            <summary>
            Private class that is responsible to create canadian specific object
            </summary>
        </member>
        <member name="M:SimplySDK.Support.CountryFactory.CountryFactoryCdn.CreateEmployeeLedger">
            <summary>
            Creates the Canadian Employee Ledger
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.SDKException">
            <summary>
            This exception indicates that an error occurred in the SDK.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SDKException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:SimplySDK.SimplyNoAccessException">
            <summary>
            This exception indicates that the field, function or the object itself is not accessible. 
            </summary>
        </member>
        <member name="M:SimplySDK.SimplyNoAccessException.#ctor">
            <summary>
            Initializes a new instance of the SimplyNoAccessException class.
            </summary>
        </member>
        <member name="M:SimplySDK.SimplyNoAccessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SimplyNoAccessException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:SimplySDK.InvalidEntryException">
            <summary>
            This exception indicates that the value is not valid for the field.
            </summary>
        </member>
        <member name="M:SimplySDK.InvalidEntryException.#ctor">
            <summary>
            Initializes a new instance of the InvalidEntryException class.
            </summary>
        </member>
        <member name="M:SimplySDK.InvalidEntryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidEntryException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:SimplySDK.SDKAlertException">
            <summary>
            This exception indicates that an error message or an alert message has occurred.
            </summary>
        </member>
        <member name="M:SimplySDK.SDKAlertException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SDKAlertException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="P:SimplySDK.SDKAlertException.MessageId">
            <summary>
            Gets the message Id.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKAlertException.Type">
            <summary>
            Gets the message type.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKAlertException.MessageForSDKDevelopment">
            <summary>
            Gets the message to SDK development - explains how to implement alerts.
            </summary>
        </member>
        <member name="P:SimplySDK.SDKAlertException.SDKMethod">
            <summary>
            Gets the SDK Alert method for which this exception came from.
            </summary>
        </member>
        <member name="T:SimplySDK.SimplyErrorMessageException">
            <summary>
            This exception indicates that an error has occurred.
            </summary>
            <remarks>
            Whenever this exception is thrown, this means an error has occurred.  In order to 
            override the default behaviour of this exception thrown, your application must 
            subclass from the SDKAlert class and assign an instace of that object to 
            SDKInstanceManager.SetAlertImplementation. The MessageForSDKDevelopment property 
            provides which method to override for a particular error message.
            </remarks> 
        </member>
        <member name="M:SimplySDK.SimplyErrorMessageException.#ctor(System.String,System.String,Simply.Domain.Utility.SimplyMessageId)">
            <summary>
            Initializes a new instance of the SimplyErrorMessageException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="method">The method from which the error occurred.</param>
            <param name="messageId">The message Id.</param>
        </member>
        <member name="P:SimplySDK.SimplyErrorMessageException.Type">
            <summary>
            Gets the message type.
            </summary>
        </member>
        <member name="P:SimplySDK.SimplyErrorMessageException.MessageId">
            <summary>
            Gets the message Id.
            </summary>
        </member>
        <member name="T:SimplySDK.AlertNotImplementedException">
            <summary>
            This exception indicates that an alert message has occurred.
            </summary>
            <remarks>
            Whenever this exception is thrown, this means user input is required to 
            continue processing underlying business logic in the SDK.  In order to 
            get user input, your application must subclass from the SDKAlert class
            and assign an instace of that object to SDKInstanceManager.SetAlertImplementation.
            The MessageForSDKDevelopment property provides which method to override
            for a particular alert message.
            </remarks>
        </member>
        <member name="M:SimplySDK.AlertNotImplementedException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AlertNotImplementedException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="method">The method from which the error message occurred.</param>
        </member>
        <member name="P:SimplySDK.AlertNotImplementedException.Type">
            <summary>
            Gets the message type.
            </summary>
        </member>
        <member name="P:SimplySDK.AlertNotImplementedException.MessageId">
            <summary>
            Gets the message Id - MessageId is always informational.
            </summary>
        </member>
        <member name="T:SimplySDK.SageIdLoginRequiredException">
            <summary>
            This exception indicates that Sage Id authentication is required before the requested action can be completed.
            </summary>
            <remarks>
            Whenever this exception is thrown, your application should explicitly invoke 
            <see cref="M:SimplySDK.SDKInstanceManager.SageIDLogin(System.String@)"/> to initiate the Sage Id 
            sign-in process. After the sign-in is successful, retry the operation that 
            originally triggered this exception. If your application has set the 
            <see cref="P:SimplySDK.SDKInstanceManager.UseSage50SageId"/> property to true, then Sage Id 
            sign-in can also be performed from within the Sage 50 application.
            </remarks>
        </member>
        <member name="M:SimplySDK.SageIdLoginRequiredException.#ctor">
            <summary>
            Create a new <see cref="T:SimplySDK.SageIdLoginRequiredException"/> instance.
            </summary>
        </member>
        <member name="M:SimplySDK.SageIdLoginRequiredException.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:SimplySDK.SageIdLoginRequiredException"/> instance.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="T:SimplySDK.Reports.Support.FinancialCurrencyExchRateSDK">
            <summary>
            Handles entry of exchange rates.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FinancialCurrencyExchRateSDK.#ctor(Simply.Domain.Reports.Support.CurrencyExchangeRatesModel)">
            <summary>
            Initializes a new instance of the FinancialCurrencyExchRateSDK class.
            </summary>
            <param name="exchRatesModel">instance of CurrencyExchangeRatesModel class.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.FinancialCurrencyExchRateSDK.SetExchangeRate(System.String,System.Double)">
            <summary>
            Sets the exchange rate for a given currency (e.x. "United States Dollar").
            </summary>
            <param name="desc">Currency description.</param>
            <param name="newRate">Exchange rate to be set.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.FinancialCurrencyExchRateSDK.GetExchangeRate(System.String)">
            <summary>
            Gets the exchange rate for a currency by providing its description (e.x. "United States Dollar"). 
            Since the exchange rate cannot be zero, it indicates an error when the function returns zero. 
            </summary>
            <param name="desc">Currency description.</param>
            <returns>Exchange rate found otherwise returns zero.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportFooterSDK">
            <summary>
            ReportFooterSDK is for setting for footer information for a report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportFooterSDK.#ctor(Simply.Framework.Domain.Reports.CustomizeOptions.ReportFooterModel)">
            <summary>
            Initializes a new instance of the ReportFooterSDK class.
            </summary>
            <param name="model">ReportColumns model object to initialize the member to.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportFooterSDK.DisplayPageFooter">
            <summary>
            Gets or sets the display page footer.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportFooterSDK.DisplayReportFooter">
            <summary>
            Gets or sets the display report footer.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportFooterSDK.PageFooter">
            <summary>
            Gets or sets the page footer.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportFooterSDK.ReportFooter">
            <summary>
            Gets or sets the report footer.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportFooterSDK.ClickClearButtonPageFooter">
            <summary>
            Clears the page footer.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportFooterSDK.ClickClearButtonReportFooter">
            <summary>
            Clears the report footer.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Support.SelectLocationsSDK">
            <summary>
            SelectLocationsSDK is generic for all reports of Simply Accounting to simulate the Select Locations dialog. 
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.#ctor(Simply.Domain.Reports.Support.LocationCategory)">
            <summary>
            Initializes a new instance of the SelectLocationsSDK class.
            </summary>
            <param name="selectLocations">List of selected locations.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.SelectLocationsSDK.LocationOptions">
            <summary>
            The Location options
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.AreAllLocationsSelected">
            <summary>
            Checks if all Locations are selected.
            </summary>
            <returns>True if all Locations are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.AnyLocationsAreSelected">
            <summary>
            Checks if all Locations are not selected.
            </summary>
            <returns>True if all Locations are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.ClickSelectAllLocations">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.SelectedLocations">
            <summary>
            Gets the list of selected Locations.
            </summary>
            <returns>The list of selected Locations.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.SelectLocations(System.Collections.ArrayList)">
            <summary>
            Selects Locations from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.SelectLocationsSDK.LocationInactiveString">
            <summary>
            Gets the string used in Include Inactive for Locations.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.IsLocationSelected(System.Int32)">
            <summary>
            Checks if a deparment is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.SelectLocationByNdx(System.Int32)">
            <summary>
            Selects one Location from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.SelectLocationByName(System.String)">
            <summary>
            Selects one Location from the list.
            </summary>
            <param name="LocationName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Support.SelectLocationsSDK.IncludeInactiveLocations">
            <summary>
            Gets the status of Include Inactive Locations.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectLocationsSDK.IsOKEnabled">
            <summary>
            Gets the status of if the OK button is enabled.
            </summary>
            <returns>True if OK button is enabled.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.SelectDepartmentsSDK">
            <summary>
            SelectDepartmentsSDK is generic for all reports of Simply Accounting to simulate the Select Departments dialog.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.#ctor(Simply.Domain.Reports.Support.DepartmentsCategory)">
            <summary>
            Initializes a new instance of the SelectDepartmentsSDK class.
            </summary>
            <param name="selectDepts">List of departements.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.SelectDepartmentsSDK.DepartmentOptions">
            <summary>
            The department options
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.AreAllDepartmentsSelected">
            <summary>
            Checks if all Departments are selected.
            </summary>
            <returns>True if all departments are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.AnyDepartmentsAreSelected">
            <summary>
            Checks if all Departments are not selected.
            </summary>
            <returns>True if all Departments are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.ClickSelectAllDepartments">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.SelectedDepartments">
            <summary>
            Gets the list of selected Departments.
            </summary>
            <returns>The list of selected departments.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.SelectDepartments(System.Collections.ArrayList)">
            <summary>
            Selects Departments from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.SelectDepartmentsSDK.DepartmentInactiveString">
            <summary>
            Gets the string used in Include Inactive for Departments.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.IsDepartmentSelected(System.Int32)">
            <summary>
            Checks if a deparment is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.SelectDepartmentByNdx(System.Int32)">
            <summary>
            Selects one Department from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.SelectDepartmentByName(System.String)">
            <summary>
            Selects one Department from the list.
            </summary>
            <param name="departmentName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Support.SelectDepartmentsSDK.IncludeInactiveDepartments">
            <summary>
            Gets the status of Include Inactive Departments.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.IsIncludeNoDeptsChecked">
            <summary>
            Gets the status of IncludeNoDepts.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.IsIncludeOtherDeptsChecked">
            <summary>
            Gets the status of IncludeOtherDepts.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.CheckIncludeNoDepts">
            <summary>
            Checks / Unchecks the IncludeNoDepts checkbox.
            </summary>
            <returns>True if checkbox is checked.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.CheckIncludeOtherDepts">
            <summary>
            Checks / Unchecks the IncludeOtherDepts checkbox.
            </summary>
            <returns>True if checkbox is checked.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.IsIncludeOtherDeptsEnabled">
            <summary>
            Gets if the Include Other Departments checkbox is enabled.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectDepartmentsSDK.IsOKEnabled">
            <summary>
            Checks if the OK button is enabled.
            </summary>
            <returns>True if OK button is enabled</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.Helpers">
            <summary>
            This class is used as a holder for utility methods.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.Helpers.FindDisplay(System.Int32,Sage.Simply.Common.ListItemCollection)">
            <summary>
            Given an item index and a collection of items (the contents 
            in a drop down list) finds the string that is displayed when that item 
            is selected.
            </summary>
            <returns>The string that is displayed when an item is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.Helpers.FindNdx(Sage.Simply.Common.ListItemCollection,System.String)">
            <summary>
            Given a collection of items (the contents in a drop down list) and
            a string finds the index of the item that represents the displayed string.
            </summary>
            <returns>The index of the item holding the displayed string.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.Helpers.GetDates(System.Nullable{System.DateTime}[])">
            <summary>
            Gets a list of dates in string format.
            </summary>
            <param name="dates">List of DateTime objects.</param>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.FilterReportSDK">
            <summary>
            FilterReportSDK is a generic class as filter report options work the same for all report of Simply Accounting.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.#ctor(Simply.Framework.Domain.Reports.ReportFilterModel)">
            <summary>
            Initializes a new instance of the FilterReportSDK class.
            </summary>
            <param name="model">ReportSortModel to initialize with.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.UseCustomFilterCriteria">
            <summary>
            Gets or sets if the report should use user defined filter criteria.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterField1">
            <summary>
            Gets or sets the report's filter Field 1 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterField2">
            <summary>
            Gets or sets the report's filter Field 2 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterField3">
            <summary>
            Gets or sets the report's filter Field 3 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterField4">
            <summary>
            Gets or sets the report's filter Field 4 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterMatchingCriteria1">
            <summary>
            Gets or sets the report's filter Matching Criteria 1 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterMatchingCriteria2">
            <summary>
            Gets or sets the report's filter Matching Criteria 2 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterMatchingCriteria3">
            <summary>
            Gets or sets the report's filter Matching Criteria 3 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterMatchingCriteria4">
            <summary>
            Gets or sets the report's filter Matching Criteria 4 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterValue1">
            <summary>
            Gets or sets the report's filter Value 1 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterValue2">
            <summary>
            Gets or sets the report's filter Value 2 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterValue3">
            <summary>
            Gets or sets the report's filter Value 3 box.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FilterReportSDK.FilterValue4">
            <summary>
            Gets or sets the report's filter Value 4 box.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.CheckAndOption1">
            <summary>
            Sets And radio button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.CheckOrOption1">
            <summary>
            Sets Or radio button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.IsAndOption1Checked">
            <summary>
            Gets And radio button's status.  
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.IsOrOption1Checked">
            <summary>
            Gets Or radio button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.CheckAndOption2">
            <summary>
            Sets And radio button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.CheckOrOption2">
            <summary>
            Sets Or radio button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.IsAndOption2Checked">
            <summary>
            Gets And radio button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.IsOrOption2Checked">
            <summary>
            Gets Or radio button's status.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.CheckAndOption3">
            <summary>
            Sets And radio button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.CheckOrOption3">
            <summary>
            Sets Or radio button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.IsAndOption3Checked">
            <summary>
            Gets And radio button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FilterReportSDK.IsOrOption3Checked">
            <summary>
            Gets Or radio button's status.      
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Support.ICategorySDK">
            <summary>
            This is the interface that encapsulates the behavior needed to test
            category's methods such as asking if all the items are selected, click
            the Select All button, etc.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.AreAllSelected(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Checks if all items in category are selected.
            </summary>
            <returns>True if all items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.AreNoneSelected(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Checks if all items in category are not selected.
            </summary>
            <returns>True if all items are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.Selected(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Gets the list of selected indexes in category.
            </summary>
            <param name="category">Category of the list.</param>
            <returns>The list of selected indexes for category.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.Select(Simply.Domain.Reports.Support.SelectCategory,System.Collections.ArrayList)">
            <summary>
            Selects from list of indexes.
            </summary>
            <param name="category">Category of the list.</param>
            <param name="list">List of indexes to select.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.ItemInactive(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Gets the string used in Include Inactive for the specified category.
            </summary>
            <param name="category">Category of Include inactive.</param>
            <returns>The string used in Include inactive.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.IsSelected(Simply.Domain.Reports.Support.SelectCategory,System.Int32)">
            <summary>
            Checks if an item is currently selected from a list in a category.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="id">id of the item to be checked.</param>
            <returns>True if id is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.IsSelectedByName(Simply.Domain.Reports.Support.SelectCategory,System.String)">
            <summary>
            Checks if an item is currently selected from a list in a 0 category, by Name.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="name">Name of record to to be checked.</param>
            <returns>True if found the name is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.SelectByNdx(Simply.Domain.Reports.Support.SelectCategory,System.Int32)">
            <summary>
            Selects one item from a list in a category.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="id">id of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.SelectByName(Simply.Domain.Reports.Support.SelectCategory,System.String)">
            <summary>
            Selects one item from a list in a category.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="name">Name of the item to be selected.</param>
            <returns>index of the item.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ICategorySDK.ClickSelectAll(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Simulates clicking Select All button and selects all
            items in category. In the case where all items are 
            already selected then unselects all.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportCellSDK">
            <summary>
            ReportCellSDK is for retrieving data related to a report cell.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportCellSDK.GetTextDisplayed">
            <summary>
            Gets the Text displayed for this cell.
            </summary>
            <returns>Text displayed.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportCellExtraRowSDK">
            <summary>
            Wrap an additional row
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportCellExtraRowSDK.#ctor(Sage.Simply.DataViewerFramework.Domain.DataViewers.AdditionalRowInfo)">
            <summary>
            Initializes a new instance of the ReportCellExtraRowSDK class.
            </summary>
            <param name="cell">Cell of data.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportCellExtraRowSDK.GetTextDisplayed">
            <summary>
            Gets the Text displayed for this cell.
            </summary>
            <returns>Text displayed.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportCellColumnSDK">
            <summary>
            Wrap A column cell.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportCellColumnSDK.#ctor(Sage.Simply.DataViewerFramework.Domain.CellComponent)">
            <summary>
            Initializes a new instance of the ReportCellColumnSDK class.
            </summary>
            <param name="cell">Cell of data.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportCellColumnSDK.GetTextDisplayed">
            <summary>
            Gets the Text displayed for this cell.
            </summary>
            <returns>Text displayed.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportGroupsSDK">
            <summary>
            ReportGroupsSDK contains logic for adding groups to
            Report Groups list.
            
            Note: This is a temporal work around to be able to use the
            Set Up Report Groups - adding group feature.
            Once this is implemented in DotNet then we would implement a proper classes and tests
            
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportGroupsSDK.#ctor">
            <summary>
            Initializes a new instance of the ReportGroupsSDK class.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportGroupsSDK.CreateGroup(System.String)">
            <summary>
            Creates a group in the list of report groups.
            </summary>
            <param name="groupName">Name of the new group.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportGroupsSDK.Count">
            <summary>
            Gets the number of groups.
            </summary>
            <returns>Number of groups.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportGroupsSDK.Group">
            <summary>
            Gets the ReportGroup private member
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportGroupsSDK.CreateGroupNamed(System.Object)">
            <summary>
            Creates a group in the list of report groups.
            </summary>
            <param name="groupName">Name of the new group.</param>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportSDK">
            <summary>
            This class simulate what's going on in ReportController in Simply UI. 
            This class simulates the flow of generating a report. 
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportSDK.DoReport">
            <summary>
            Call this method to begin to do the report. When opening a report in UI, we get 
            a report options dialog first. We can change options there. 
            Here we get a ReportOptionsSDK instance, and we can change options through it.
            </summary>
            <returns>ReportOptionsSDK instance.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportSDK.ClickOKWithOptions">
            <summary>
            Simulate when the user click OK button in a report options dialog.
            Report options model will validating the opitons. If everything is okay,
            a report is generated. If not, no report is generated. 
            </summary>
            <returns>If options is okay, return a valid viewer, otherwise, return null to indicate no report is generated.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportSDK.CreateReportOptionsSDK">
            <summary>
            Create an instance of ReportOptionsSDK that can be modified.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportViewerSDK">
            <summary>
            This class simulate the report window where you can see the generated report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.#ctor(Simply.Framework.Domain.Reports.ReportBuilder)">
            <summary>
            Initializes a new instance of the ReportViewerSDK class. 
            Constructor that requires a viewer instance so that we can retrieve data from there
            </summary>
            <param name="builder">Instance of viewer.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportViewerSDK.GetBodyCount">
            <summary>
            Gets the number of lines in the body of the report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetReportHeaderByIndex(System.Int32)">
            <summary>
            Gets the header text by given index.
            </summary>
            <param name="rowIndex">Index of header row to get. Begin by 1.</param>
            <returns>Text string.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetReportPageFooterByIndex(System.Int32)">
            <summary>
            Gets the page footer text by given index.
            </summary>
            <param name="rowIndex">Index of footer row to get. Begin by 1.</param>
            <returns>Cell that contains text string.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetReportFooterByIndex(System.Int32)">
            <summary>
            Gets the report footer text by given index.
            </summary>
            <param name="rowIndex">Index of footer row to get. Begin by 1.</param>
            <returns>Cell that contains text string.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetAdditionalRowsByIndex(System.Int32)">
            <summary>
            Gets the report additional rows text by given index.
            </summary>
            <param name="rowIndex">Index of additional row to get. Begin by 1.</param>
            <returns>Cell that contains text string.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetCellByColumnHeaderTitle(System.Int32,System.String)">
            <summary>
            Get cell information by column header title.
            </summary>
            <param name="rowIndex">Index of row, begin by 1.</param>
            <param name="columnHeaderTitle">Header title string if there is one. If not, should use
            GetCellStringByColumnIndex instead.</param>
            <returns>Cell information.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetCellByColumnIndex(System.Int32,System.Int32)">
            <summary>
            Get cell information by column index.
            </summary>
            <param name="rowIndex">Index of row, begin by 1.</param>
            <param name="colIndex">Index of column, begin by 1.</param>
            <returns>Cell information.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetTextFromCell(System.Int32,System.Int32)">
            <summary>
            Get text from a TextCell in a specific row and column.
            </summary>
            <param name="rowIdx">Row Index.</param>
            <param name="colIdx">Column Index.</param>
            <returns>Text from a cell.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetTimeTextFromCell(System.Int32,System.Int32)">
            <summary>
            Get time as text from a cell in a specific row and column.
            </summary>
            <param name="rowIdx">Row Index.</param>
            <param name="colIdx">Column Index.</param>
            <returns>Time Text from a cell.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetDoubleFromCell(System.Int32,System.Int32)">
            <summary>
            Gets the value of a DoubleCell in a specific row and column.
            </summary>
            <param name="rowIdx">Row Index.</param>
            <param name="colIdx">Column Index.</param>
            <returns>Value from a cell.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetColumnHeaderTitleAt(System.Int32)">
            <summary>
            Get column name by column index.
            </summary>
            <param name="index">Column index.</param>
            <returns>Column Name.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.GetViewerColumnHeaderTitleAt(System.Int32)">
            <summary>
            Get viewer column by column index.
            </summary>
            <param name="index">Column index.</param>
            <returns>Column Name.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.FindColIndexByColumnHeaderTitle(System.String)">
            <summary>
            Try to find col id by column index.
            </summary>
            <param name="title">Column header title.</param>
            <returns>Column Index.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportViewerSDK.FindColumnHeaderTitleByColNdx(System.Int32)">
            <summary>
            Try to find column name by column index.
            </summary>
            <param name="index">Column index.</param>
            <returns>Column Name.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.SelectCategorySDK">
            <summary>
            Handles selecting categories.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.AreAllSelected(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Checks if all items in category are selected.
            </summary>
            <returns>True if all items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.AreNoneSelected(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Checks if all items in category are not selected.
            </summary>
            <returns>True if all items are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.Selected(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Gets the list of selected indexes in category.
            </summary>
            <param name="category">Category of the list.</param>
            <returns>The list of selected indexes for category.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.Select(Simply.Domain.Reports.Support.SelectCategory,System.Collections.ArrayList)">
            <summary>
            Selects from list of indexes.
            </summary>
            <param name="category">Category of the list.</param>
            <param name="indexes">List of indexes to select.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.ItemInactive(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Gets the string used in Include Inactive for the specified category.
            </summary>
            <param name="category">Category of Include inactive.</param>
            <returns>The string used in Include inactive.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.IsSelected(Simply.Domain.Reports.Support.SelectCategory,System.Int32)">
            <summary>
            Checks if an item is currently selected form a list in a category.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="index">Index of the item to be checked.</param>
            <returns>True if id is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.IsSelectedByName(Simply.Domain.Reports.Support.SelectCategory,System.String)">
            <summary>
            Checks if an item is currently selected form a list in a category by Name.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="name">Name of the item to be checked.</param>
            <returns>True if the name is found to be selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.SelectByNdx(Simply.Domain.Reports.Support.SelectCategory,System.Int32)">
            <summary>
            Selects one item from a list in a category.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="index">Index of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.SelectByName(Simply.Domain.Reports.Support.SelectCategory,System.String)">
            <summary>
            Selects one item from a list in a category.
            </summary>
            <param name="category">Category of the item.</param>
            <param name="name">Name of the item to be selected.</param>
            <returns>index of the item.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.ClickSelectAll(Simply.Framework.Domain.Reports.IMultiSelect)">
            <summary>
            Simulates clicking Select All button and selects all
            items in category. In the case where all items are 
            already selected then unselects all. 
            
            Note: There is no method that directly simulates
            clicking the button. Method SelectAll selects all
            regardless of how many items are selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.ConvertNdxToID(Sage.Simply.Common.ListItemCollection,System.Int32)">
            <summary>
            Converts an index to ID.
            </summary>
            <param name="list">List of Items</param>
            <param name="index">Index to convert</param>
            <returns>The index as ID.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SelectCategorySDK.ConvertIDtoNdx(Sage.Simply.Common.ListItemCollection,System.Int32)">
            <summary>
            Converts an ID to index.
            </summary>
            <param name="list">List of Items</param>
            <param name="id">ID to convert</param>
            <returns>The ID as index.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.FontSettingsSDK">
            <summary>
            Handles the Font Settings of reports, missing properties for the COLOR settings.
            PrintSettingsSDK is generic for all reports of Simply Accounting to simulate Print settings.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers. 
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FontSettingsSDK.#ctor(Simply.Framework.Domain.Reports.CustomizeOptions.ReportFontSettingsModel)">
            <summary>
            Initializes a new instance of the FontSettingsSDK class.
            </summary>
            <param name="model">ReportFontSettingsModel object to initialize member to.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.UseGlobalFontSettings">
            <summary>
            Gets or sets if to use global/company font settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportHeaderColor">
            <summary>
            Gets or sets the Report header color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportHeaderFontFace">
            <summary>
            Gets or sets the report header font face.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportHeaderFontSize">
            <summary>
            Gets or sets the report header font size.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportHeaderBold">
            <summary>
            Gets or sets if the report header is bold or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportHeaderItalics">
            <summary>
            Gets or sets if the report header is italicized or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportHeaderAlignment">
            <summary>
            Gets or sets the report header alignment, either LEFT, CENTER, or RIGHT.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportTitleColor">
            <summary>
            Gets or sets the Report title color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportTitleFontFace">
            <summary>
            Gets or sets the report title font face.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportTitleFontSize">
            <summary>
            Gets or sets the report header font size.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportTitleBold">
            <summary>
            Gets or sets if the report title is bold or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportTitleItalics">
            <summary>
            Gets or sets if the report title is italicized or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportTitleAlignment">
            <summary>
            Gets or sets the report title alignment, either LEFT, CENTER, or RIGHT.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ColumnTitlesColor">
            <summary>
            Gets or sets the Column title color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ColumnTitlesFontFace">
            <summary>
            Gets or sets the column title font face.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ColumnTitlesFontSize">
            <summary>
            Gets or sets the report header font size.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ColumnTitlesBold">
            <summary>
            Gets or sets if the column title is bold or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ColumnTitlesItalics">
            <summary>
            Gets or sets if the column titles is italicized or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.SectionHeadingsAndTotalsColor">
            <summary>
            Gets or sets the section headings and totals color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.SectionHeadingsAndTotalsFontFace">
            <summary>
            Gets or sets the section headings and totals font face.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.SectionHeadingsAndTotalsFontSize">
            <summary>
            Gets or sets the report header font size.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.SectionHeadingsAndTotalsBold">
            <summary>
            Gets or sets if the section header and totals is bold or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.SectionHeadingsAndTotalsItalics">
            <summary>
            Gets or sets if the section headings and totals is italicized or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.DetailLinesColor">
            <summary>
            Gets or sets the detail lines color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.DetailLinesFontFace">
            <summary>
            Gets or sets the detail lines font face.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.DetailLinesFontSize">
            <summary>
            Gets or sets the detail lines font size.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.DetailLinesBold">
            <summary>
            Gets or sets if the detail lines is bold or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.DetailLinesItalics">
            <summary>
            Gets or sets if the detail lines is italicized or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.NegativeAmountsFormat">
            <summary>
            Gets or sets the Negative Amounts format.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.NegativeAmountsColor">
            <summary>
            Gets or sets the Negative Amounts color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.PositiveAmountsColor">
            <summary>
            Gets or sets the Positive Amounts color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportFootersColor">
            <summary>
            Gets or sets the Report Footers color.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportFootersFontFace">
            <summary>
            Gets or sets the report footer font face.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportFootersFontSize">
            <summary>
            Gets or sets the report footer font size.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportFootersBold">
            <summary>
            Gets or sets if the report footer is bold or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportFootersItalics">
            <summary>
            Gets or sets if the report footer is italicized or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.FontSettingsSDK.ReportFooterAlignment">
            <summary>
            Gets or sets the report footer alignment, either LEFT, CENTER, or RIGHT.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FontSettingsSDK.ResetToDefault">
            <summary>
            To reset the font settings back to the defaults.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.FontSettingsSDK.GetColorTypeAsString(System.Int32)">
            <summary>
            Method for the get of color properties to Gets the color of the property.
            </summary>
            <param name="colorType">color type to convert of the property.</param>
            <returns>String representation of a color.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.FontSettingsSDK.SetColorType(System.String)">
            <summary>
            Method for the set of color properties to Gets the color of the property.
            </summary>
            <param name="color">color to set property to.</param>
            <returns>An integer value to set property to.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.ColorType">
            <summary>
            Enumeration for color format, only handle 3 colors for simplicity.
            </summary>
        </member>
        <member name="F:SimplySDK.Reports.Support.ColorType.RED">
            <summary>
            Normal like RED
            </summary>
        </member>
        <member name="F:SimplySDK.Reports.Support.ColorType.BLACK">
            <summary>
            Negative sign behind, GREEN
            </summary>
        </member>
        <member name="F:SimplySDK.Reports.Support.ColorType.BLUE">
            <summary>
            BLUE
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Support.PrintSettingsSDK">
            <summary>
            PrintSettingsSDK is generic for all reports of Simply Accounting to simulate Print settings.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.#ctor(Simply.Framework.Domain.Reports.CustomizeOptions.ReportPrintSettingsModel)">
            <summary>
            Initializes a new instance of the PrintSettingsSDK class.
            </summary>
            <param name="model">ReportPRintSettingsModel object to initalize member to.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.PrintSettingsSDK.TopMargin">
            <summary>
            Gets or sets the Top Margin value.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.PrintSettingsSDK.LeftMargin">
            <summary>
            Gets or sets the Left Margin value.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.CheckReportPrintersSettings">
            <summary>
            Checks (set) the radio button "The report printer's current setting".
            Notice that checking this radio button unchecks "Custom Page Orientation".
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.CheckCustomPageOrientation">
            <summary>
            Checks (set) the radio button "Custom Page Orientation".
            Notice that checking this radio button unchecks.
            "The report printer's current setting".
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.IsReportPrintersSettingsChecked">
            <summary>
            Returns wheather "The report printer's current setting" is true or false.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.IsCustomPageOrientationChecked">
            <summary>
            Returns wheather "Custom Page Orientation" is true or false.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.CheckPortraitCustomOrientation">
            <summary>
            Checks (set) the radio button "Portrait".
            Notice that checking this radio button unchecks "Landscape".
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.CheckLandscapeCustomOrientation">
            <summary>
            Checks (set) the radio button "Landscape".
            Notice that checking this radio button unchecks "Portrait".
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.IsPortraitChecked">
            <summary>
            Returns wheather "Portrait" is true or false.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.IsLandscapeChecked">
            <summary>
            Returns wheather "Landscape" is true or false.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.CheckCompanysCurrentSettings">
            <summary>
            Checks (set) the radio button "The company's current report...".
            Notice that checking this radio button unchecks "Custom Margins".
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.CheckCustomMargins">
            <summary>
            Checks (set) the radio button "Custom Margins".
            Notice that checking this radio button unchecks "The company's current report...".
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.IsCompanysSettingsChecked">
            <summary>
            Returns wheather "The company's current report..." is true or false.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.PrintSettingsSDK.IsCustomMarginsChecked">
            <summary>
            Returns wheather "Custom Margins" is true or false.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportColumnsSDK">
            <summary>
            ReportColumnsSDK is generic for all reports of Simply Accounting to simulate Report Column settings. 
            The purpose of this class is to provide convenient way to write unit testing cases first. 
            Might be used in the future as software development kit for third party programmers. 
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.#ctor(Simply.Framework.Domain.Reports.ReportColumnsModel)">
            <summary>
            Initializes a new instance of the ReportColumnsSDK class.
            </summary>
            <param name="model">ReportColumns model object to initialize the member to.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportColumnsSDK.AreColumnsCustomizable">
            <summary>
            Gets if this report supports report column customization.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportColumnsSDK.CustomReportColumnSettings">
            <summary>
            Gets or sets if to use user defined custom report column settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportColumnsSDK.ColumnsAvailableCount">
            <summary>
            Gets the number of columns in the Columns Available list.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportColumnsSDK.ColumnsShownCount">
            <summary>
            Gets the number of columns in the Columns Shown list.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetColumnsAvailableForTheReport">
            <summary>
            Gets a list of columns listed in the Columns Available list.
            </summary>
            <returns>IBasicList, list of the fields in Columns Available list.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetColumnsShownOnTheReport">
            <summary>
            Gets a list of columns listed in the Columns Shown list.
            </summary>
            <returns>IBasicList, list of the fields in Columns Shown list.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.Reset">
            <summary>
            Simulate clicking the Reset button to reset the default column settings.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetColumnRankInAvailableListByName(System.String)">
            <summary>
            The items in the Available list are at the end of the order, even though only one column in available list. 
            it is last in order (when added back to Shown list it will be placed at the bottom).
            </summary>
            <param name="colName">Name of the field to find the rank in the list.</param>
            <returns>int, the rank in the list.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetColumnRankInListByName(System.String)">
            <summary>
            Gets the rank in the list for the colName (rank starts with 1).
            </summary>
            <param name="colName">Name of Column.</param>
            <returns>Rank in the list where the colName is found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetColumnNameByRankInList(System.Int32)">
            <summary>
            Gets the column name by the passed in list ranking (rank starts with 1).
            </summary>
            <param name="listIndex">ListIndex is based on the place in the list (not the columns real ID).</param>
            <returns>Name of the column found at rank listIndex.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetColumnNameByRankInAvailableList(System.Int32)">
            <summary>
            Gets the column name by the passed in list ranking (rank starts with 1).
            </summary>
            <param name="listIndex">ListIndex is based on the place in the list (not the columns real ID).</param>
            <returns>Name of the column found at rank listIndex.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.MoveUpColumn(System.Int32)">
            <summary>
            Move column's rank in list Up in the Columns shown in report list.
            </summary>
            <param name="listIndex">ListIndex is based on the place in the list (not the columns real ID).</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.MoveDownColumn(System.Int32)">
            <summary>
            Move column's rank in list Down in the Columns shown in report list.
            </summary>
            <param name="listIndex">ListIndex is based on the place in the list (not the columns real ID).</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.GetWidthOfColumn(System.String)">
            <summary>
            Gets the width value of a field in the Columns Shown list.
            </summary>
            <param name="colName">Name of the field to Gets the width of.</param>
            <returns>int, the width value of the field.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.SetWidthOfColumn(System.String,System.Int32)">
            <summary>
            Sets the width value of a field in the Columns Shown list.
            </summary>
            <param name="colName">Name of the field to Gets the width of.</param>
            <param name="colWidth">Width value to set the field to.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.AddAllColumns">
            <summary>
            Simulate clicking the >> button (move all fields from available list to shown list.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.AddColumn(System.String)">
            <summary>
            Simulate clicking the > button (move the specified field from available.
            list to shown list
            </summary>
            <param name="colName">Name of the column to move.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.AddColumns(System.Collections.IList)">
            <summary>
            Add a list of columns.
            </summary>
            <param name="colums">List of columns.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.RemoveAllColumns">
            <summary>
            Simulate clicking the &lt;&lt; button (move all fields from shown list to available list.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.RemoveColumn(System.String)">
            <summary>
            Simulate clicking the &lt; button (move all fields from shown list to available list.
            </summary>
            <param name="colName">Name of the column to move.</param> 
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.RemoveColumns(System.Collections.IList)">
            <summary>
            Simulate clicking the remove button to remove all columns.
            </summary>
            <param name="colums">List of columns to remove.</param> 
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportColumnsSDK.ValidateColumns">
            <summary>
            Validate columns.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Support.ReportOptionsSDK">
            <summary>
            ReportOptionsSDK is generic for all reports of Simply Accounting. 
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.SetReportOptionsModel(Simply.Framework.Domain.Reports.ReportOptionsModel)">
            <summary>
            Sets the Report Options Model to the report option object.
            </summary>
            <param name="model">Report Options Model.</param>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.ReadOneReportOption(System.Int32)">
            <summary>
            Read One Report Option.
            </summary>
            <param name="reportOptionsID">Index of the report option in use.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.ReportID">
            <summary>
            Gets or sets the Report ID index, specific to the type of report.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.ReportOptionsTitle">
            <summary>
            Gets the Report Options window title.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.ReportOptions">
            <summary>
            Gets the options model.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.ReportColumns">
            <summary>
            Gets the ReportColumnsSDK to the report option object.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.SortReport">
            <summary>
            Gets the SortReportSDK to the report option object.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.FilterReport">
            <summary>
            Gets the FilterReportSDK to the report option object.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.PrintSettings">
            <summary>
            Gets the PrintSettingsSDK to the report option object.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.FontSettings">
            <summary>
            Gets the FontSettingsSDK to the report option object.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.ReportOptionsSDK.ReportFooter">
            <summary>
            Gets the ReportFooterSDK to the report option object.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.ClickSaveTemplate">
            <summary>
            Handle to click the Save Template Button.
            </summary>
            <returns>Save Template SDK, instance of Save Template.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.ClickOKButton">
            <summary>
            Click the OK button to generate the report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.GetAllTemplates">
            <summary>
            Gets all templates for this report.
            </summary>
            <returns>An IList, list collection of the available templates.</returns> 
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.SelectTemplate(System.String)">
            <summary>
            Select a template by display name.
            </summary>
            <param name="templateName">Name of the template to select.</param>
            <returns>none.</returns> 
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.SelectedTemplateDisplay">
            <summary>
            Gets the DisplayString for the currently selected template.
            </summary>
            <returns>The Selected Template display string.</returns> 
        </member>
        <member name="M:SimplySDK.Reports.Support.ReportOptionsSDK.GetNumberOfTemplates">
            <summary>
            Gets the number of templates available for the report.
            </summary>
            <returns>An int, the number of templates available for the report.</returns> 
        </member>
        <member name="T:SimplySDK.Reports.Support.SaveTemplateSDK">
            <summary>
            SaveTemplateSDK is generic for all reports of Simply Accounting to simulate the Save Template dialog.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SaveTemplateSDK.#ctor(Simply.Framework.Domain.Reports.ReportOptionsModel)">
            <summary>
            Initializes a new instance of the SaveTemplateSDK class.
            </summary>
            <param name="rptOptions">Report Options object of the options to apply save template to.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.SaveTemplateSDK.SaveTemplateAs">
            <summary>
            Gets or sets the name to the save the template as.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SaveTemplateSDK.IsOverwriteCurrentTemplateEnabled">
            <summary>
            Get if overwrite current template option should be enabled.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SaveTemplateSDK.OverwriteCurrentTemplate">
            <summary>
            Gets or sets if to overwrite the currently selected template.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SaveTemplateSDK.AddtoReportGroup">
            <summary>
            Gets or sets if to add this template to a report group.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SaveTemplateSDK.IsApplyToAllUserEnabled">
            <summary>
            Get if Apply to All User should be enabled
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SaveTemplateSDK.ApplyToAllUsers">
            <summary>
            Gets or sets if to apply this template for all users to use
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SaveTemplateSDK.Save">
            <summary>
            To simulate clicking the save button of the save template dialog.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SaveTemplateSDK.SaveAndCheck">
            <summary>
            To simulate clicking the save button of the save template dialog
            </summary>
            <returns>If saved successfully, return true.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SaveTemplateSDK.SetReportGroup(System.String)">
            <summary>
            To simulate clicking the save button of the save template dialog.
            </summary>
            <param name="groupName">The name of the group to add template to.</param>
            <returns>Returns the group if it is value, if not returns a blank string.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Support.SaveTemplateSDK.GetReportGroup">
            <summary>
            Gets the report group that the currently selected template belongs to.
            </summary>
            <returns>The group name that the template belongs to.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Support.SortReportSDK">
            <summary>
            SortReportSDK is generic class as sort report options work the same for all report of Simply Accounting.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Support.SortReportSDK.#ctor(Simply.Framework.Domain.Reports.ReportSortModel)">
            <summary>
            Initializes a new instance of the SortReportSDK class.
            </summary>
            <param name="model">ReportSortModel to initialize with.</param>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.UseCustomSortOrder">
            <summary>
            Gets or sets if the report should use user defined sort order.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByField1">
            <summary>
            Gets or sets SortByField1.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByField2">
            <summary>
            Gets or sets SortByField2.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByField3">
            <summary>
            Gets or sets SortByField3.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByField4">
            <summary>
            Gets or sets SortByField4.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByDescend1">
            <summary>
            Gets or sets if sort 1 option should be descending or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByDescend2">
            <summary>
            Gets or sets if sort 2 option should be descending or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByDescend3">
            <summary>
            Gets or sets if sort 3 option should be descending or not.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Support.SortReportSDK.SortByDescend4">
            <summary>
            Gets or sets if sort 4 option should be descending or not.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK">
            <summary>
            BalanceSheetReportOptionsSDK mimic the user interface of BalanceSheet Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the BalanceSheetReportOptionsSDK class.
            Constructor for class, sets the instance of each of the members in the
            base class ReportOptionsSDK. Creates the instance of the appropriate model based on the flavor
            of the database used (i.e. Lite, Basic, Pro, Premium, Accountant Ed, or Enterprise)
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.BalanceSheetReportOptions">
            <summary>
            Gets the Balance Sheet Report Options object, so can access its methods/properties.
            </summary>
            <returns>Instance of report options model for the report.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.ExchangeRates">
            <summary>
            Get an instance of a FinancialCurrencyExchRateSDK.
            </summary>
            <returns>Instance of FinancialCurrencyExchRateSDK.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.ShowNotes">
            <summary>
            Gets or sets the Show Notes checkbox.
            </summary>
            <returns>True if checkbox is checked.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.ShowDepartments">
            <summary>
            Gets or sets the Show Departments checkbox.
            </summary>
            <returns>True if checkbox is checked.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.Comparative">
            <summary>
            Gets or sets the comparative checkbox (Used when the database contains only one-year of data).
            </summary>
            <returns>True if Comparative checkbox is checked.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.RevalueForeignAccts">
            <summary>
            Gets or sets the radio buttons (i.e. Yes/No) to revalue the foreign accounts using a different exchange rate
            </summary>
            <returns>True if Yes radio button is selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.hasFooterCutomization">
            <summary>
            Checks if the report has footer customization.
            </summary>
            <returns>True if the report has footer customization.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectReportTypeByNdx(System.Int32)">
            <summary>
            Selects Report Type by index from drop down (Used when database has more than one-year of data).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectReportTypeByName(System.String)">
            <summary>
            Selects Report Type by name from drop down. (Used when database has more than one-year of data).
            For example: Balance Sheet or Comparative Balance Sheet (case insensitive).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.IsNormal">
            <summary>
            Checks if the report is normal.
            </summary>
            <return>true if the report is normal (i.e. non-comparative)</return>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.IsComparative">
            <summary>
            Checks if the report is comparative.
            </summary>
            <return>true if the report is comparative</return>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.IsReportTypeSelected(System.Int32)">
            <summary>
            Checks if the item with given index is currently selected.
            </summary>
            <return>true if the given item is selected</return>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.ClickSelectDepartments">
            <summary>
            Method to simulate clicking Select Departments, allowing access to 
            all needed properties / methods associated with the Select Departments dialog.
            </summary>
            <returns>The Select Departments SDK model.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectCurrentYear">
            <summary>
            Selects Current Year as Fiscal Year.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectPreviousYear">
            <summary>
            Selects Previous Year as Fiscal Year.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.IsCurrentFiscalYear">
            <summary>
            Checks if Current Fiscal Year is selected.   
            </summary>
            <returns>True if current year is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.IsPreviousFiscalYear">
            <summary>
            Checks if Previous Fiscal Year is selected.     
            </summary>
            <returns>True if previous year is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectCommonLanguageDateByName(System.String)">
            <summary>
            Selects an item by name in As At drop down (i.e. Custom, Today, Yesterday etc.).
            </summary>
            <param name="name">Name of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectAsAtDateAtNdx(System.Int32)">
            <summary>
            Selects the As At Date at index.
            </summary>
            <param name="index">Index in Date list.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SetAsAtDate(System.String)">
            <summary>
            Sets the As At Date in string format (e.x. MMM DD, YYYY).
            </summary>
            <param name="asAtDate">date to be set.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.GetCommonLanguageDate">
            <summary>
            Gets the Common Language Date currently selected in string format (e.x. Today, Yesterday etc.).
            </summary>
            <returns>The string representation of the selected Common Language Date.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.GetAsAtDate">
            <summary>
            Gets the As At Date in string format (e.x. MMM DD, YYYY).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.GetAsAtDates">
            <summary>
            Gets the Fiscal As at Dates in a list of string ((e.x. MMM DD, YYYY).
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectFirstComparativeDateAtNdx(System.Int32)">
            <summary>
            Selects the first comparative date at index. For comparative report only.
            </summary>
            <param name="index">Index in First Period As at date list.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SelectSecondComparativeDateAtNdx(System.Int32)">
            <summary>
            Selects the second comparative date at index. For comparative report only.
            </summary>
            <param name="index">Index in Second Period As at date list.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SetFirstComparativeDate(System.String)">
            <summary>
            Sets the first comparative date using the string format "MMM dd, yyyy". For comparative report only.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.SetSecondComparativeDate(System.String)">
            <summary>
            Sets the second comparative date using the string format "MMM dd, yyyy". For comparative report only.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.GetFirstComparativeDate">
            <summary>
            Gets the first comparative date using the string format "MMM dd, yyyy". For comparative report only.
            </summary>
            <returns>First comparative date in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportOptionsSDK.GetSecondComparativeDate">
            <summary>
            Gets the second comparative date using the string format "MMM dd, yyyy". For comparative report only.
            </summary>
            <returns>Second comparative date in string format.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportSDK">
            <summary>
            Report SDK for Balance Sheet report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.BalanceSheet.BalanceSheetReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK">
            <summary>
            GeneralLedgerReportOptionsSDK mimic the user interface of General Ledger Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the GeneralLedgerReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.GeneralLedgerReportOptions">
            <summary>
            Gets the General Ledger ReportOptions object, so can access its methods/properties.
            For example, the category for Accounts.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Accounts.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectCurrentYear">
            <summary>
            Selects Current Year as Fiscal Year.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectPreviousYear">
            <summary>
            Selects Previous Year as Fiscal Year.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsCurrentFiscalYearSelected">
            <summary>
            True if Current Fiscal Year is selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsPreviousFiscalYearSelected">
            <summary>
            True if Previous Fiscal Year is selected.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsHomeCurrencySelected">
            <summary>
            True if Home Currency is selected.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsHomeAndForeignCurrenciesSelected">
            <summary>
            True if Home and Foreign Currency is selected.    
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsCurrencyOfEachSelected">
            <summary>
            True if Currency of each acount is selected.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectHomeCurrency">
            <summary>
            Selects Home Currency in Show Accounts with.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectHomeAndForeignCurrencies">
            <summary>
            Selects Home and Foreign Currency in Show Accounts with.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectCurrencyOfEach">
            <summary>
            Selects Currency of each in Show Accounts with.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.GetShowAccountAtNdx(System.Int32)">
            <summary>
            Gets strings that represents the item selected in Show Accounts with.
            </summary>
            <param name="index">Index of the item, starts at 1.</param>
            <returns>String representing the selected item.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsCorrectionsChecked">
            <summary>
            Gets Corrections check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsDepartmentsChecked">
            <summary>
            Gets Departments check box's status.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsSelectDeparmentsEnabled">
            <summary>
            Gets Select Departments button's status.
            
            There is no method in the Model to test if 
            the button is enabled. It may be done directly in
            the UI in this way.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsTransactionNumberChecked">
            <summary>
            Gets Transaction Number check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsDateChecked">
            <summary>
            Gets Date check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsShowTransactionChecked">
            <summary>
            Gets Show Transaction check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsShowLineChecked">
            <summary>
            Gets Show Line check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.CheckCorrections">
            <summary>
            Sets Corrections button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.CheckDepartments">
            <summary>
            Sets Departments button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.CheckTransactionNumber">
            <summary>
            Sets Transaction Number button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.CheckDate">
            <summary>
            Sets Date button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.CheckShowTransaction">
            <summary>
            Sets Show Transaction button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.CheckShowLine">
            <summary>
            Sets Show Line button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.ClickSelectDepartments">
            <summary>
            Method to simulate clicking Select Departments, allowing access to 
            all needed properties / methods associated with the Select Departments dialog.
            </summary>
            <returns>The Select Departments SDK model.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.AreAllAccountsSelected">
            <summary>
            Checks if all Accounts are selected.
            </summary>
            <returns>True if all accounts are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.AnyAccountsAreSelected">
            <summary>
            Checks if all Accounts are not selected.
            </summary>
            <returns>True if all Accounts are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.ClickSelectAllAccounts">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.AccountInactiveString">
            <summary>
            Gets the string used in Include Inactive for Accounts
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectedAccounts">
            <summary>
            Gets the list of selected Accounts.
            </summary>
            <returns>The list of selected accounts.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectAccounts(System.Collections.ArrayList)">
            <summary>
            Selects Accounts from list of indexes.
            </summary>
            <param name="indexes">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.IsAccountSelected(System.Int32)">
            <summary>
            Checks if an account is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectAccountByNdx(System.Int32)">
            <summary>
            Selects one Account from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.SelectAccountByName(System.String)">
            <summary>
            Selects one Account from the list by name.
            </summary>
            <param name="accountName">Account Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.ConvertNdxToID(Sage.Simply.Common.ListItemCollection,System.Int32)">
            <summary>
            Converts an index to ID.
            </summary>
            <param name="list">List of Items.</param>
            <param name="index">Index to convert.</param>
            <returns>The index as ID.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportOptionsSDK.ConvertIDtoNdx(Sage.Simply.Common.ListItemCollection,System.Int32)">
            <summary>
            Converts an ID to index.
            </summary>
            <param name="list">List of Items.</param>
            <param name="id">ID to convert.</param>
            <returns>The ID as index.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportSDK">
            <summary>
            Report SDK for General Ledger report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Financial.GeneralLedger.GeneralLedgerReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK">
            <summary>
            BankAcctTransReportOptionsSDK mimic the user interface of Bank Acct Trans Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the BankAcctTransReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.BankAcctTransReportOptions">
            <summary>
            Gets the Bank Acct Trans Report Options object, so can access its methods/properties.
            For example, the category for Accounts.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Accounts.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckCurrentYear">
            <summary>
            Checks Current Year check box.
            </summary>
            <returns>True if Checked successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckPreviousYear">
            <summary>
            Checks Previuos Year check box.
            </summary>
            <returns>True if Checked successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsCurrentYearChecked">
            <summary>
            True if Current Year is checked.  
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsPreviousYearChecked">
            <summary>
            True if Previous Year is checked.    
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsHomeCurrencySelected">
            <summary>
            True if Home Currency is selected.   
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsHomeAndForeignCurrenciesSelected">
            <summary>
            True if Home and Foreign Currency is selected.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsCurrencyOfEachSelected">
            <summary>
            True if Currency of each acount is selected.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectHomeCurrency">
            <summary>
            Selects Home Currency in Show Accounts with.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectHomeAndForeignCurrencies">
            <summary>
            Selects Home and Foreign Currency in Show Accounts with.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectCurrencyOfEach">
            <summary>
            Selects Currency of each in Show Accounts with.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.GetShowAccountAtNdx(System.Int32)">
            <summary>
            Gets strings that represents the item selected in Show Accounts with.
            </summary>
            <param name="index">Index of the item, starts at 1.</param>
            <returns>String representing the selected item.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsCorrectionsChecked">
            <summary>
            Gets Corrections check box's status.   
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsDepartmentsChecked">
            <summary>
            Gets Departments check box's status.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsDepositSlipChecked">
            <summary>
            Gets Deposit Slip Details check box's status.   
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsSelectDeparmentsEnabled">
            <summary>
            Gets Select Departments button's status.
            
            There is no method in the Model to test if 
            the button is enabled. It may be done directly in
            the UI in this way.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsTransactionNumberChecked">
            <summary>
            Gets Transaction Number check box's status.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsDateChecked">
            <summary>
            Gets Date check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsShowTransactionChecked">
            <summary>
            Gets Show Transaction check box's status      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsShowLineChecked">
            <summary>
            Gets Show Line check box's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckCorrections">
            <summary>
            Sets Corrections button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckDepartments">
            <summary>
            Sets Departments button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckDepositSlip">
            <summary>
            Sets Deposit Slip Details button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckTransactionNumber">
            <summary>
            Sets Transaction Number button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckDate">
            <summary>
            Sets Date button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckShowTransaction">
            <summary>
            Sets Show Transaction button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.CheckShowLine">
            <summary>
            Sets Show Line button on.
            </summary>
            <returns>True if it was set on.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.ClickSelectDepartments">
            <summary>
            Method to simulate clicking Select Departments, allowing access to 
            all needed properties / methods associated with the Select Departments dialog.
            </summary>
            <returns>The Select Departments SDK model.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.AreAllAccountsSelected">
            <summary>
            Checks if all Accounts are selected.
            </summary>
            <returns>True if all accounts are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.AnyAccountsAreSelected">
            <summary>
            Checks if all Accounts are not selected.
            </summary>
            <returns>True if all Accounts are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.ClickSelectAllAccounts">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.IsAccountSelected(System.Int32)">
            <summary>
            Checks if an account is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectedAccounts">
            <summary>
            Gets the list of selected Accounts.
            </summary>
            <returns>The list of selected accounts.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectAccountByNdx(System.Int32)">
            <summary>
            Selects one Account from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.AccountInactiveString">
            <summary>
            Gets the string used in Include Inactive for Accounts.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectAccounts(System.Collections.ArrayList)">
            <summary>
            Selects Accounts from list of indexes.
            </summary>
            <param name="indexes">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.SelectAccountByName(System.String)">
            <summary>
            Selects one Account from the list by name.
            </summary>
            <param name="accountName">Account Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.ConvertNdxToID(Sage.Simply.Common.ListItemCollection,System.Int32)">
            <summary>
            Converts an index to ID.
            </summary>
            <param name="list">List of Items.</param>
            <param name="index">Index to convert.</param>
            <returns>The index as ID.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportOptionsSDK.ConvertIDtoNdx(Sage.Simply.Common.ListItemCollection,System.Int32)">
            <summary>
            Converts an ID to index.
            </summary>
            <param name="list">List of Items.</param>
            <param name="id">ID to convert.</param>
            <returns>The ID as index.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportSDK">
            <summary>
            Report SDK for Bank Account Transactions report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.BankAcctTrans.BankAcctTransReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK">
            <summary>
            ChqLogReportOptionsSDK mimic the user interface of Cheque Log Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the ChqLogReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.ChqLogReportOptions">
            <summary>
            Gets the Check Log Report Options object, so can access its methods/properties.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetNumberOfBankAccountsAvailable">
            <summary>
            Gets the number of fields in Select Bank Accounts list.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.SetBankAccount(System.String)">
            <summary>
            Sets the Select Bank Account field.
            </summary>
            <param name="account">Account to set.</param>
            <returns>The name of the field when found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetBankAccount">
            <summary>
            Gets the Select Bank Account field.
            </summary>
            <returns>The name of the field when found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.GetBankAccountAtNdx(System.Int32)">
            <summary>
            Gets the Select Bank Account field at the specified.
            index
            </summary>
            <param name="index">Index of the field which display string is wanted.</param> 
            <returns>The name of the field when found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status      
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportSDK">
            <summary>
            Report SDK for Cheque Log report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.ChequeLog.ChqLogReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK">
            <summary>
            DirDepLogReportOptionsSDK mimic the user interface of Direct Deposit Log Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the DirDepLogReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.DirDepLogReportOptions">
            <summary>
            Gets the Direct Deposit Log Report Options object, so can access its methods/properties
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.     
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportSDK">
            <summary>
            Report SDK for Direct Deposit Log report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Banking.DirectDepositLog.DirDepLogReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.CustomerGroupedListReportOptionsSDK">
            <summary>
            CustomerGroupedListReportOptionsSDK mimic the user interface of Customer Grouped List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.CustomerGroupedListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the CustomerGroupedListReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.GroupedList.CustomerGroupedListReportOptionsSDK.IncludeInternalCustomers">
            <summary>
            Gets or sets if to Include Internal Customers.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.CustomerGroupedListReportSDK">
            <summary>
            Report SDK for Customer grouped list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.CustomerGroupedListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of a CustomerGroupedListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.EmployeeGroupedListReportOptionsSDK">
            <summary>
            EmployeeGroupedListReportOptionsSDK mimic the user interface of Employee Grouped List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.EmployeeGroupedListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the EmployeeGroupedListReportOptionsSDK class.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.EmployeeGroupedListReportSDK">
            <summary>
            Report SDK for employee grouped list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.EmployeeGroupedListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>.</returns>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.InventoryGroupedListReportOptionsSDK">
            <summary>
            InventoryGroupedListReportOptionsSDK mimic the user interface of Inventory Grouped List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.InventoryGroupedListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the InventoryGroupedListReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.GroupedList.InventoryGroupedListReportOptionsSDK.IncludeInternalServiceActivities">
            <summary>
            Gets or sets if to Include Internal Service Activities.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.InventoryGroupedListReportSDK">
            <summary>
            Report SDK for inventory grouped list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.InventoryGroupedListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.ProjectGroupedListReportOptionsSDK">
            <summary>
            ProjectGroupedListReportOptionsSDK mimic the user interface of Project Grouped List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.ProjectGroupedListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the ProjectGroupedListReportOptionsSDK class.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.ProjectGroupedListReportSDK">
            <summary>
            Report SDK for project grouped list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.ProjectGroupedListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.VendorGroupedListReportOptionsSDK">
            <summary>
            VendorGroupListReportOptionsSDK mimic the user interface of Vendor Grouped List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.VendorGroupedListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the VendorGroupedListReportOptionsSDK class.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.VendorGroupedListReportSDK">
            <summary>
            Report SDK for vendor grouped list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.VendorGroupedListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK">
            <summary>
            GroupListReportOptionsSDK is generic for all Grouped List reports otions.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.GroupedListReportOptions">
            <summary>
            Gets the GroupedListReportOptions object, so can access its methods/properties.
            For example, the DropDownList property which holds the values of the GroupBy field.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive records.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.GetNumberOfFieldsInGroupBy">
            <summary>
            Gets the number of fields in Group By list.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.SetGroupByField(System.String)">
            <summary>
            Sets the group by field.
            </summary>
            <param name="field">Name of the field to set as the group by value.</param>
            <returns>The name of the field when found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.GetGroupByField">
            <summary>
            Gets the GroupBy field.
            </summary>
            <returns>The name of the field when found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.GetGroupByFieldAtNdx(System.Int32)">
            <summary>
            Gets the GroupBy field at the specified.
            index
            </summary>
            <param name="index">Index of the field which display string is wanted.</param> 
            <returns>The name of the field when found.</returns>
        </member>
        <member name="P:SimplySDK.Reports.GroupedList.GroupedListReportOptionsSDK.InactiveString">
            <summary>
            Gets the string used in Include Inactive.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK">
            <summary>
            PriceListReportOptionsSDK mimic the user interface of Price List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the PriceListReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.PriceListReportOptions">
            <summary>
            Gets the PriceListReportOptions object, so can access its methods/properties.
            For example, the 3 categories for Items, Price List and Currencies.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IncludeInactiveItems">
            <summary>
            Gets or sets if to Include Inactive Items.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IncludeInactivePriceLists">
            <summary>
            Gets or sets if to Include Inactive Price Lists.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.ItemInactiveString">
            <summary>
            Gets the string used in Include Inactive for Items.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.PriceInactiveString">
            <summary>
            Gets the string used in Include Inactive for Prices.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.CheckPriceList">
            <summary>
            Sets Price List button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.CheckCurrency">
            <summary>
            Sets Currency button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsPriceListChecked">
            <summary>
            Gets Price List button's status.   
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsCurrencyChecked">
            <summary>
            Gets Currency button's status.     
            </summary>      
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.CheckAllItems">
            <summary>
            Sets All Items button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.CheckInventoryItems">
            <summary>
            Sets Inventory Items button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.CheckServiceItems">
            <summary>
            Sets Service Items button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.CheckActivities">
            <summary>
            Sets Activities button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsAllItemsChecked">
            <summary>
            Gets All Items button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsInventoryItemsChecked">
            <summary>
            Gets Inventory Items button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsServiceItemsChecked">
            <summary>
            Gets Service Items button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsActivitiesChecked">
            <summary>
            Gets Activities button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.ClickSelectAllItems">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AreAllItemsSelected">
            <summary>
            Checks if all Items are selected.
            </summary>
            <returns>True if all items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AreNoneSelected">
            <summary>
            Checks if no Items are selected.
            </summary>
            <returns>True if no items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AnyItemsAreSelected">
            <summary>
            Checks if all Items are not selected.
            </summary>
            <returns>True if all items are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.ClickSelectAllPrices">
            <summary>
            Simulates clicking Select All Prices button. 
            Note: There is no method that directly simulates. 
            clicking the button. Method SelectAll selects all. 
            regardless of how many items are selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AreAllPricesSelected">
            <summary>
            Checks if all Prices are selected.
            </summary>
            <returns>True if all Prices are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AnyPricesAreSelected">
            <summary>
            Checks if all Prices are not selected.
            </summary>
            <returns>True if all Prices are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.ClickSelectAllCurrencies">
            <summary>
            Simulates clicking Select All Currencies button.
            Note: There is no method that directly simulates.
            clicking the button. Method SelectAll selects all.
            regardless of how many items are selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AreAllCurrenciesSelected">
            <summary>
            Checks if all Currencies are selected.
            </summary>
            <returns>True if all Currencies are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.AnyCurrenciesAreSelected">
            <summary>
            Checks if all Currencies are not selected
            </summary>
            <returns>True if all Currencies are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectItemByNdx(System.Int32)">
            <summary>
            Selects one Item from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectPriceByNdx(System.Int32)">
            <summary>
            Selects one Price from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectCurrencyByNdx(System.Int32)">
            <summary>
            Selects one Currency from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectItemByName(System.String)">
            <summary>
            Selects one Item from the list.
            </summary>
            <param name="itemName">Name to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectPriceByName(System.String)">
            <summary>
            Selects one Price from the list.
            </summary>
            <param name="priceName">Name to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectCurrencyByName(System.String)">
            <summary>
            Selects one Currency from the list.
            </summary>
            <param name="currencyName">Name to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsItemSelected(System.Int32)">
            <summary>
            Checks if an item is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsPriceSelected(System.Int32)">
            <summary>
            Checks if a price is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.IsCurrencySelected(System.Int32)">
            <summary>
            Checks if a currency is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelecItems(System.Collections.ArrayList)">
            <summary>
            Selects items from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectPrices(System.Collections.ArrayList)">
            <summary>
            Selects prices from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectCurrencies(System.Collections.ArrayList)">
            <summary>
            Selects currencies from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectedItems">
            <summary>
            Gets the list of selected items.
            </summary>
            <returns>The list of selected items.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectedPrices">
            <summary>
            Gets the list of selected prices.
            </summary>
            <returns>The list of selected prices.</returns>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportOptionsSDK.SelectedCurrencies">
            <summary>
            Gets the list of selected currencies.
            </summary>
            <returns>The list of selected currencies.</returns>
        </member>
        <member name="T:SimplySDK.Reports.InventoryAndServices.PriceListReportSDK">
            <summary>
            Report SDK for price list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.InventoryAndServices.PriceListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.AcctListReportOptionsSDK">
            <summary>
            AcctListReportOptionsSDK mimic the user interface of Account List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programs.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.AcctListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the AcctListReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.AcctListReportOptionsSDK.IncludeHistoricalAccts">
            <summary>
            Gets or sets if to Include related historical accounts.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.AcctListReportOptionsSDK.IncludeDepartments">
            <summary>
            Gets or sets if to Include Departments.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.AcctListReportSDK">
            <summary>
            Report SDK for Account list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.AcctListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of an AcctListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK">
            <summary>
            ChartOfAcctsReportOptionsSDK mimic the user interface of Chart of Accounts List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the ChartOfAcctsReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.IncludeDepartments">
            <summary>
            Gets or sets if to Include Departments.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.AreAllFieldsSelected">
            <summary>
            Checks if all Fields are selected.
            </summary>
            <returns>True if all Fields are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.AnyFieldsAreSelected">
            <summary>
            Checks if all Fields are not selected.
            </summary>
            <returns>True if all Fields are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.ClickSelectAllFields">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.SelectFields(System.Collections.ArrayList)">
            <summary>
            Selects Fields from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.IsFieldSelected(System.Int32)">
            <summary>
            Checks if a Field is currently selected.
            </summary>
            <param name="ID">Id to be checked if it is selected.</param>
            <returns>True if id is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.SelectedFields">
            <summary>
            Gets the list of selected Fields.
            </summary>
            <returns>The list of selected Fields.</returns>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.SelectFieldByNdx(System.Int32)">
            <summary>
            Selects one Field from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportOptionsSDK.SelectFieldByName(System.String)">
            <summary>
            Selects one Field from the list by name.
            </summary>
            <param name="fieldName">Field Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.ChartOfAcctsReportSDK">
            <summary>
            Report SDK for Chart of Accounts list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ChartOfAcctsReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of a ChartOfAcctsReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.CustomerListReportOptionsSDK">
            <summary>
            CustomerListReportOptionsSDK mimic the user interface of Customer List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.CustomerListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the CustomerListReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.CustomerListReportOptionsSDK.IncludeInternalCustomers">
            <summary>
            Gets or sets if to Include Internal Customers.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.CustomerListReportOptionsSDK.IncludeShipToAddress">
            <summary>
            Gets or sets if to Include Ship to Address.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.CustomerListReportSDK">
            <summary>
            Report SDK for Customer list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.CustomerListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of a CustomerListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.EmployeeListReportOptionsSDK">
            <summary>
            EmployeeListReportOptionsSDK mimic the user interface of Employee List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.EmployeeListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the EmployeeListReportOptionsSDK class.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.EmployeeListReportSDK">
            <summary>
            Report SDK for Employee list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.EmployeeListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of an EmployeeListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.InventoryListReportOptionsSDK">
            <summary>
            InventoryListReportOptionsSDK mimic the user interface of Inventory List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.InventoryListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the InventoryListReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.InventoryListReportOptionsSDK.IncludeInternalServiceActivities">
            <summary>
            Gets or sets if to Include Internal Service Activities.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.InventoryListReportSDK">
            <summary>
            Report SDK for Inventory list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.InventoryListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of an InventoryListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.ListReportOptionsSDK">
            <summary>
            ListReportOptionsSDK is generic for all List reports otions.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.ListReportOptionsSDK.ListReportOptions">
            <summary>
            Gets the ListReportOptions object, so can access its methods/properties.
            For example, the Include Inactive property.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.ListReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive records.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.ListReports.ListReportOptionsSDK.InactiveString">
            <summary>
            Gets the string used in Include Inactive
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.ProjectListReportOptionsSDK">
            <summary>
            ProjectListReportOptionsSDK mimic the user interface of Project List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ProjectListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the ProjectListReportOptionsSDK class.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.ProjectListReportSDK">
            <summary>
            Report SDK for Project list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.ProjectListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of a ProjectListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.VendorListReportOptionsSDK">
            <summary>
            VendorListReportOptionsSDK mimic the user interface of Vendor List Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.VendorListReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the VendorListReportOptionsSDK class.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.ListReports.VendorListReportSDK">
            <summary>
            Report SDK for Vendor list report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.ListReports.VendorListReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns>An instance of a VendorListReportOptionsSDK.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.JobCategoryReportSDK">
            <summary>
            Report SDK for Job Category report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK">
            <summary>
            JobCategoryReportOptionsSDK mimic the user interface of JobCategory Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the JobCategoryReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.JobCategoryReportOptions">
            <summary>
            Gets the JobCategory Report Options object, so can access its methods/properties.
            For example, the category for JobCategory.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectThisYear">
            <summary>
            Selects the radio button representing this year (ie. Year 2015).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsThisYearSelected">
            <summary>
            True if the radio button representing this year (ie. Year 2015).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectLastYear">
            <summary>
            Selects the radio button representing last year (ie. Year 2014).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsLastYearSelected">
            <summary>
            True if the radio button representing last year (ie. Year 2014).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.GetSelectedAsAtText">
            <summary>
            Gets the As At text currently selected.
            </summary>
            <returns>The string representing the current As at text.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectAsAtByName(System.String)">
            <summary>
            Selects an item in As At by name.
            </summary>
            <param name="name">Name of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.AreAllJobCategorysSelected">
            <summary>
            Checks if all JobCategorys are selected.
            </summary>
            <returns>True if all JobCategorys are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.AnyJobCategorysAreSelected">
            <summary>
            Checks if all JobCategorys are not selected.
            </summary>
            <returns>True if all JobCategorys are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.ClickSelectAllJobCategorys">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectJobCategorys(System.Collections.ArrayList)">
            <summary>
            Selects JobCategorys from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsJobCategorySelected(System.Int32)">
            <summary>
            Checks if an JobCategory is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IsJobCategorySelectedByName(System.String)">
            <summary>
            Checks if an JobCategory is currently selected.
            </summary>
            <param name="name">Name to be checked.</param>
            <returns>True if name is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectedJobCategorys">
            <summary>
            Gets the list of selected JobCategorys.
            </summary>
            <returns>The list of selected JobCategorys.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectJobCategoryByNdx(System.Int32)">
            <summary>
            Selects one JobCategory from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one JobCategory from the list by name.
            </summary>
            <param name="JobCategoryName">JobCategory Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.JobCategoryInactiveString">
            <summary>
            Gets the string used in Include Inactive for JobCategorys.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.JobCategoryReportOptionsSDK.IncludeInactiveCategories">
            <summary>
            Gets the status of Include Inactive Categories.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.RemittanceReportSDK">
            <summary>
            Report SDK for Remittance report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK">
            <summary>
            RemittanceReportOptionsSDK mimic the user interface of Remittance Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the RemittanceReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.RemittanceReportOptions">
            <summary>
            Gets the Remittance Report Options object, so can access its methods/properties.
            For example, the category for Payroll Authorities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectThisYear">
            <summary>
            Selects the radio button representing this year (ie. Year 2015).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.IsThisYearSelected">
            <summary>
            True if the radio button representing this year (ie. Year 2015).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectLastYear">
            <summary>
            Selects the radio button representing last year (ie. Year 2014).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.IsLastYearSelected">
            <summary>
            True if the radio button representing last year (ie. Year 2014).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.AreAllAuthoritiesSelected">
            <summary>
            Checks if all Authorities are selected.
            </summary>
            <returns>True if all Authorities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.AnyAuthoritiesAreSelected">
            <summary>
            Checks if all Authorities are not selected.
            </summary>
            <returns>True if all Authorities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.ClickSelectAllAuthorities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectAuthorities(System.Collections.ArrayList)">
            <summary>
            Selects Authorities from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.IsAuthoritySelected(System.Int32)">
            <summary>
            Checks if an Authority is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectedAuthorities">
            <summary>
            Gets the list of selected Authorities.
            </summary>
            <returns>The list of selected Authorities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectAuthorityByNdx(System.Int32)">
            <summary>
            Selects one Authority from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.RemittanceReportOptionsSDK.SelectAuthorityByName(System.String)">
            <summary>
            Selects one Authority from the list by name.
            </summary>
            <param name="authorityName">Authority Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.EmployeeReportSDK">
            <summary>
            Report SDK for Employee report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK">
            <summary>
            EmployeeReportOptionsSDK mimic the user interface of Employee Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the EmployeeReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.EmployeeReportOptions">
            <summary>
            Gets the Employee Report Options object, so can access its methods/properties. 
            For example, the category for Employee. 
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetJobCategory">
            <summary>
            Gets the Job Category field.
            </summary>
            <returns>The name of the job category that is selected when found.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetJobCategoryAtNdx(System.Int32)">
            <summary>
            Gets the Job Category at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectJobCategory(System.String)">
            <summary>
            Selects the Job Category at index.
            </summary>
            <param name="jobCat">Name of the job category.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectThisYear">
            <summary>
            Selects the radio button representing this year (ie. Year 2015).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsThisYearSelected">
            <summary>
            True if the radio button representing this year (ie. Year 2015).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectLastYear">
            <summary>
            Selects the radio button representing last year (ie. Year 2014).
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsLastYearSelected">
            <summary>
            True if the radio button representing last year (ie. Year 2014).
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.ShowOnly">
            <summary>
            Gets the status of Show only.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.GetSelectedAsAtText">
            <summary>
            Gets the As At text currently selected.
            </summary>
            <returns>The string representing the current As at text.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectAsAtByName(System.String)">
            <summary>
            Selects an item in As At by name.
            </summary>
            <param name="name">Name of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employee is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IsEmployeeSelectedByName(System.String)">
            <summary>
            Checks if an Employee is currently selected.
            </summary>
            <param name="name">Name to be checked.</param>
            <returns>True if name is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list by name.
            </summary>
            <param name="employeeName">Employee Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.EmployeeReportOptionsSDK.IncludeInactiveEmployees">
            <summary>
            Gets the status of Include Inactive Employees.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK">
            <summary>
            DeductionsAndExpensesReportOptionsSDK mimic the user interface of Deductions And Expenses Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the DeductionsAndExpensesReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.DeductionsExpensesReportOptions">
            <summary>
            Gets the Deduction and Expense ReportOptions object, so can access its methods/properties.
            For example, the category for Deductions and Expenses.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.    
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.AreAllDedExpSelected">
            <summary>
            Checks if all Deductions and Expenses are selected.
            </summary>
            <returns>True if all Deductions and Expenses are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.AnyDedExpAreSelected">
            <summary>
            Checks if all Deductions and Expenses are not selected.
            </summary>
            <returns>True if all Deductions and Expenses are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.ClickSelectAllDedExp">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectDedExp(System.Collections.ArrayList)">
            <summary>
            Selects Deductions and Expenses from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.IsDedExpSelected(System.Int32)">
            <summary>
            Checks if an Deductions and Expenses is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectedDedExp">
            <summary>
            Gets the list of selected Deductions and Expenses.
            </summary>
            <returns>The list of selected Deductions and Expenses.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectDedExpByNdx(System.Int32)">
            <summary>
            Selects one Deductions and Expenses from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportOptionsSDK.SelectDedExpByName(System.String)">
            <summary>
            Selects one Deductions and Expenses from the list by name.
            </summary>
            <param name="deName">Deductions and Expenses Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportSDK">
            <summary>
            Report SDK for Deductions &amp; Expenses report
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.Payroll.DeductionsAndExpensesReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK">
            <summary>
            RecurringTransactionsReportOptionsSDK mimic the user interface of Recurring Transactions Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the RecurringTransactionsReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.RecurrTransReportOptions">
            <summary>
            Gets the RecurrTransReportOptions object, so can access its methods/properties.
            For example, the 1 categories for transaction types.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.IncludeTransactionsWithNoDueDate">
            <summary>
            Gets or sets if to Include transactions with no due date.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.GroupByTransactionType">
            <summary>
            Gets or sets if to Group by Transaction type.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.OnlyShowTransactionsDueOnOrBefore">
            <summary>
            Gets or sets if to Only Show Transactions Due On Or Before.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.GetSelectedTransactionTypeAtNdx(System.Int32)">
            <summary>
            Gets the selected transaction type by index.
            </summary>
            <param name="index">Index of the transaction type.</param>
            <returns>The selected transaction type.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.IsDateEnabled">
            <summary>
            Gets Date to limit the report to.
            </summary>
            <returns>True if the date limit is enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.GetDate">
            <summary>
            Gets the Date.
            </summary>
            <returns>The date.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.SetDate(System.String)">
            <summary>
            Sets the Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.GetDates">
            <summary>
            Gets the Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.SelectDateAtNdx(System.Int32)">
            <summary>
            Selects the date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status. 
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.ClickSelectAll">
            <summary>
            Simulates clicking Select All button (to select all transaction types).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.AreAllTransactionTypesSelected">
            <summary>
            Checks if all transaction types are selected.
            </summary>
            <returns>True if all items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.AnyTransactionTypesAreSelected">
            <summary>
            Checks if all transaction types are not selected.
            </summary>
            <returns>True if all transaction types are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.SelectTransactionTypeByNdx(System.Int32)">
            <summary>
            Selects one TransactionType from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.SelectTransactionTypeByName(System.String)">
            <summary>
            Selects one TransactionType from the list.
            </summary>
            <param name="transactionTypeName">Name to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.IsTransactionTypeSelected(System.Int32)">
            <summary>
            Checks if a transaction type is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.SelectTransactionTypes(System.Collections.ArrayList)">
            <summary>
            Selects transaction types from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportOptionsSDK.SelectedTransactionTypes">
            <summary>
            Gets the list of selected transaction types.
            </summary>
            <returns>The list of selected transaction types.</returns>
        </member>
        <member name="T:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportSDK">
            <summary>
            Report SDK for Recurring Transactions report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.RecurringTransactions.RecurringTransactionsReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK">
            <summary>
            TBBillingActReportOptionsSDK mimic the user interface of Billing Time by Activity Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TBBillingActReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.TBBillingActReportOptions">
            <summary>
            Gets the Time Billing By Activity Report Options object, so can access its 
            methods/properties, for example, the category for Activities.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.CheckInvoicedActivities">
            <summary>
            Sets Invoiced Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsInvoicedActivitiesChecked">
            <summary>
            True if Invoiced Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.CheckUnInvoicedActivities">
            <summary>
            Sets Un-Invoiced Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsUnInvoicedActivitiesChecked">
            <summary>
            True if Un-Invoiced Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectCategoryToReportByName(System.String)">
            <summary>
            Selects a Category in drop down list by name.
            </summary>
            <param name="categoryName">Name of category to select from drop down list.</param>
            <returns>True if categoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsCategoryToReportSelected(System.String)">
            <summary>
            Finds out if a Category is selected in drop down list named.
            Select Categories to Report.
            </summary>
            <param name="categoryName">Name of category in drop down list.</param>
            <returns>True if categoryName is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectGroupByDate">
            <summary>
            Selects Group By Date radio button.
            </summary>
            <returns>True if Group By Date is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsGroupByDateSelected">
            <summary>
            Finds out if radio button Group By Date is selected.
            </summary>
            <returns>True if Group By Date is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectGroupByCustomer">
            <summary>
            Selects Group By Customer radio button.
            </summary>
            <returns>True if Group By Customer is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsGroupByCustomerSelected">
            <summary>
            Finds out if radio button Group By Customer is selected.
            </summary>
            <returns>True if Group By Customer is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectGroupByEmployee">
            <summary>
            Selects Group By Employee radio button.
            </summary>
            <returns>True if Group By Employee is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsGroupByEmployeeSelected">
            <summary>
            Finds out if radio button Group By Employee is selected.
            </summary>
            <returns>True if Group By Employee is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsGroupByCustomerEnabled">
            <summary>
            Finds out if radio button Group By Customer is enabled.
            </summary>
            <returns>True if Group By Customer is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsGroupByEmployeeEnabled">
            <summary>
            Finds out if radio button Group By Employee is enabled.
            </summary>
            <returns>True if Group By Employee is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsGroupByDateEnabled">
            <summary>
            Finds out if radio button Group By Date is enabled.
            </summary>
            <returns>True if Group By Date is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.AreAllActivitiesSelected">
            <summary>
            Checks if all Activities are selected.
            </summary>
            <returns>True if all Activities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.AnyActivitiesAreSelected">
            <summary>
            Checks if all Activities are not selected.
            </summary>
            <returns>True if all Activities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.ClickSelectAllActivities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectActivities(System.Collections.ArrayList)">
            <summary>
            Selects Activities from list of indexes..
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsActivitySelected(System.Int32)">
            <summary>
            Checks if an Activity is currently selected.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectedActivities">
            <summary>
            Gets the list of selected Activities.
            </summary>
            <returns>The list of selected Activities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectActivityByNdx(System.Int32)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.ActivityInactiveString">
            <summary>
            Gets the string used in Include Inactive for Activity.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectActivityByName(System.String)">
            <summary>
            Selects one Activity from the list by name.
            </summary>
            <param name="activityName">Activity Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if a Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="customerName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IncludeInactiveCustomers">
            <summary>
            Gets the status of Include Inactive Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employees is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="employeeName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IncludeInactiveEmployees">
            <summary>
            Gets the status of Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Vategory is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportSDK">
            <summary>
            Report SDK for Time Billing By Activity report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingActReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK">
            <summary>
            TBBillingCustOptionsSDK mimic the user interface of Billing Time by Customer Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TBBillingCustReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.TBBillingCustReportOptions">
            <summary>
            Gets the Time Billing By Customer Report Options object, so can access its 
            methods/properties, for example, the category for Customers.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.CheckShowForeign">
            <summary>
            Sets Show Foreign button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsShowForeignChecked">
            <summary>
            True if Show Foreign is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.CheckInvoicedActivities">
            <summary>
            Sets Invoiced Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsInvoicedActivitiesChecked">
            <summary>
            True if Invoiced Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.CheckUnInvoicedActivities">
            <summary>
            Sets Un-Invoiced Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsUnInvoicedActivitiesChecked">
            <summary>
            True if Un-Invoiced Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectCategoryToReportByName(System.String)">
            <summary>
            Selects a Category in drop down list by name.
            </summary>
            <param name="categoryName">Name of category to select from drop down list.</param>
            <returns>True if categoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsCategoryToReportSelected(System.String)">
            <summary>
            Finds out if a Category is selected in drop down list named.
            Select Categories to Report.
            </summary>
            <param name="categoryName">Name of category in drop down list.</param>
            <returns>True if categoryName is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectGroupByDate">
            <summary>
            Selects Group By Date radio button.
            </summary>
            <returns>True if Group By Date is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsGroupByDateSelected">
            <summary>
            Finds out if radio button Group By Date is selected.
            </summary>
            <returns>True if Group By Date is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectGroupByActivity">
            <summary>
            Selects Group By Activity radio button.
            </summary>
            <returns>True if Group By Activity is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsGroupByActivitySelected">
            <summary>
            Finds out if radio button Group By Activity is selected.
            </summary>
            <returns>True if Group By Activity is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectGroupByEmployee">
            <summary>
            Selects Group By Employee radio button.
            </summary>
            <returns>True if Group By Employee is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsGroupByEmployeeSelected">
            <summary>
            Finds out if radio button Group By Employee is selected.
            </summary>
            <returns>True if Group By Employee is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsGroupByActivityEnabled">
            <summary>
            Finds out if radio button Group By Activity is enabled.
            </summary>
            <returns>True if Group By Activity is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsGroupByEmployeeEnabled">
            <summary>
            Finds out if radio button Group By Employee is enabled.
            </summary>
            <returns>True if Group By Employee is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsGroupByDateEnabled">
            <summary>
            Finds out if radio button Group By Date is enabled.
            </summary>
            <returns>True if Group By Date is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if a customer is currently selected.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list by name.
            </summary>
            <param name="customerName">Customer Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.AreAllActivitiesSelected">
            <summary>
            Checks if all Activities are selected.
            </summary>
            <returns>True if all activities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.AnyActivitiesAreSelected">
            <summary>
            Checks if all Activities are not selected.
            </summary>
            <returns>True if all Activities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.ClickSelectAllActivities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectedActivities">
            <summary>
            Gets the list of selected Activities.
            </summary>
            <returns>The list of selected Activities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectActivities(System.Collections.ArrayList)">
            <summary>
            Selects Activities from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.ActivityInactiveString">
            <summary>
            Gets the string used in Include Inactive for Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsActivitySelected(System.Int32)">
            <summary>
            Checks if an Activity is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectActivityByNdx(System.Int32)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectActivityByName(System.String)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="activityName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IncludeInactiveActivities">
            <summary>
            Gets the status of Include Inactive Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employees is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="employeeName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IncludeInactiveEmployees">
            <summary>
            Gets the status of Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Vategory is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportSDK">
            <summary>
            Report SDK for Time Billing By Customer report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingCustReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK">
            <summary>
            TBBillingEmpReportOptionsSDK mimic the user interface of Billing Time by Employee Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TBBillingEmpReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.TBBillingEmpReportOptions">
            <summary>
            Gets the Time Billing By Employee Report Options object, so can access its 
            methods/properties, for example, the category for Employees.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.CheckInvoicedActivities">
            <summary>
            Sets Invoiced Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsInvoicedActivitiesChecked">
            <summary>
            True if Invoiced Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.CheckUnInvoicedActivities">
            <summary>
            Sets Un-Invoiced Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsUnInvoicedActivitiesChecked">
            <summary>
            True if Un-Invoiced Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectCategoryToReportByName(System.String)">
            <summary>
            Selects a Category in drop down list by name.
            </summary>
            <param name="categoryName">Name of category to select from drop down list.</param>
            <returns>True if categoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsCategoryToReportSelected(System.String)">
            <summary>
            Finds out if a Category is selected in drop down list named.
            Select Categories to Report
            </summary>
            <param name="categoryName">Name of category in drop down list.</param>
            <returns>True if categoryName is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectGroupByDate">
            <summary>
            Selects Group By Date radio button.
            </summary>
            <returns>True if Group By Date is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsGroupByDateSelected">
            <summary>
            Finds out if radio button Group By Date is selected.
            </summary>
            <returns>True if Group By Date is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectGroupByActivity">
            <summary>
            Selects Group By Activity radio button.
            </summary>
            <returns>True if Group By Activity is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsGroupByActivitySelected">
            <summary>
            Finds out if radio button Group By Activity is selected.
            </summary>
            <returns>True if Group By Activity is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectGroupByCustomer">
            <summary>
            Selects Group By Customer radio button.
            </summary>
            <returns>True if Group By Customer is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsGroupByCustomerSelected">
            <summary>
            Finds out if radio button Group By Customer is selected.
            </summary>
            <returns>True if Group By Customer is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsGroupByActivityEnabled">
            <summary>
            Finds out if radio button Group By Activity is enabled.
            </summary>
            <returns>True if Group By Activity is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsGroupByCustomerEnabled">
            <summary>
            Finds out if radio button Group By Customer is enabled.
            </summary>
            <returns>True if Group By Customer is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsGroupByDateEnabled">
            <summary>
            Finds out if radio button Group By Date is enabled.
            </summary>
            <returns>True if Group By Date is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employee is currently selected.
            </summary>
            <param name="ID">Id to be checked if it is selected.</param>
            <returns>True if id is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list by name.
            </summary>
            <param name="employeeName">Employee Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Category is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.AreAllActivitiesSelected">
            <summary>
            Checks if all Activities are selected.
            </summary>
            <returns>True if all activities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.AnyActivitiesAreSelected">
            <summary>
            Checks if all Activities are not selected.
            </summary>
            <returns>True if all Activities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.ClickSelectAllActivities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectedActivities">
            <summary>
            Gets the list of selected Activities.
            </summary>
            <returns>The list of selected Activities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectActivities(System.Collections.ArrayList)">
            <summary>
            Selects Activities from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.ActivityInactiveString">
            <summary>
            Gets the string used in Include Inactive for Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsActivitySelected(System.Int32)">
            <summary>
            Checks if an Activity is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectActivityByNdx(System.Int32)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectActivityByName(System.String)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="activityName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IncludeInactiveActivities">
            <summary>
            Gets the status of Include Inactive Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if a Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="customerName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportOptionsSDK.IncludeInactiveCustomers">
            <summary>
            Gets the status of Include Inactive Customers.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportSDK">
            <summary>
            Report SDK for Time Billing By Employee report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Billing.TBBillingEmpReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK">
            <summary>
            TBPayrollActOptionsSDK mimic the user interface of Payroll Time by Activity Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TBPayrollActReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.TBPayrollActReportOptions">
            <summary>
            Gets the Payroll Time By Activity Report Options object, so can access its 
            methods/properties, for example, the category for Activities.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Activities
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.CheckPaidToEmployees">
            <summary>
            Sets Paid to Employees button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsPaidToEmployeesChecked">
            <summary>
            True if Paid toEmployees is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.CheckNotPaidToEmployees">
            <summary>
            Sets Not Paid to Employees button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsNotPaidToEmployeesChecked">
            <summary>
            True if Not Paid to Employees is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.CheckNonPayrollActivities">
            <summary>
            Sets Non Payroll Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsNonPayrollActivitiesChecked">
            <summary>
            True if Non Payroll Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectCategoryToReportByName(System.String)">
            <summary>
            Selects a Category in drop down list by name.
            </summary>
            <param name="categoryName">Name of category to select from drop down list.</param>
            <returns>True if categoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsCategoryToReportSelected(System.String)">
            <summary>
            Finds out if a Category is selected in drop down list named.
            Select Categories to Report.
            </summary>
            <param name="categoryName">Name of category in drop down list.</param>
            <returns>True if categoryName is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectGroupByDate">
            <summary>
            Selects Group By Date radio button.
            </summary>
            <returns>True if Group By Date is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByDateSelected">
            <summary>
            Finds out if radio button Group By Date is selected.
            </summary>
            <returns>True if Group By Date is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectGroupByCustomer">
            <summary>
            Selects Group By Customer radio button.
            </summary>
            <returns>True if Group By Customer is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByCustomerSelected">
            <summary>
            Finds out if radio button Group By Customer is selected.
            </summary>
            <returns>True if Group By Customer is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectGroupByEmployee">
            <summary>
            Selects Group By Employee radio button.
            </summary>
            <returns>True if Group By Employee is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByEmployeeSelected">
            <summary>
            Finds out if radio button Group By Employee is selected.
            </summary>
            <returns>True if Group By Employee is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectGroupByIncome">
            <summary>
            Selects Group By Income radio button.
            </summary>
            <returns>True if Group By Income is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByIncomeSelected">
            <summary>
            Finds out if radio button Group By Income is selected.
            </summary>
            <returns>True if Group By Income is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByCustomerEnabled">
            <summary>
            Finds out if radio button Group By Customer is enabled.
            </summary>
            <returns>True if Group By Customer is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByEmployeeEnabled">
            <summary>
            Finds out if radio button Group By Employee is enabled.
            </summary>
            <returns>True if Group By Employee is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByIncomeEnabled">
            <summary>
            Finds out if radio button Group By Income is enabled.
            </summary>
            <returns>True if Group By Income is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsGroupByDateEnabled">
            <summary>
            Finds out if radio button Group By Date is enabled.
            </summary>
            <returns>True if Group By Date is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AreAllActivitiesSelected">
            <summary>
            Checks if all Activities are selected.
            </summary>
            <returns>True if all Activities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AnyActivitiesAreSelected">
            <summary>
            Checks if all Activities are not selected.
            </summary>
            <returns>True if all Activities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.ClickSelectAllActivities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectActivities(System.Collections.ArrayList)">
            <summary>
            Selects Activities from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsActivitySelected(System.Int32)">
            <summary>
            Checks if an Activity is currently selected.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectedActivities">
            <summary>
            Gets the list of selected Activities.
            </summary>
            <returns>The list of selected Activities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectActivityByNdx(System.Int32)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.ActivityInactiveString">
            <summary>
            Gets the string used in Include Inactive for Activity.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectActivityByName(System.String)">
            <summary>
            Selects one Activity from the list by name.
            </summary>
            <param name="activityName">Activity Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if a Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="customerName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IncludeInactiveCustomers">
            <summary>
            Gets the status of Include Inactive Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employees is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="employeeName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IncludeInactiveEmployees">
            <summary>
            Gets the status of Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Vategory is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AreAllIncomesSelected">
            <summary>
            Checks if all Incomes are selected.
            </summary>
            <returns>True if all Incomes are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.AnyIncomesAreSelected">
            <summary>
            Checks if all Incomes are not selected
            </summary>
            <returns>True if all Incomes are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.ClickSelectAllIncomes">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectedIncomes">
            <summary>
            Gets the list of selected Incomes.
            </summary>
            <returns>The list of selected Incomes.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectIncomes(System.Collections.ArrayList)">
            <summary>
            Selects Incomes from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.IsIncomeSelected(System.Int32)">
            <summary>
            Checks if an Income is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectIncomeByNdx(System.Int32)">
            <summary>
            Selects one Income from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportOptionsSDK.SelectIncomeByName(System.String)">
            <summary>
            Selects one Income from the list.
            </summary>
            <param name="incomeName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportSDK">
            <summary>
            Report SDK for Payroll Time By Activity report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollActReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK">
            <summary>
            TBPayrollEmpOptionsSDK mimic the user interface of Payroll Time by Employee Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TBPayrollEmpReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.TBPayrollEmpReportOptions">
            <summary>
            Gets the Payroll Time By Employee Report Options object, so can access its 
            methods/properties, for example, the category for Employees.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.CheckPaidToEmployees">
            <summary>
            Sets Paid to Employees button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsPaidToEmployeesChecked">
            <summary>
            True if Paid toEmployees is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.CheckNotPaidToEmployees">
            <summary>
            Sets Not Paid to Employees button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsNotPaidToEmployeesChecked">
            <summary>
            True if Not Paid to Employees is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.CheckNonPayrollActivities">
            <summary>
            Sets Non Payroll Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsNonPayrollActivitiesChecked">
            <summary>
            True if Non Payroll Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectCategoryToReportByName(System.String)">
            <summary>
            Selects a Category in drop down list by name.
            </summary>
            <param name="categoryName">Name of category to select from drop down list.</param>
            <returns>True if categoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsCategoryToReportSelected(System.String)">
            <summary>
            Finds out if a Category is selected in drop down list named.
            Select Categories to Report.
            </summary>
            <param name="categoryName">Name of category in drop down list.</param>
            <returns>True if categoryName is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectGroupByDate">
            <summary>
            Selects Group By Date radio button.
            </summary>
            <returns>True if Group By Date is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByDateSelected">
            <summary>
            Finds out if radio button Group By Date is selected.
            </summary>
            <returns>True if Group By Date is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectGroupByActivity">
            <summary>
            Selects Group By Activity radio button.
            </summary>
            <returns>True if Group By Activity is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByActivitySelected">
            <summary>
            Finds out if radio button Group By Activity is selected.
            </summary>
            <returns>True if Group By Activity is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectGroupByCustomer">
            <summary>
            Selects Group By Customer radio button.
            </summary>
            <returns>True if Group By Customer is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByCustomerSelected">
            <summary>
            Finds out if radio button Group By Customer is selected.
            </summary>
            <returns>True if Group By Customer is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectGroupByIncome">
            <summary>
            Selects Group By Income radio button.
            </summary>
            <returns>True if Group By Income is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByIncomeSelected">
            <summary>
            Finds out if radio button Group By Income is selected.
            </summary>
            <returns>True if Group By Income is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByActivityEnabled">
            <summary>
            Finds out if radio button Group By Activity is enabled.
            </summary>
            <returns>True if Group By Activity is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByCustomerEnabled">
            <summary>
            Finds out if radio button Group By Customer is enabled.
            </summary>
            <returns>True if Group By Customer is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByIncomeEnabled">
            <summary>
            Finds out if radio button Group By Income is enabled.
            </summary>
            <returns>True if Group By Income is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsGroupByDateEnabled">
            <summary>
            Finds out if radio button Group By Date is enabled.
            </summary>
            <returns>True if Group By Date is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employee is currently selected.
            </summary>
            <param name="index">Index to be checked if it is selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list by name.
            </summary>
            <param name="employeeName">Employee Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Category is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AreAllActivitiesSelected">
            <summary>
            Checks if all Activities are selected.
            </summary>
            <returns>True if all activities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AnyActivitiesAreSelected">
            <summary>
            Checks if all Activities are not selected.
            </summary>
            <returns>True if all Activities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.ClickSelectAllActivities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectedActivities">
            <summary>
            Gets the list of selected Activities.
            </summary>
            <returns>The list of selected Activities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectActivities(System.Collections.ArrayList)">
            <summary>
            Selects Activities from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.ActivityInactiveString">
            <summary>
            Gets the string used in Include Inactive for Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsActivitySelected(System.Int32)">
            <summary>
            Checks if an Activity is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectActivityByNdx(System.Int32)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectActivityByName(System.String)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="activityName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IncludeInactiveActivities">
            <summary>
            Gets the status of Include Inactive Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if a Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="customerName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IncludeInactiveCustomers">
            <summary>
            Gets the status of Include Inactive Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AreAllIncomesSelected">
            <summary>
            Checks if all Incomes are selected.
            </summary>
            <returns>True if all Incomes are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.AnyIncomesAreSelected">
            <summary>
            Checks if all Incomes are not selected.
            </summary>
            <returns>True if all Incomes are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.ClickSelectAllIncomes">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectedIncomes">
            <summary>
            Gets the list of selected Incomes.
            </summary>
            <returns>The list of selected Incomes.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectIncomes(System.Collections.ArrayList)">
            <summary>
            Selects Incomes from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.IsIncomeSelected(System.Int32)">
            <summary>
            Checks if an Income is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectIncomeByNdx(System.Int32)">
            <summary>
            Selects one Income from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportOptionsSDK.SelectIncomeByName(System.String)">
            <summary>
            Selects one Income from the list.
            </summary>
            <param name="customerName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportSDK">
            <summary>
            Report SDK for Payroll Billing By Employee report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollEmpReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK">
            <summary>
            TBPayrollIncReportOptionsSDK mimic the user interface of Payroll Time by Income Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TBPayrollIncReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.TBPayrollIncReportOptions">
            <summary>
            Gets the Payroll Time By Income Report Options object, so can access its 
            methods/properties, for example, the category for Incomes.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Incomes.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.CheckPaidToEmployees">
            <summary>
            Sets Paid to Employees button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsPaidToEmployeesChecked">
            <summary>
            True if Paid toEmployees is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.CheckNotPaidToEmployees">
            <summary>
            Sets Not Paid to Employees button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsNotPaidToEmployeesChecked">
            <summary>
            True if Not Paid to Employees is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.CheckNonPayrollActivities">
            <summary>
            Sets Non Payroll Activities button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsNonPayrollActivitiesChecked">
            <summary>
            True if Non Payroll Activities is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectCategoryToReportByName(System.String)">
            <summary>
            Selects a Category in drop down list by name.
            </summary>
            <param name="categoryName">Name of category to select from drop down list.</param>
            <returns>True if categoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsCategoryToReportSelected(System.String)">
            <summary>
            Finds out if a Category is selected in drop down list named.
            Select Categories to Report.
            </summary>
            <param name="categoryName">Name of category in drop down list.</param>
            <returns>True if categoryName is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectGroupByDate">
            <summary>
            Selects Group By Date radio button.
            </summary>
            <returns>True if Group By Date is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByDateSelected">
            <summary>
            Finds out if radio button Group By Date is selected.
            </summary>
            <returns>True if Group By Date is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectGroupByCustomer">
            <summary>
            Selects Group By Customer radio button.
            </summary>
            <returns>True if Group By Customer is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByCustomerSelected">
            <summary>
            Finds out if radio button Group By Customer is selected.
            </summary>
            <returns>True if Group By Customer is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectGroupByEmployee">
            <summary>
            Selects Group By Employee radio button.
            </summary>
            <returns>True if Group By Employee is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByEmployeeSelected">
            <summary>
            Finds out if radio button Group By Employee is selected.
            </summary>
            <returns>True if Group By Employee is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectGroupByActivity">
            <summary>
            Selects Group By Activity radio button.
            </summary>
            <returns>True if Group By Activity is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByActivitySelected">
            <summary>
            Finds out if radio button Group By Activity is selected.
            </summary>
            <returns>True if Group By Activity is currently selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByCustomerEnabled">
            <summary>
            Finds out if radio button Group By Customer is enabled.
            </summary>
            <returns>True if Group By Customer is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByEmployeeEnabled">
            <summary>
            Finds out if radio button Group By Employee is enabled.
            </summary>
            <returns>True if Group By Employee is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByActivityEnabled">
            <summary>
            Finds out if radio button Group By Activity is enabled.
            </summary>
            <returns>True if Group By Activity is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsGroupByDateEnabled">
            <summary>
            Finds out if radio button Group By Date is enabled.
            </summary>
            <returns>True if Group By Date is currently enabled.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AreAllIncomesSelected">
            <summary>
            Checks if all Incomes are selected.
            </summary>
            <returns>True if all Incomes are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AnyIncomesAreSelected">
            <summary>
            Checks if all Incomes are not selected
            </summary>
            <returns>True if all Incomes are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.ClickSelectAllIncomes">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectIncomes(System.Collections.ArrayList)">
            <summary>
            Selects Incomes from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsIncomeSelected(System.Int32)">
            <summary>
            Checks if an Incomes is currently selected.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectedIncomes">
            <summary>
            Gets the list of selected Incomes.
            </summary>
            <returns>The list of selected Incomes.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectIncomeByNdx(System.Int32)">
            <summary>
            Selects one Income from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectIncomeByName(System.String)">
            <summary>
            Selects one Income from the list by name.
            </summary>
            <param name="incomeName">Income Name to be selected</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if a Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="customerName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IncludeInactiveCustomers">
            <summary>
            Gets the status of Include Inactive Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employees is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="employeeName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IncludeInactiveEmployees">
            <summary>
            Gets the status of Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Vategory is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AreAllActivitiesSelected">
            <summary>
            Checks if all Activities are selected.
            </summary>
            <returns>True if all Activities are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.AnyActivitiesAreSelected">
            <summary>
            Checks if all Activities are not selected.
            </summary>
            <returns>True if all Activities are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.ClickSelectAllActivities">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectedActivities">
            <summary>
            Gets the list of selected Activities.
            </summary>
            <returns>The list of selected Activities.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectActivities(System.Collections.ArrayList)">
            <summary>
            Selects Activities from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.ActivityInactiveString">
            <summary>
            Gets the string used in Include Inactive for Activities.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IsActivitySelected(System.Int32)">
            <summary>
            Checks if a Activities is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectActivityByNdx(System.Int32)">
            <summary>
            Selects one Activities from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.SelectActivityByName(System.String)">
            <summary>
            Selects one Activity from the list.
            </summary>
            <param name="activityName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportOptionsSDK.IncludeInactiveActivities">
            <summary>
            Gets the status of Include Inactive Activities.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportSDK">
            <summary>
            Report SDK for Payroll Time By Income report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Payroll.TBPayrollIncReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK">
            <summary>
            TimeSlipAllocEmpReportOptionsSDK mimic the user interface of Time Slip Allocation by Employee Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TimeSlipAllocEmpReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.TimeSlipAllocEmpReportOptions">
            <summary>
            Gets the Time Slip Allocation By Employee Report Options object, so can access its 
            methods/properties, for example, the category for Employees.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employee is currently selected.
            </summary>
            <param name="index">Index to be checked if it is selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list by name.
            </summary>
            <param name="employeeName">Employee Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Category is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.AreAllProjectsSelected">
            <summary>
            Checks if all Projects are selected.
            </summary>
            <returns>True if all Projects are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.AnyProjectsAreSelected">
            <summary>
            Checks if all Projects are not selected.
            </summary>
            <returns>True if all Projects are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.ClickSelectAllProjects">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectedProjects">
            <summary>
            Gets the list of selected Projects.
            </summary>
            <returns>The list of selected Projects.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectProjects(System.Collections.ArrayList)">
            <summary>
            Selects Projects from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.ProjectInactiveString">
            <summary>
            Gets the string used in Include Inactive for Project.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IsProjectSelected(System.Int32)">
            <summary>
            Checks if an Project is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectProjectByNdx(System.Int32)">
            <summary>
            Selects one Project from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.SelectProjectByName(System.String)">
            <summary>
            Selects one Project from the list.
            </summary>
            <param name="activityName">Name in the list to be selected.</param>
            <returns>True if name was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportOptionsSDK.IncludeInactiveProjects">
            <summary>
            Gets the status of Include Inactive Projects.
            </summary>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportSDK">
            <summary>
            Report SDK for TimeSlip Allocation By Employee report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.Project.TimeSlipAllocEmpReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TBReports.TBHelper">
            <summary>
            TBHelper has static methods that are common to all Time and Billing reports.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.TBHelper.GetIDFor(System.String,Sage.Simply.Common.ListItemCollection)">
            <summary>
            Gets ID for itemName in list.
            </summary>
            <param name="itemName">Name item whose ID is needed.</param>
            <param name="list">List of items.</param>
            <returns>ID number.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.TBHelper.GetCategoryFor(System.String,Simply.Domain.Reports.TimeBilling.TBOptions)">
            <summary>
            Gets Category by Name.
            Either Employees or Activities or Customers.
            </summary>
            <param name="groupName">Category Name.</param>
            <param name="tbOptions">Time Billing report options object.</param>
            <returns>Category whose name is groupName.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.TBHelper.IsGroupSelected(System.String,Simply.Domain.Reports.TimeBilling.TBOptions)">
            <summary>
            True if groupName is currently selected.
            </summary>
            <param name="groupName">Name of Group.</param>
            <param name="tbOptions">Time Billing report options object.</param>
            <returns>True if groupName is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TBReports.TBHelper.IsGroupEnabled(System.Int32,Simply.Domain.Reports.TimeBilling.TBOptions)">
            <summary>
            True if groupName index is currently enabled.
            </summary>
            <param name="index">Group index.</param>
            <param name="tbOptions">Time Billing report options object.</param>
            <returns>True if groupName index is enabled.</returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK">
            <summary>
            TimeSlipPayrollOptionsSDK mimic the user interface of Time and Billing - Payroll TimeSlipPayroll Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.#ctor">
            <summary>
            Initializes a new instance of the TimeSlipPayrollReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.TimeSlipPayrollReportOptions">
            <summary>
            Gets the Time Slip Payroll Report Options object, so can access its 
            methods/properties, for example, the category for Employees.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.GetStartDate">
            <summary>
            Gets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.GetFinishDate">
            <summary>
            Gets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.GetStartDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.GetFinishDates">
            <summary>
            Gets the Finish Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SetStartDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SetFinishDate(System.String)">
            <summary>
            Sets the Finish Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectStartDateAtNdx(System.Int32)">
            <summary>
            Selects the Start date at index.
            </summary>
            <param name="index">Index in Start date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectFinishDateAtNdx(System.Int32)">
            <summary>
            Selects the Finish date at index.
            </summary>
            <param name="index">Index in Finish date.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.AreAllEmployeesSelected">
            <summary>
            Checks if all Employees are selected.
            </summary>
            <returns>True if all Employees are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.AnyEmployeesAreSelected">
            <summary>
            Checks if all Employees are not selected.
            </summary>
            <returns>True if all Employees are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.ClickSelectAllEmployees">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectEmployees(System.Collections.ArrayList)">
            <summary>
            Selects Employees from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.IsEmployeeSelected(System.Int32)">
            <summary>
            Checks if an Employee is currently selected.
            </summary>
            <param name="index">Index to be checked if it is selected.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectedEmployees">
            <summary>
            Gets the list of selected Employees.
            </summary>
            <returns>The list of selected Employees.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectEmployeeByNdx(System.Int32)">
            <summary>
            Selects one Employee from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.EmployeeInactiveString">
            <summary>
            Gets the string used in Include Inactive for Employees.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectEmployeeByName(System.String)">
            <summary>
            Selects one Employee from the list by name.
            </summary>
            <param name="employeeName">Employee Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.SelectJobCategoryByName(System.String)">
            <summary>
            Selects one Job Category from the list.
            </summary>
            <param name="jobCategoryName">Name in the list to be selected.</param>
            <returns>True if jobCategoryName was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportOptionsSDK.IsJobCategorySelected(System.String)">
            <summary>
            Checks if a Job Vategory is currently selected.
            </summary>
            <param name="jobCategoryName">Job Category Name.</param>
            <returns>True if jobCategoryName is selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportSDK">
            <summary>
            Report SDK for Time Billing - Time Slip Payroll report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.TimeBilling.TimeSlipPayroll.TimeSlipPayrollReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendSalOrdersByInvItmReportSDK">
            <summary>
            Report SDK for Pending Sales Orders By Inventory Item report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendSalOrdersByInvItmReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK">
            <summary>
            PendOrdersByInvItmReportOptionsSDK mimic the user interface of Pending Orders By Inventory Item Report Options.
            Applies to both Vendor and Customers.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.#ctor(Simply.Domain.Reports.VendCustReports.PendOrdersByInvItemReports.PendOrdersByInvItemReportVCDiff)">
            <summary>
            Initializes a new instance of the PendOrdersByInvItmReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.PendOrdersByInvItmReportOptions">
            <summary>
            Gets the Pending Orders By Inv Item Report Options object, so can access its methods/properties.
            For example, the category for Vendors / Customers.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Items.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckAllItems">
            <summary>
            Sets All Items button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckInventoryItems">
            <summary>
            Sets Inventory Items button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckServiceItems">
            <summary>
            Sets Service Items button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckActivities">
            <summary>
            Sets Activities button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsAllItemsChecked">
            <summary>
            Gets All Items button's status.    
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsInventoryItemsChecked">
            <summary>
            Gets Inventory Items button's status.     
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsServiceItemsChecked">
            <summary>
            Gets Service Items button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsActivitiesChecked">
            <summary>
            Gets Activities button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsAllItemsEnabled">
            <summary>
            True if All Items radio button is currently enabled (not hidden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsInventoryItemsEnabled">
            <summary>
            True if Inventory Items radio button is currently enabled.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsServiceItemsEnabled">
            <summary>
            True if Service Items radio button is currently enabled (not hidden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsActivitiesEnabled">
            <summary>
            True if Activities radio button is currently enabled (not hidden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckNoGrouping">
            <summary>
            Sets No Grouping button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckGroupByLocation">
            <summary>
            Sets Group by location button on.
            </summary>
            <returns>True if it was set correctly.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsNoGroupingChecked">
            <summary>
            Gets Activities button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsGroupByLocationChecked">
            <summary>
            Gets Activities button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsNoGroupingEnabled">
            <summary>
            True if No Grouping is currently enabled (not hidden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsGroupByLocationEnabled">
            <summary>
            True if Group by location is currently enabled (not hidden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckShowForeign">
            <summary>
            Sets Show Foreign button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsShowForeignChecked">
            <summary>
            True if Show Foreign is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.CheckShowLocation">
            <summary>
            Sets Show location button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsShowLocationChecked">
            <summary>
            True if Show location is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsShowLocationEnabled">
            <summary>
            True if Show location is currently enabled (not hidden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.GetAsAtDate">
            <summary>
            Gets the As At Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SetAsAtDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.GetAsAtDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectAsAtDateAtNdx(System.Int32)">
            <summary>
            Selects the As At Date at index.
            </summary>
            <param name="index">Index in Date list.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.GetSelectedAsAtText">
            <summary>
            Gets the As At text currently selected.
            </summary>
            <returns>The string representing the current As at text.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectAsAtByName(System.String)">
            <summary>
            Selects an item in As At by name.
            </summary>
            <param name="name">Name of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.ClickSelectLocations">
            <summary>
            Method to simulate clicking Select Locations, allowing access to 
            all needed properties / methods associated with the Select Locations dialog.
            </summary>
            <returns>The Select Departments SDK model.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.    
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.AreAllItemsSelected">
            <summary>
            Checks if all Items are selected.
            </summary>
            <returns>True if all items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.AreNoneSelected">
            <summary>
            Checks if no Items are selected.
            </summary>
            <returns>True if no items are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.AnyItemsAreSelected">
            <summary>
            Checks if all Items are not selected.
            </summary>
            <returns>True if all Items are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.ClickSelectAllItems">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectItems(System.Collections.ArrayList)">
            <summary>
            Selects Items from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.IsItemSelected(System.Int32)">
            <summary>
            Checks if an item is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if id is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectedItems">
            <summary>
            Gets the list of selected Items.
            </summary>
            <returns>The list of selected items.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectItemByNdx(System.Int32)">
            <summary>
            Selects one Item from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.ItemInactiveString">
            <summary>
            Gets the string used in Include Inactive for Vendors.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendOrdersByInvItmReportOptionsSDK.SelectItemByName(System.String)">
            <summary>
            Selects one Item from the list by name.
            </summary>
            <param name="itemName">Item Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendPurOrdersByInvItmReportSDK">
            <summary>
            Report SDK for Pending Purchase Orders By Inventory Item report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByInvItmReports.PendPurOrdersByInvItmReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByCustReportSDK">
            <summary>
            Report SDK for Pending Orders By Customer report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByCustReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK">
            <summary>
            PendOrdersByVCReportOptionsSDK mimic the user interface of Pending Orders By V / C Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.#ctor(Simply.Domain.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportDiff)">
            <summary>
            Initializes a new instance of the PendOrdersByVCReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.PendOrdersByVCReportOptions">
            <summary>
            Gets the Pending Orders By V / C Report Options object, so can access its methods/properties. 
            For example, the category for Vendors / Customers. 
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Vendors.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.CheckShowForeign">
            <summary>
            Sets Show Foreign button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsShowForeignChecked">
            <summary>
            True if Show Foreign is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.CheckGroupByDepartments">
            <summary>
            Sets Group by Departments button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsGroupByDepartmentsChecked">
            <summary>
            True if Group By Departments is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.CheckShowLocation">
            <summary>
            Sets Show location button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsShowLocationChecked">
            <summary>
            True if Show location is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsShowLocationEnabled">
            <summary>
            True if Show location is currently enabled (not hiden).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.GetAsAtDate">
            <summary>
            Gets the As At Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SetAsAtDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.GetAsAtDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectAsAtDateAtNdx(System.Int32)">
            <summary>
            Selects the As At Date at index.
            </summary>
            <param name="index">Index in Date list.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.GetSelectedAsAtText">
            <summary>
            Gets the As At text currently selected.
            </summary>
            <returns>The string representing the current As at text.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectAsAtByName(System.String)">
            <summary>
            Selects an item in As At by name.
            </summary>
            <param name="name">Name of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status.      
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.ClickSelectDepartments">
            <summary>
            Method to simulate clicking Select Departments, allowing access to 
            all needed properties / methods associated with the Select Departments dialog.
            </summary>
            <returns>The Select Departments SDK model.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.AreAllVendorsSelected">
            <summary>
            Checks if all Vendors are selected.
            </summary>
            <returns>True if all vendors are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.AnyVendorsAreSelected">
            <summary>
            Checks if all Vendors are not selected.
            </summary>
            <returns>True if all Vendors are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.ClickSelectAllVendors">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectVendors(System.Collections.ArrayList)">
            <summary>
            Selects Vendors from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsVendorSelected(System.Int32)">
            <summary>
            Checks if an vendor is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectedVendors">
            <summary>
            Gets the list of selected Vendors.
            </summary>
            <returns>The list of selected vendors.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectVendorByNdx(System.Int32)">
            <summary>
            Selects one Vendor from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.VendorInactiveString">
            <summary>
            Gets the string used in Include Inactive for Vendors.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectVendorByName(System.String)">
            <summary>
            Selects one Vendor from the list by name.
            </summary>
            <param name="vendorName">Vendor Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if an Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVCReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list by name.
            </summary>
            <param name="customerName">Customer Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVndReportSDK">
            <summary>
            Report SDK for Pending Orders By Vendor report.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.PendOrdersByVCReports.PendOrdersByVndReportSDK.CreateReportOptionsSDK">
            <summary>
            Create Report options SDK for this report.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK">
            <summary>
            VCAgedReportOptionsSDK mimic the user interface of V / C Aged Report Options.
            The purpose of this class is to provide convenient way to write unit testing cases first.
            Might be used in the future as software development kit for third party programmers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.#ctor(Simply.Domain.Reports.VendCustReports.VCOverdueReports.VCAgedOverdueReportDiff)">
            <summary>
            Initializes a new instance of the VCAgedReportOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.VCAgedReportOptions">
            <summary>
            Gets the Pending Orders By V / C Report Options object, so can access its methods/properties.
            For example, the category for Vendors / Customers.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IncludeInactive">
            <summary>
            Gets or sets if to Include Inactive Vendors.
            </summary>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IncludeInvoicesPaidNumberOfDays">
            <summary>
            Gets or sets the Include Invoices paid in the last XXX days.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectSummary">
            <summary>
            Selects Summary radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsSummarySelected">
            <summary>
            True if Summary is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectDetail">
            <summary>
            Selects Detail radio button.
            </summary>
            <returns>True if selected successfully.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsDetailSelected">
            <summary>
            True if Detail is currently selected.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.CheckShowForeign">
            <summary>
            Sets Show Foreign button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsShowForeignChecked">
            <summary>
            True if Show Foreign is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.CheckIncludeTerms">
            <summary>
            Sets Include Terms button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsIncludeTermsChecked">
            <summary>
            True if Include Terms is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.CheckIncludeHistoricalDifferences">
            <summary>
            Sets Include Historical Differences button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsIncludeHistoricalDifferencesChecked">
            <summary>
            True if Include Historical Differences is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.CheckGroupByDepartments">
            <summary>
            Sets Group by Departments button on / off.
            </summary>
            <returns>True if it was set on (Checked).</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsGroupByDepartmentsChecked">
            <summary>
            True if Group By Departments is currently checked (on).
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.GetAsAtDate">
            <summary>
            Gets the As At Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SetAsAtDate(System.String)">
            <summary>
            Sets the Start Date.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.GetAsAtDates">
            <summary>
            Gets the Start Date List.
            </summary>
            <returns>A list of dates in string format.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectAsAtDateAtNdx(System.Int32)">
            <summary>
            Selects the As At Date at index.
            </summary>
            <param name="index">Index in Date list.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.GetSelectedAsAtText">
            <summary>
            Gets the As At text currently selected.
            </summary>
            <returns>The string representing the current As at text.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectAsAtByName(System.String)">
            <summary>
            Selects an item in As At by name.
            </summary>
            <param name="name">Name of the item to be selected.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsOKEnabled">
            <summary>
            Gets OK button's status. 
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.ClickSelectDepartments">
            <summary>
            Method to simulate clicking Select Departments, allowing access to 
            all needed properties / methods associated with the Select Departments dialog.
            </summary>
            <returns>The Select Departments SDK model.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.AreAllVendorsSelected">
            <summary>
            Checks if all Vendors are selected.
            </summary>
            <returns>True if all vendors are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.AnyVendorsAreSelected">
            <summary>
            Checks if all Vendors are not selected.
            </summary>
            <returns>True if all Vendors are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.ClickSelectAllVendors">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectVendors(System.Collections.ArrayList)">
            <summary>
            Selects Vendors from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsVendorSelected(System.Int32)">
            <summary>
            Checks if an vendor is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectedVendors">
            <summary>
            Gets the list of selected Vendors.
            </summary>
            <returns>The list of selected vendors.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectVendorByNdx(System.Int32)">
            <summary>
            Selects one Vendor from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.VendorInactiveString">
            <summary>
            Gets the string used in Include Inactive for Vendors.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectVendorByName(System.String)">
            <summary>
            Selects one Vendor from the list by name.
            </summary>
            <param name="vendorName">Vendor Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.AreAllCustomersSelected">
            <summary>
            Checks if all Customers are selected.
            </summary>
            <returns>True if all Customers are selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.AnyCustomersAreSelected">
            <summary>
            Checks if all Customers are not selected.
            </summary>
            <returns>True if all Customers are unselected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.ClickSelectAllCustomers">
            <summary>
            Simulates clicking Select All button.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectCustomers(System.Collections.ArrayList)">
            <summary>
            Selects Customers from list of indexes.
            </summary>
            <param name="list">List of indexes.</param>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.IsCustomerSelected(System.Int32)">
            <summary>
            Checks if an Customer is currently selected.
            </summary>
            <param name="index">Index to be checked.</param>
            <returns>True if index is selected.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectedCustomers">
            <summary>
            Gets the list of selected Customers.
            </summary>
            <returns>The list of selected Customers.</returns>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectCustomerByNdx(System.Int32)">
            <summary>
            Selects one Customer from the list.
            </summary>
            <param name="index">Index to be selected.</param>
            <returns>True if index was selected.</returns>
        </member>
        <member name="P:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.CustomerInactiveString">
            <summary>
            Gets the string used in Include Inactive for Customers.
            </summary>
        </member>
        <member name="M:SimplySDK.Reports.VendCustReports.VCAgedReports.VCAgedReportOptionsSDK.SelectCustomerByName(System.String)">
            <summary>
            Selects one Customer from the list by name.
            </summary>
            <param name="customerName">Customer Name to be selected.</param>
            <returns>True if id was selected.</returns>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Company.CompanySystemSDK">
            <summary>
            Handles company system settings.
            </summary>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Company.CompanySystemSDK.#ctor(Simply.Domain.Setup.Settings.CompanySystemModel)">
            <summary>
            Initializes a new instance of the CompanySystemSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Company.CompanySystemSDK.UseCashBasisAccounting">
            <summary>
            Gets or sets if the company uses cash-basis accounting.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Company.CompanySystemSDK.CashAccountingDate">
            <summary>
            Gets or set the cash accounting date.
            </summary>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK">
            <summary>
            Handles setting customer terminology.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.CustomerAdditionalInfoTitles">
            <summary>
            To expose the additional information entity for the particular module
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.ARCustomers">
            <summary>
            Gets the terminology index for term 'customers'.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.ARSales">
            <summary>
            Gets the terminology index for term 'sales'.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.ARInvoices">
            <summary>
            Gets the terminology index for term 'invoices'.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.ARReceipts">
            <summary>
            Gets the terminology index for term 'receipts'.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.NumberOfAdditionalInfoTitles">
            <summary>
            Returns the number of Additional Information Titles for customers.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.NumberOfAdditionalInfoTitlesInUse">
            <summary>
            Returns the number of Additional Information Titles in use by customers.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.GetAdditionalInfoTitle(System.Int32)">
            <summary>
            Gets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <returns>The Additional Information Title.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Customer.CustomerNamesSDK.SetAdditionalInfoTitle(System.Int32,System.String)">
            <summary>
            Sets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <param name="value">The title to set.</param>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Inventory.InventoryNamesSDK">
            <summary>
            Handles setting inventory terminology.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Inventory.InventoryNamesSDK.InventoryAdditionalInfoTitles">
            <summary>
            To expose the additional information entity for the particular module
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Inventory.InventoryNamesSDK.NumberOfAdditionalInfoTitles">
            <summary>
            Returns the number of Additional Information Titles for inventory.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Inventory.InventoryNamesSDK.NumberOfAdditionalInfoTitlesInUse">
            <summary>
            Returns the number of Additional Information Titles in use by inventory.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Inventory.InventoryNamesSDK.GetAdditionalInfoTitle(System.Int32)">
            <summary>
            Gets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <returns>The Additional Information Title.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Inventory.InventoryNamesSDK.SetAdditionalInfoTitle(System.Int32,System.String)">
            <summary>
            Sets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <param name="value">The title to set.</param>
        </member>
        <member name="T:SimplySDK.Setup.Settings.NamesTerminologySDK">
            <summary>
            Class to handle the Settings function of Simply Accounting.
            </summary>
        </member>
        <member name="M:SimplySDK.Setup.Settings.NamesTerminologySDK.#ctor">
            <summary>
            Initializes a new instance of the NamesTerminologySDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.NamesTerminologySDK.CompName">
            <summary>
            Gets the company name.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.NamesTerminologySDK.CompTerminology">
            <summary>
            Gets the company terminology.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.NamesTerminologySDK.NamesTerminologyModel">
            <summary>
            Gets the name terminology model.
            </summary>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Payroll.PayrollNamesSDK">
            <summary>
            Handles setting payroll terminology.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Payroll.PayrollNamesSDK.PayrollAdditionalInfoTitles">
            <summary>
            To expose the additional information entity for the particular module
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Payroll.PayrollNamesSDK.NumberOfAdditionalInfoTitles">
            <summary>
            Returns the number of Additional Information Titles for payroll.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Payroll.PayrollNamesSDK.NumberOfAdditionalInfoTitlesInUse">
            <summary>
            Returns the number of Additional Information Titles in use by payroll.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Payroll.PayrollNamesSDK.GetAdditionalInfoTitle(System.Int32)">
            <summary>
            Gets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <returns>The Additional Information Title.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Payroll.PayrollNamesSDK.SetAdditionalInfoTitle(System.Int32,System.String)">
            <summary>
            Sets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <param name="value">The title to set.</param>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK">
            <summary>
            Handles setting project terminology.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK.ProjectsAdditionalInfoTitles">
            <summary>
            To expose the additional information entity for the particular module
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK.ProjectsTitle">
            <summary>
            Get or Set the Project Title (Name).
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK.NumberOfAdditionalInfoTitles">
            <summary>
            Returns the number of Additional Information Titles for projects.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK.NumberOfAdditionalInfoTitlesInUse">
            <summary>
            Returns the number of Additional Information Titles in use by projects.
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK.GetAdditionalInfoTitle(System.Int32)">
            <summary>
            Gets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <returns>The Additional Information Title.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Projects.ProjectsNamesSDK.SetAdditionalInfoTitle(System.Int32,System.String)">
            <summary>
            Sets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <param name="value">The title to set.</param>
        </member>
        <member name="T:SimplySDK.Setup.Settings.SettingsSDK">
            <summary>
            Class to handle the Settings function of Simply Accounting.
            </summary>
        </member>
        <member name="M:SimplySDK.Setup.Settings.SettingsSDK.#ctor">
            <summary>
            Initializes a new instance of the SettingsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.SettingsModel">
            <summary>
            Gets the SettingsModel.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.CompanySystemPage">
            <summary>
            Gets the company system settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.VendorOptionsPage">
            <summary>
            Gets the company vendor settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.VendorDutyPage">
            <summary>
            Gets the company vendor duty settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.VendorNamesPage">
            <summary>
            Gets the vendor names settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.CustomerNamesPage">
            <summary>
            Gets the customer names settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.PayrollNamesPage">
            <summary>
            Gets the payroll names settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.InventoryNamesPage">
            <summary>
            Gets the inventory names settings.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.SettingsSDK.ProjectsNamesPage">
            <summary>
            Gets the project names settings.
            </summary>
        </member>
        <member name="M:SimplySDK.Setup.Settings.SettingsSDK.Save">
            <summary>
            To mimic clicking the OK button of the Settings window to save changes.
            </summary>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK">
            <summary>
            Handles setting vendor terminology.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.VendorAdditionalInfoTitles">
            <summary>
            To expose the additional information entity for the particular module
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.APVendors">
            <summary>
            Gets the terminology index for term 'vendors'
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.APPurchases">
            <summary>
            Gets the terminology index for term 'purchases'
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.APInvoices">
            <summary>
            Gets the terminology index for term 'invoices'
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.APPayments">
            <summary>
            Gets the terminology index for term 'payments'
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.NumberOfAdditionalInfoTitles">
            <summary>
            Returns the number of Additional Information Titles for vendors
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.NumberOfAdditionalInfoTitlesInUse">
            <summary>
            Returns the number of Additional Information Titles in use by vendors
            </summary>
            <returns>The number of titles.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.GetAdditionalInfoTitle(System.Int32)">
            <summary>
            Gets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <returns>The Additional Information Title.</returns>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Vendor.VendorNamesSDK.SetAdditionalInfoTitle(System.Int32,System.String)">
            <summary>
            Sets the Additional Information Titles by line number.
            </summary>
            <param name="number">The line number.</param>
            <param name="value">The title to set.</param>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Vendor.VendorOptionsSDK">
            <summary>
            Handles company settings for vendors.
            </summary>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Vendor.VendorOptionsSDK.#ctor(Simply.Domain.Setup.Settings.VendorPurchase.VendorOptionsModel)">
            <summary>
            Initializes a new instance of the VendorOptionsSDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorOptionsSDK.FirstAgingPeriod">
            <summary>
            Gets or sets the first aging period.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorOptionsSDK.SecondAgingPeriod">
            <summary>
            Gets or sets the second aging period.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorOptionsSDK.ThirdAgingPeriod">
            <summary>
            Gets or sets the third aging period.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorOptionsSDK.CalculateDiscountsBeforeTax">
            <summary>
            Gets or sets if discounts should be calculated before tax for vendors.
            </summary>
        </member>
        <member name="T:SimplySDK.Setup.Settings.Vendor.VendorDutySDK">
            <summary>
            Handles setting of vendor duty information.
            </summary>
        </member>
        <member name="M:SimplySDK.Setup.Settings.Vendor.VendorDutySDK.#ctor(Simply.Domain.Setup.Settings.VendorPurchase.VendorDutyModel)">
            <summary>
            Initializes a new instance of the VendorDutySDK class.
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorDutySDK.TrackDutyOnImportedItems">
            <summary>
            Gets or sets whether to track duty on vendor 
            </summary>
        </member>
        <member name="P:SimplySDK.Setup.Settings.Vendor.VendorDutySDK.ImportDutyAccount">
            <summary>
            Gets or sets the duty account 
            </summary>
        </member>
    </members>
</doc>
